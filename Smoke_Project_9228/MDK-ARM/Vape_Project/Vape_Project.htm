<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [Vape_Project\Vape_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image Vape_Project\Vape_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat Aug 08 12:43:55 2020
<BR><P>
<H3>Maximum Stack Usage =        600 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Main_interface &rArr; Main_operation &rArr; Disp_Data_Arc &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[38]">DMA1_Stream1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">DMA1_Stream1_IRQHandler</a><BR>
 <LI><a href="#[472]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[472]">_Findy1</a><BR>
 <LI><a href="#[474]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[474]">_Findx1</a><BR>
 <LI><a href="#[473]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[473]">_Findx0</a><BR>
 <LI><a href="#[27a]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[280]">_InitOnce</a><BR>
 <LI><a href="#[436]">_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[436]">_Error_Handler</a><BR>
 <LI><a href="#[46e]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46e]">WM__InvalidateRect</a><BR>
 <LI><a href="#[46f]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46f]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[469]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[469]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[465]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[462]">WM__SendMessage</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3e]">ADC_IRQHandler</a> from stm32f4xx_it.o(i.ADC_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[ca]">AUTO_MODE_Set_interface</a> from system_settings_interface.o(i.AUTO_MODE_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[8e]">Arc_Elongation</a> from main interface.o(i.Arc_Elongation) referenced from main interface.o(i.Disp_Arc_angle)
 <LI><a href="#[90]">Arc_SPPElongation</a> from main interface.o(i.Arc_SPPElongation) referenced from main interface.o(i.Disp_Arc_angle)
 <LI><a href="#[8f]">Arc_SPPShorten</a> from main interface.o(i.Arc_SPPShorten) referenced from main interface.o(i.Disp_Arc_angle)
 <LI><a href="#[6d]">Atomizer_inquiry_interface</a> from atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface) referenced from public.o(i.Atomizer_inquiry_GOTO)
 <LI><a href="#[6d]">Atomizer_inquiry_interface</a> from atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[78]">BOOT_LOGO_interface</a> from one_power_interface.o(i.BOOT_LOGO_interface) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[78]">BOOT_LOGO_interface</a> from one_power_interface.o(i.BOOT_LOGO_interface) referenced from one_power_interface.o(i.One_Power_interface)
 <LI><a href="#[78]">BOOT_LOGO_interface</a> from one_power_interface.o(i.BOOT_LOGO_interface) referenced from system_off_interface.o(i.System_off_interface)
 <LI><a href="#[78]">BOOT_LOGO_interface</a> from one_power_interface.o(i.BOOT_LOGO_interface) referenced from alarm_interface.o(i.USB_Warning_interface)
 <LI><a href="#[70]">Batt_error_interface</a> from alarm_interface.o(i.Batt_error_interface) referenced from public.o(i.Batt_error_GOTO)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.AUTO_MODE_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.BrightScreen_time_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.Brightness_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from diy_menu_interface.o(i.DIY_menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.Default_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from firmware_tim_interface.o(i.Firmware_Tim_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.KEY_LIGHT_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from public.o(i.Key_smoke)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from lock_resis_interface.o(i.LOCK_Resis_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from main_menu_interface.o(i.Main_menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.PUFF_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from rtc_set_interface.o(i.RTC_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.SMART_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from public.o(i.Screen_GOTO_charging)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.System_Set_Menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_off_interface.o(i.System_off_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from tcr_adjust_interface.o(i.TCR_Data_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from alarm_interface.o(i.USB_Warning_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from system_settings_interface.o(i.VIBRATE_Set_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from diy_menu_interface.o(i.VW_SET_menu_interface)
 <LI><a href="#[69]">Battery_charging_interface</a> from battery_charging_interface.o(i.Battery_charging_interface) referenced from alarm_interface.o(i.Warning_interface)
 <LI><a href="#[79]">BrightScreen_time_Data_update</a> from system_settings_interface.o(i.BrightScreen_time_Data_update) referenced from system_settings_interface.o(i.BrightScreen_time_Set_windows)
 <LI><a href="#[79]">BrightScreen_time_Data_update</a> from system_settings_interface.o(i.BrightScreen_time_Data_update) referenced from system_settings_interface.o(i.BrightScreen_time_touch)
 <LI><a href="#[cb]">BrightScreen_time_Set_interface</a> from system_settings_interface.o(i.BrightScreen_time_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[c7]">Brightness_Set_interface</a> from system_settings_interface.o(i.Brightness_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[26]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7e]">Bypass_Output_control</a> from bypass_mode_control.o(i.Bypass_Output_control) referenced from bypass_mode_control.o(i.Bypass_mode_int)
 <LI><a href="#[86]">CCT_Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[86]">CCT_Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[85]">CCV_Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[85]">CCV_Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[80]">CCV_Custom_Data_update</a> from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_update) referenced from custom_curve_adjustment_interface.o(i.CCV_SET_Operation)
 <LI><a href="#[83]">CC_SET_menu_interface</a> from diy_menu_interface.o(i.CC_SET_menu_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[83]">CC_SET_menu_interface</a> from diy_menu_interface.o(i.CC_SET_menu_interface) referenced from diy_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[8]">CUSTOM_HID_DeInit_FS</a> from usbd_custom_hid_if.o(i.CUSTOM_HID_DeInit_FS) referenced 2 times from usbd_custom_hid_if.o(.data)
 <LI><a href="#[7]">CUSTOM_HID_Init_FS</a> from usbd_custom_hid_if.o(i.CUSTOM_HID_Init_FS) referenced 2 times from usbd_custom_hid_if.o(.data)
 <LI><a href="#[9]">CUSTOM_HID_OutEvent_FS</a> from usbd_custom_hid_if.o(i.CUSTOM_HID_OutEvent_FS) referenced 2 times from usbd_custom_hid_if.o(.data)
 <LI><a href="#[8b]">Custom_CCT_Output_control</a> from curvecct_mode_control.o(i.Custom_CCT_Output_control) referenced from curvecct_mode_control.o(i.Custom_CCT_mode_int)
 <LI><a href="#[8c]">Custom_CCV_Output_control</a> from curveccv_mode_control.o(i.Custom_CCV_Output_control) referenced from curveccv_mode_control.o(i.Custom_CCV_mode_int)
 <LI><a href="#[84]">Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[84]">Custom_Data_Set_interface</a> from custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[7f]">Custom_Data_update</a> from custom_curve_adjustment_interface.o(i.Custom_Data_update) referenced from custom_curve_adjustment_interface.o(i.CCT_SET_Operation)
 <LI><a href="#[7f]">Custom_Data_update</a> from custom_curve_adjustment_interface.o(i.Custom_Data_update) referenced from custom_curve_adjustment_interface.o(i.CCW_SET_Operation)
 <LI><a href="#[8d]">Custom_Output_control</a> from curvewatt_mode_control.o(i.Custom_Output_control) referenced from curvewatt_mode_control.o(i.Custom_mode_int)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced from diy_menu_interface.o(i.CC_SET_coordinate_Init)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced 2 times from main_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced from diy_menu_interface.o(i.VT_SET_coordinate_Init)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_operation)
 <LI><a href="#[81]">DIY_menu_interface</a> from diy_menu_interface.o(i.DIY_menu_interface) referenced from diy_menu_interface.o(i.VW_SET_coordinate_Init)
 <LI><a href="#[37]">DMA1_Stream0_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream0_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[38]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[39]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3c]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3d]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[52]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[56]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[57]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[58]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[59]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5a]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5d]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[29]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[c5]">Default_Set_interface</a> from system_settings_interface.o(i.Default_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[12]">Disp_Sleep_NOP</a> from app_sleeping.o(i.Disp_Sleep_NOP) referenced 2 times from app_sleeping.o(.data)
 <LI><a href="#[12]">Disp_Sleep_NOP</a> from app_sleeping.o(i.Disp_Sleep_NOP) referenced from one_power_interface.o(i.BOOT_LOGO_interface)
 <LI><a href="#[32]">EXTI0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4f]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[33]">EXTI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[34]">EXTI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[35]">EXTI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[36]">EXTI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3f]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[67]">FIRE_TO_UNLOCK_windows</a> from alarm_interface.o(i.FIRE_TO_UNLOCK_windows) referenced from public.o(i.ADDSUB_LOCK_GOTO)
 <LI><a href="#[67]">FIRE_TO_UNLOCK_windows</a> from alarm_interface.o(i.FIRE_TO_UNLOCK_windows) referenced from public.o(i.Key_smoke)
 <LI><a href="#[67]">FIRE_TO_UNLOCK_windows</a> from alarm_interface.o(i.FIRE_TO_UNLOCK_windows) referenced from alarm_interface.o(i.Warning_interface)
 <LI><a href="#[30]">FLASH_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[62]">FPU_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[ce]">Firmware_Tim_interface</a> from firmware_tim_interface.o(i.Firmware_Tim_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[ff]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[100]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[101]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[102]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[eb]">GUIPROP_AA2_EXT_DispChar</a> from guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar) referenced 16 times from century45gothic10_808.o(.constdata)
 <LI><a href="#[ec]">GUIPROP_EXT_GetCharDistX</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharDistX) referenced 16 times from century45gothic10_808.o(.constdata)
 <LI><a href="#[ef]">GUIPROP_EXT_GetCharInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetCharInfo) referenced 16 times from century45gothic10_808.o(.constdata)
 <LI><a href="#[ed]">GUIPROP_EXT_GetFontInfo</a> from gui_charpext.o(i.GUIPROP_EXT_GetFontInfo) referenced 16 times from century45gothic10_808.o(.constdata)
 <LI><a href="#[ee]">GUIPROP_EXT_IsInFont</a> from gui_charpext.o(i.GUIPROP_EXT_IsInFont) referenced 16 times from century45gothic10_808.o(.constdata)
 <LI><a href="#[19]">GUIPROP_EXT__ClearLine</a> from gui_encext.o(i.GUIPROP_EXT__ClearLine) referenced 2 times from gui_encext.o(.data)
 <LI><a href="#[f3]">GUIPROP_EXT__DispLine</a> from gui_encext.o(i.GUIPROP_EXT__DispLine) referenced from gui_encext.o(.constdata)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main interface.o(i.Clear_SP_Vape_Arc)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from vt_mode_set_interface.o(i.Disp_DATA_Adjust_Name)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced 3 times from tcr_adjust_interface.o(i.Disp_L_Arrow)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced 3 times from tcr_adjust_interface.o(i.Disp_R_Arrow)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main interface.o(i.Disp_SP_Vape_Arc)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main interface.o(i.LOCK_Res_update)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main_menu_interface.o(i.Menu_Page_Init)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main_menu_interface.o(i.Selected_Cursor)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from system_settings_interface.o(i.VIBRATE_Data_update)
 <LI><a href="#[89]">GUI_DrawStreamedBitmapA565Ex</a> from gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex) referenced from main interface.o(i.Vape_MP3_Beat)
 <LI><a href="#[c0]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced 2 times from guidev_1.o(i._GetDevFunc)
 <LI><a href="#[135]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[134]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[136]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[138]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1b]">GUI_X_ExecIdle</a> from gui_x.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[1c]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[1d]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[7c]">Get_Bypass_MODE_Deno</a> from main interface.o(i.Get_Bypass_MODE_Deno) referenced from main interface.o(i.Bypass_MODE_windows)
 <LI><a href="#[7d]">Get_Bypass_MODE_Mole</a> from main interface.o(i.Get_Bypass_MODE_Mole) referenced from main interface.o(i.Bypass_MODE_windows)
 <LI><a href="#[a7]">Get_Temp_MODE_Deno</a> from main interface.o(i.Get_Temp_MODE_Deno) referenced from main interface.o(i.TCR_MODE_windows)
 <LI><a href="#[a7]">Get_Temp_MODE_Deno</a> from main interface.o(i.Get_Temp_MODE_Deno) referenced from main interface.o(i.Temp_MODE_windows)
 <LI><a href="#[a8]">Get_Temp_MODE_Mole</a> from main interface.o(i.Get_Temp_MODE_Mole) referenced from main interface.o(i.TCR_MODE_windows)
 <LI><a href="#[a8]">Get_Temp_MODE_Mole</a> from main interface.o(i.Get_Temp_MODE_Mole) referenced from main interface.o(i.Temp_MODE_windows)
 <LI><a href="#[ac]">Get_Volt_MODE_Deno</a> from main interface.o(i.Get_Volt_MODE_Deno) referenced from main interface.o(i.Voltage_MODE_windows)
 <LI><a href="#[ad]">Get_Volt_MODE_Mole</a> from main interface.o(i.Get_Volt_MODE_Mole) referenced from main interface.o(i.Voltage_MODE_windows)
 <LI><a href="#[9f]">Get_Watt_MODE_Deno</a> from main interface.o(i.Get_Watt_MODE_Deno) referenced from main interface.o(i.SPP_MODE_windows)
 <LI><a href="#[9f]">Get_Watt_MODE_Deno</a> from main interface.o(i.Get_Watt_MODE_Deno) referenced from main interface.o(i.Watt_MODE_windows)
 <LI><a href="#[a0]">Get_Watt_MODE_Mole</a> from main interface.o(i.Get_Watt_MODE_Mole) referenced from main interface.o(i.SPP_MODE_windows)
 <LI><a href="#[a0]">Get_Watt_MODE_Mole</a> from main interface.o(i.Get_Watt_MODE_Mole) referenced from main interface.o(i.Watt_MODE_windows)
 <LI><a href="#[73]">HIGH_ATOMIZER_windows</a> from alarm_interface.o(i.HIGH_ATOMIZER_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[73]">HIGH_ATOMIZER_windows</a> from alarm_interface.o(i.HIGH_ATOMIZER_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[73]">HIGH_ATOMIZER_windows</a> from alarm_interface.o(i.HIGH_ATOMIZER_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[24]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[48]">I2C1_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[47]">I2C1_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4a]">I2C2_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[49]">I2C2_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[61]">I2C3_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[60]">I2C3_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[92]">ImageGetDoubleData</a> from gui_image_flash.o(i.ImageGetDoubleData) referenced from gui_image_flash.o(i.Flash_GUI_BMP_GetXSizeEx)
 <LI><a href="#[92]">ImageGetDoubleData</a> from gui_image_flash.o(i.ImageGetDoubleData) referenced from gui_image_flash.o(i.Flash_GUI_BMP_GetYSizeEx)
 <LI><a href="#[92]">ImageGetDoubleData</a> from gui_image_flash.o(i.ImageGetDoubleData) referenced from gui_image_flash.o(i.Flash_GUI_GIF_DrawSubEx)
 <LI><a href="#[92]">ImageGetDoubleData</a> from gui_image_flash.o(i.ImageGetDoubleData) referenced from gui_image_flash.o(i.Flash_GUI_GIF_GetImageInfoEx)
 <LI><a href="#[92]">ImageGetDoubleData</a> from gui_image_flash.o(i.ImageGetDoubleData) referenced from gui_image_flash.o(i.Flash_GUI_GIF_GetInfoEx)
 <LI><a href="#[91]">ImageGetPNGData</a> from gui_image_flash.o(i.ImageGetPNGData) referenced from gui_image_flash.o(i.Draw_Bitmap_EX)
 <LI><a href="#[91]">ImageGetPNGData</a> from gui_image_flash.o(i.ImageGetPNGData) referenced from gui_image_flash.o(i.Flash_GUI_GetStreamedBitmapInfoEx)
 <LI><a href="#[cc]">KEY_LIGHT_Set_interface</a> from system_settings_interface.o(i.KEY_LIGHT_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[f8]">LCD_Color2Index_1</a> from guicc_1.o(i.LCD_Color2Index_1) referenced from guicc_1.o(.constdata)
 <LI><a href="#[f0]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[f1]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[18]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[b5]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_a16.o(.constdata)
 <LI><a href="#[b5]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_a16.o(i._DrawBitmapA565)
 <LI><a href="#[121]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[b6]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced 2 times from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[b6]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from gui_drawbitmap_565.o(i._DrawBitmapSwapRB)
 <LI><a href="#[b8]">LCD_SetPixelAA4_Trans</a> from lcd_aa.o(i.LCD_SetPixelAA4_Trans) referenced from guiaa_lib.o(i._FlushLine)
 <LI><a href="#[ab]">LOCK_Resis_interface</a> from lock_resis_interface.o(i.LOCK_Resis_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_operation)
 <LI><a href="#[72]">Low_ATOMIZER_windows</a> from alarm_interface.o(i.Low_ATOMIZER_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[72]">Low_ATOMIZER_windows</a> from alarm_interface.o(i.Low_ATOMIZER_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[72]">Low_ATOMIZER_windows</a> from alarm_interface.o(i.Low_ATOMIZER_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[74]">Low_Battery_windows</a> from alarm_interface.o(i.Low_Battery_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[74]">Low_Battery_windows</a> from alarm_interface.o(i.Low_Battery_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[74]">Low_Battery_windows</a> from alarm_interface.o(i.Low_Battery_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[99]">MODE_TO_SET_windows</a> from alarm_interface.o(i.MODE_TO_SET_windows) referenced from public.o(i.Key_smoke)
 <LI><a href="#[99]">MODE_TO_SET_windows</a> from alarm_interface.o(i.MODE_TO_SET_windows) referenced from public.o(i.Main_menu_GOTO)
 <LI><a href="#[99]">MODE_TO_SET_windows</a> from alarm_interface.o(i.MODE_TO_SET_windows) referenced from alarm_interface.o(i.Warning_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.AUTO_MODE_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from one_power_interface.o(i.BOOT_LOGO_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from alarm_interface.o(i.Batt_error_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.BrightScreen_time_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.Brightness_Set_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.Default_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.Default_Set_windows)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from public.o(i.Fanhui_Main_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from firmware_tim_interface.o(i.Firmware_Tim_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.KEY_LIGHT_Set_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from public.o(i.Key_smoke)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from lock_resis_interface.o(i.LOCK_Resis_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced 2 times from main_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from main_menu_interface.o(i.Menu_coordinate_Init)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.PUFF_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from rtc_set_interface.o(i.RTC_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.SMART_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.System_Set_Operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from tcr_adjust_interface.o(i.TCR_Data_Set_windows)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from tcr_adjust_interface.o(i.TCR_Data_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from alarm_interface.o(i.USB_Warning_interface)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from system_settings_interface.o(i.VIBRATE_Set_touch)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from diy_menu_interface.o(i.VW_SET_coordinate_Init)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from diy_menu_interface.o(i.VW_SET_menu_operation)
 <LI><a href="#[6c]">Main_interface</a> from main interface.o(i.Main_interface) referenced from alarm_interface.o(i.Warning_interface)
 <LI><a href="#[9c]">Main_menu_interface</a> from main_menu_interface.o(i.Main_menu_interface) referenced from public.o(i.Main_menu_GOTO)
 <LI><a href="#[9c]">Main_menu_interface</a> from main_menu_interface.o(i.Main_menu_interface) referenced from diy_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[9c]">Main_menu_interface</a> from main_menu_interface.o(i.Main_menu_interface) referenced 2 times from system_settings_interface.o(i.Menu_coordinate_Init)
 <LI><a href="#[25]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[23]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5b]">OTG_FS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[51]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[13]">One_Power_interface</a> from one_power_interface.o(i.One_Power_interface) referenced 4 times from wm_disp.o(.data)
 <LI><a href="#[13]">One_Power_interface</a> from one_power_interface.o(i.One_Power_interface) referenced from main.o(i.main)
 <LI><a href="#[71]">Open_circuit_windows</a> from alarm_interface.o(i.Open_circuit_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[71]">Open_circuit_windows</a> from alarm_interface.o(i.Open_circuit_windows) referenced from lock_resis_interface.o(i.LOCK_Resis_touch)
 <LI><a href="#[71]">Open_circuit_windows</a> from alarm_interface.o(i.Open_circuit_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[71]">Open_circuit_windows</a> from alarm_interface.o(i.Open_circuit_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[6f]">Out_Boot</a> from one_power_interface.o(i.Out_Boot) referenced from one_power_interface.o(i.BOOT_LOGO_interface)
 <LI><a href="#[76]">PCB_Overheated_windows</a> from alarm_interface.o(i.PCB_Overheated_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[76]">PCB_Overheated_windows</a> from alarm_interface.o(i.PCB_Overheated_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[76]">PCB_Overheated_windows</a> from alarm_interface.o(i.PCB_Overheated_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[c8]">PUFF_Set_interface</a> from system_settings_interface.o(i.PUFF_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[2d]">PVD_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2a]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[31]">RCC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[db]">RTC_AMPM_set</a> from rtc_set_interface.o(i.RTC_AMPM_set) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[50]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[d9]">RTC_Set_Date</a> from rtc_set_interface.o(i.RTC_Set_Date) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[dc]">RTC_Set_Hours</a> from rtc_set_interface.o(i.RTC_Set_Hours) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[dd]">RTC_Set_Minutes</a> from rtc_set_interface.o(i.RTC_Set_Minutes) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d8]">RTC_Set_Month</a> from rtc_set_interface.o(i.RTC_Set_Month) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[de]">RTC_Set_Seconds</a> from rtc_set_interface.o(i.RTC_Set_Seconds) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[da]">RTC_Set_Year</a> from rtc_set_interface.o(i.RTC_Set_Year) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[c6]">RTC_Set_interface</a> from rtc_set_interface.o(i.RTC_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[2f]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[22]">Reset_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[53]">SDIO_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[c9]">SMART_Set_interface</a> from system_settings_interface.o(i.SMART_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[4b]">SPI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4c]">SPI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[55]">SPI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[63]">SPI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[a1]">SPP_Output_control</a> from spp_mode_control.o(i.SPP_Output_control) referenced from spp_mode_control.o(i.SPP_mode_int)
 <LI><a href="#[28]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7b]">Screen_Tim_Data_update</a> from system_settings_interface.o(i.Screen_Tim_Data_update) referenced from system_settings_interface.o(i.BrightScreen_time_Set_windows)
 <LI><a href="#[7b]">Screen_Tim_Data_update</a> from system_settings_interface.o(i.Screen_Tim_Data_update) referenced from system_settings_interface.o(i.BrightScreen_time_touch)
 <LI><a href="#[a6]">Screensaver_2_Return</a> from screensaver_interface.o(i.Screensaver_2_Return) referenced from screensaver_interface.o(i.Screensaver_Windows_2)
 <LI><a href="#[16]">Screensaver_Windows_1</a> from screensaver_interface.o(i.Screensaver_Windows_1) referenced 2 times from screensaver_interface.o(.data)
 <LI><a href="#[a4]">Screensaver_Windows_1return</a> from screensaver_interface.o(i.Screensaver_Windows_1return) referenced from screensaver_interface.o(i.Screensaver_Windows_1)
 <LI><a href="#[17]">Screensaver_Windows_2</a> from screensaver_interface.o(i.Screensaver_Windows_2) referenced 2 times from screensaver_interface.o(.data)
 <LI><a href="#[6e]">Screensaver_interface</a> from screensaver_interface.o(i.Screensaver_interface) referenced from atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
 <LI><a href="#[6e]">Screensaver_interface</a> from screensaver_interface.o(i.Screensaver_interface) referenced from system_settings_interface.o(i.BrightScreen_time_Set_interface)
 <LI><a href="#[6e]">Screensaver_interface</a> from screensaver_interface.o(i.Screensaver_interface) referenced from public.o(i.Key_smoke)
 <LI><a href="#[6e]">Screensaver_interface</a> from screensaver_interface.o(i.Screensaver_interface) referenced from public.o(i.Screen_GOTO_charging)
 <LI><a href="#[6e]">Screensaver_interface</a> from screensaver_interface.o(i.Screensaver_interface) referenced from screensaver_interface.o(i.Screensaver_2_Return)
 <LI><a href="#[15]">Short_circuit_windows</a> from alarm_interface.o(i.Short_circuit_windows) referenced 2 times from alarm_interface.o(.data)
 <LI><a href="#[15]">Short_circuit_windows</a> from alarm_interface.o(i.Short_circuit_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[15]">Short_circuit_windows</a> from alarm_interface.o(i.Short_circuit_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[15]">Short_circuit_windows</a> from alarm_interface.o(i.Short_circuit_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[75]">Smoking_timeout_windows</a> from alarm_interface.o(i.Smoking_timeout_windows) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[75]">Smoking_timeout_windows</a> from alarm_interface.o(i.Smoking_timeout_windows) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[75]">Smoking_timeout_windows</a> from alarm_interface.o(i.Smoking_timeout_windows) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[2b]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[65]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.AUTO_MODE_Set_touch)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.AUTO_MODE_Set_windows)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.BrightScreen_time_Set_interface)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.Brightness_Set_interface)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.Default_Set_touch)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.Default_Set_windows)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from firmware_tim_interface.o(i.Firmware_Tim_interface)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.KEY_LIGHT_Set_interface)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from main_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.PUFF_Set_touch)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.PUFF_Set_windows)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from rtc_set_interface.o(i.RTC_Set_interface)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from rtc_set_interface.o(i.RTC_Set_windows)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.SMART_Set_touch)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.SMART_Set_windows)
 <LI><a href="#[6b]">System_Set_Menu_interface</a> from system_settings_interface.o(i.System_Set_Menu_interface) referenced from system_settings_interface.o(i.VIBRATE_Set_interface)
 <LI><a href="#[77]">System_off_interface</a> from system_off_interface.o(i.System_off_interface) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[77]">System_off_interface</a> from system_off_interface.o(i.System_off_interface) referenced from public.o(i.System_off_GOTO)
 <LI><a href="#[2e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[9e]">TCR_Data_Set_interface</a> from tcr_adjust_interface.o(i.TCR_Data_Set_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[9e]">TCR_Data_Set_interface</a> from tcr_adjust_interface.o(i.TCR_Data_Set_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_operation)
 <LI><a href="#[40]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[43]">TIM1_CC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[42]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[41]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[44]">TIM2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[45]">TIM3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[46]">TIM4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[54]">TIM5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[a9]">Temp_Output_control</a> from tempe_mode_control.o(i.Temp_Output_control) referenced from tempe_mode_control.o(i.TCR_mode_int)
 <LI><a href="#[a9]">Temp_Output_control</a> from tempe_mode_control.o(i.Temp_Output_control) referenced from tempe_mode_control.o(i.Temp_mode_int)
 <LI><a href="#[4d]">USART1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4e]">USART2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5f]">USART6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[e]">USBD_CUSTOM_HID_DataIn</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_DataIn) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[f]">USBD_CUSTOM_HID_DataOut</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_DataOut) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[b]">USBD_CUSTOM_HID_DeInit</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_DeInit) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[d]">USBD_CUSTOM_HID_EP0_RxReady</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_EP0_RxReady) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[10]">USBD_CUSTOM_HID_GetCfgDesc</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_GetCfgDesc) referenced 6 times from usbd_customhid.o(.data)
 <LI><a href="#[11]">USBD_CUSTOM_HID_GetDeviceQualifierDesc</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_GetDeviceQualifierDesc) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[a]">USBD_CUSTOM_HID_Init</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_Init) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[c]">USBD_CUSTOM_HID_Setup</a> from usbd_customhid.o(i.USBD_CUSTOM_HID_Setup) referenced 2 times from usbd_customhid.o(.data)
 <LI><a href="#[5]">USBD_FS_ConfigStrDescriptor</a> from usbd_desc.o(i.USBD_FS_ConfigStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[0]">USBD_FS_DeviceDescriptor</a> from usbd_desc.o(i.USBD_FS_DeviceDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[6]">USBD_FS_InterfaceStrDescriptor</a> from usbd_desc.o(i.USBD_FS_InterfaceStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[1]">USBD_FS_LangIDStrDescriptor</a> from usbd_desc.o(i.USBD_FS_LangIDStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[2]">USBD_FS_ManufacturerStrDescriptor</a> from usbd_desc.o(i.USBD_FS_ManufacturerStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[3]">USBD_FS_ProductStrDescriptor</a> from usbd_desc.o(i.USBD_FS_ProductStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[4]">USBD_FS_SerialStrDescriptor</a> from usbd_desc.o(i.USBD_FS_SerialStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.AUTO_MODE_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.BrightScreen_time_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.Brightness_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from diy_menu_interface.o(i.CC_SET_menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from diy_menu_interface.o(i.DIY_menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.Default_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from firmware_tim_interface.o(i.Firmware_Tim_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.KEY_LIGHT_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from lock_resis_interface.o(i.LOCK_Resis_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from main_menu_interface.o(i.Main_menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.PUFF_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from rtc_set_interface.o(i.RTC_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.SMART_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from public.o(i.Screen_GOTO_charging)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.System_Set_Menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_off_interface.o(i.System_off_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from tcr_adjust_interface.o(i.TCR_Data_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from system_settings_interface.o(i.VIBRATE_Set_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from diy_menu_interface.o(i.VW_SET_menu_interface)
 <LI><a href="#[6a]">USB_Warning_interface</a> from alarm_interface.o(i.USB_Warning_interface) referenced from alarm_interface.o(i.Warning_interface)
 <LI><a href="#[82]">USB_anomaly_windows</a> from alarm_interface.o(i.USB_anomaly_windows) referenced from diy_menu_interface.o(i.CC_SET_menu_interface)
 <LI><a href="#[82]">USB_anomaly_windows</a> from alarm_interface.o(i.USB_anomaly_windows) referenced from diy_menu_interface.o(i.DIY_menu_interface)
 <LI><a href="#[82]">USB_anomaly_windows</a> from alarm_interface.o(i.USB_anomaly_windows) referenced from main_menu_interface.o(i.Main_menu_interface)
 <LI><a href="#[82]">USB_anomaly_windows</a> from alarm_interface.o(i.USB_anomaly_windows) referenced from diy_menu_interface.o(i.VT_SET_menu_interface)
 <LI><a href="#[82]">USB_anomaly_windows</a> from alarm_interface.o(i.USB_anomaly_windows) referenced from diy_menu_interface.o(i.VW_SET_menu_interface)
 <LI><a href="#[27]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[aa]">VIBRATE_Data_update</a> from system_settings_interface.o(i.VIBRATE_Data_update) referenced from system_settings_interface.o(i.VIBRATE_Set_interface)
 <LI><a href="#[aa]">VIBRATE_Data_update</a> from system_settings_interface.o(i.VIBRATE_Data_update) referenced from system_settings_interface.o(i.VIBRATE_Set_touch)
 <LI><a href="#[cd]">VIBRATE_Set_interface</a> from system_settings_interface.o(i.VIBRATE_Set_interface) referenced from system_settings_interface.o(.constdata)
 <LI><a href="#[9b]">VT_SET_menu_interface</a> from diy_menu_interface.o(i.VT_SET_menu_interface) referenced from lock_resis_interface.o(i.LOCK_Resis_Windows)
 <LI><a href="#[9b]">VT_SET_menu_interface</a> from diy_menu_interface.o(i.VT_SET_menu_interface) referenced from diy_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[9b]">VT_SET_menu_interface</a> from diy_menu_interface.o(i.VT_SET_menu_interface) referenced from tcr_adjust_interface.o(i.TCR_Data_Set_windows)
 <LI><a href="#[9b]">VT_SET_menu_interface</a> from diy_menu_interface.o(i.VT_SET_menu_interface) referenced from diy_menu_interface.o(i.VT_SET_menu_operation)
 <LI><a href="#[9d]">VW_SET_menu_interface</a> from diy_menu_interface.o(i.VW_SET_menu_interface) referenced from diy_menu_interface.o(i.Main_menu_operation)
 <LI><a href="#[9d]">VW_SET_menu_interface</a> from diy_menu_interface.o(i.VW_SET_menu_interface) referenced from main interface.o(i.Main_operation)
 <LI><a href="#[ae]">Voltage_Output_control</a> from voltage_mode_control.o(i.Voltage_Output_control) referenced from voltage_mode_control.o(i.Voltage_mode_int)
 <LI><a href="#[2c]">WWDG_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from public.o(i.ADDSUB_LOCK_GOTO)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from battery_charging_interface.o(i.Battery_charging_interface)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from public.o(i.Key_smoke)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from lock_resis_interface.o(i.LOCK_Resis_touch)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from main interface.o(i.Main_interface)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from public.o(i.Main_menu_GOTO)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from main_menu_interface.o(i.Menu_coordinate_Init)
 <LI><a href="#[68]">Warning_interface</a> from alarm_interface.o(i.Warning_interface) referenced from screensaver_interface.o(i.Screensaver_interface)
 <LI><a href="#[a3]">Watch_Dispaly_1_Display</a> from screensaver_interface.o(i.Watch_Dispaly_1_Display) referenced from screensaver_interface.o(i.Screensaver_Windows_1)
 <LI><a href="#[a5]">Watch_Dispaly_2_Display</a> from screensaver_interface.o(i.Watch_Dispaly_2_Display) referenced from screensaver_interface.o(i.Screensaver_Windows_2)
 <LI><a href="#[b4]">Watt_Output_control</a> from watt_mode_control.o(i.Watt_Output_control) referenced from watt_mode_control.o(i.Watt_mode_int)
 <LI><a href="#[f6]">_CalcSizeOfChar</a> from gui_uc_encodeutf8.o(i._CalcSizeOfChar) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[95]">_ClearUnusedPixels</a> from gui_gif.o(i._ClearUnusedPixels) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[fd]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[139]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[120]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[fb]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[8a]">_Cutt_Vape_Arc</a> from main interface.o(i._Cutt_Vape_Arc) referenced from main interface.o(i.Clear_Vape_Arc)
 <LI><a href="#[df]">_DrawBitmap</a> from guidrv_template.o(i._DrawBitmap) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[11b]">_DrawBitmapA565</a> from gui_drawbitmap_a16.o(i._DrawBitmapA565) referenced from gui_drawbitmap_a16.o(.constdata)
 <LI><a href="#[f2]">_DrawBitmapSwapRB</a> from gui_drawbitmap_565.o(i._DrawBitmapSwapRB) referenced from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[96]">_DrawFromDataBlock</a> from gui_gif.o(i._DrawFromDataBlock) referenced from gui_gif.o(i.GUI_GIF_DrawSubEx)
 <LI><a href="#[e0]">_DrawHLine</a> from guidrv_template.o(i._DrawHLine) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[94]">_DrawHLine</a> from guiaa_lib.o(i._DrawHLine) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[b7]">_DrawStreamedBitmapExNoPalette</a> from gui_stream.o(i._DrawStreamedBitmapExNoPalette) referenced from gui_stream.o(i._DrawStreamedBitmapEx)
 <LI><a href="#[e1]">_DrawVLine</a> from guidrv_template.o(i._DrawVLine) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[f7]">_Encode</a> from gui_uc_encodeutf8.o(i._Encode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[c1]">_FillPolygon</a> from guidev_measure.o(i._FillPolygon) referenced from guidev_measure.o(i._GetDevFunc)
 <LI><a href="#[c2]">_FillPolygonAA</a> from guidev_measure.o(i._FillPolygonAA) referenced from guidev_measure.o(i._GetDevFunc)
 <LI><a href="#[e2]">_FillRect</a> from guidrv_template.o(i._FillRect) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[137]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[f4]">_GetCharCode</a> from gui_uc_encodeutf8.o(i._GetCharCode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[f5]">_GetCharSize</a> from gui_uc_encodeutf8.o(i._GetCharSize) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[e9]">_GetDevData</a> from guidrv_template.o(i._GetDevData) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[e7]">_GetDevFunc</a> from guidrv_template.o(i._GetDevFunc) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[e8]">_GetDevProp</a> from guidrv_template.o(i._GetDevProp) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[13b]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[fa]">_GetIndexMask_1</a> from guicc_1.o(i._GetIndexMask_1) referenced from guicc_1.o(.constdata)
 <LI><a href="#[122]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[fc]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[e3]">_GetPixelIndex</a> from guidrv_template.o(i._GetPixelIndex) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[ea]">_GetRect</a> from guidrv_template.o(i._GetRect) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[fe]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[13a]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[f9]">_Index2Color_1</a> from guicc_1.o(i._Index2Color_1) referenced from guicc_1.o(.constdata)
 <LI><a href="#[bc]">_Init</a> from guidrv_template.o(i._Init) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[1a]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[21]">_NextPixel_End</a> from lcd_nextpixelapi.o(i._NextPixel_End) referenced 2 times from lcd_nextpixelapi.o(.data)
 <LI><a href="#[20]">_NextPixel_NextLine</a> from lcd_nextpixelapi.o(i._NextPixel_NextLine) referenced 2 times from lcd_nextpixelapi.o(.data)
 <LI><a href="#[1f]">_NextPixel_SetPixel</a> from lcd_nextpixelapi.o(i._NextPixel_SetPixel) referenced 2 times from lcd_nextpixelapi.o(.data)
 <LI><a href="#[1e]">_NextPixel_Start</a> from lcd_nextpixelapi.o(i._NextPixel_Start) referenced 2 times from lcd_nextpixelapi.o(.data)
 <LI><a href="#[be]">_Off</a> from guidrv_template.o(i._Off) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[bd]">_On</a> from guidrv_template.o(i._On) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[93]">_OnExit</a> from guiaa_lib.o(i._OnExit) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[97]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI_Init)
 <LI><a href="#[98]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[9a]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[b0]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[c3]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[b3]">_Pointer_Hours_2_Display</a> from screensaver_interface.o(i._Pointer_Hours_2_Display) referenced from screensaver_interface.o(i.Watch_Dispaly_2_Display)
 <LI><a href="#[b2]">_Pointer_Minutes_2_Display</a> from screensaver_interface.o(i._Pointer_Minutes_2_Display) referenced from screensaver_interface.o(i.Watch_Dispaly_2_Display)
 <LI><a href="#[b1]">_Pointer_Seconds_2_Display</a> from screensaver_interface.o(i._Pointer_Seconds_2_Display) referenced from screensaver_interface.o(i.Watch_Dispaly_2_Display)
 <LI><a href="#[a2]">_SP_Vape_Arc</a> from main interface.o(i._SP_Vape_Arc) referenced from main interface.o(i.SP_Cutt_Vape_Arc_4)
 <LI><a href="#[126]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[125]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[127]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[bf]">_SetLUTEntry</a> from guidrv_template.o(i._SetLUTEntry) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[e6]">_SetOrg</a> from guidrv_template.o(i._SetOrg) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[e4]">_SetPixelIndex</a> from guidrv_template.o(i._SetPixelIndex) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[bb]">_SetSize</a> from guidrv_template.o(i._SetSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[b9]">_SetVRAMAddr</a> from guidrv_template.o(i._SetVRAMAddr) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[ba]">_SetVSize</a> from guidrv_template.o(i._SetVSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[87]">_Tim_Vape_Arc_L</a> from main interface.o(i._Tim_Vape_Arc_L) referenced from main interface.o(i.Change_Arc_angle_State)
 <LI><a href="#[88]">_Tim_Vape_Arc_R</a> from main interface.o(i._Tim_Vape_Arc_R) referenced from main interface.o(i.Change_Arc_angle_State)
 <LI><a href="#[e5]">_XorPixel</a> from guidrv_template.o(i._XorPixel) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[66]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[14]">__max_DisWave</a> from main interface.o(i.__max_DisWave) referenced 2 times from main interface.o(.data)
 <LI><a href="#[14]">__max_DisWave</a> from main interface.o(i.__max_DisWave) referenced from main interface.o(i.CCT_Custom_MODE_windows)
 <LI><a href="#[14]">__max_DisWave</a> from main interface.o(i.__max_DisWave) referenced from main interface.o(i.CCV_Custom_MODE_windows)
 <LI><a href="#[14]">__max_DisWave</a> from main interface.o(i.__max_DisWave) referenced from main interface.o(i.Custom_MODE_windows)
 <LI><a href="#[7a]">__pfDraw</a> from system_settings_interface.o(i.__pfDraw) referenced from system_settings_interface.o(i.BrightScreen_time_Set_windows)
 <LI><a href="#[7a]">__pfDraw</a> from system_settings_interface.o(i.__pfDraw) referenced from system_settings_interface.o(i.BrightScreen_time_touch)
 <LI><a href="#[7a]">__pfDraw</a> from system_settings_interface.o(i.__pfDraw) referenced from system_settings_interface.o(i.VIBRATE_Set_interface)
 <LI><a href="#[7a]">__pfDraw</a> from system_settings_interface.o(i.__pfDraw) referenced from system_settings_interface.o(i.VIBRATE_Set_touch)
 <LI><a href="#[af]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[c4]">_sputc</a> from printf6.o(i._sputc) referenced from printf6.o(i.__0sprintf$6)
 <LI><a href="#[64]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[d3]">print_AMPM</a> from rtc_set_interface.o(i.print_AMPM) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d1]">print_Day</a> from rtc_set_interface.o(i.print_Day) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d4]">print_Hours</a> from rtc_set_interface.o(i.print_Hours) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d5]">print_Minutes</a> from rtc_set_interface.o(i.print_Minutes) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d0]">print_Month</a> from rtc_set_interface.o(i.print_Month) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d6]">print_Seconds</a> from rtc_set_interface.o(i.print_Seconds) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[cf]">print_Watch</a> from rtc_set_interface.o(i.print_Watch) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d2]">print_Year</a> from rtc_set_interface.o(i.print_Year) referenced from rtc_set_interface.o(.constdata)
 <LI><a href="#[d7]">watch_set</a> from rtc_set_interface.o(i.watch_set) referenced from rtc_set_interface.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[66]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[49a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[13c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[49b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[49c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[49d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[49e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[49f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[22]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4a0]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[420]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_DataOut
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[33c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[478]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[4a1]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[4a2]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4a3]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4a4]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2f0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[4a5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[3cf]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>

<P><STRONG><a name="[146]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[47a]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[148]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[4a6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[491]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4a7]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4a8]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4a9]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[4aa]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[142]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14b]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[14d]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[48f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[13d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4ab]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4ac]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[4ad]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4ae]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>ADC_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_PWM_EN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[151]"></a>ADC_TDx_Data</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, adc.o(i.ADC_TDx_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_VCC_Data
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Over_PCB_Temp
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_outV_Data
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_USBV_Data
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ChargIV_Data
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp_Data
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>

<P><STRONG><a name="[153]"></a>ADC_TDx_Data_1C</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, adc.o(i.ADC_TDx_Data_1C))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_TDx_Data_1C &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_outI_Data_1C
</UL>

<P><STRONG><a name="[154]"></a>ADDSUB_LOCK_GOTO</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, public.o(i.ADDSUB_LOCK_GOTO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADDSUB_LOCK_GOTO
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
</UL>

<P><STRONG><a name="[ca]"></a>AUTO_MODE_Set_interface</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, system_settings_interface.o(i.AUTO_MODE_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = AUTO_MODE_Set_interface &rArr; AUTO_MODE_Set_touch &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_touch
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>AUTO_MODE_Set_touch</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, system_settings_interface.o(i.AUTO_MODE_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = AUTO_MODE_Set_touch &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SMART_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
</UL>

<P><STRONG><a name="[16f]"></a>Arc_angle_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, main interface.o(i.Arc_angle_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Arc_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>

<P><STRONG><a name="[171]"></a>Atomizer_Res_update</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main interface.o(i.Atomizer_Res_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Atomizer_Res_update &rArr; ResData_update &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[15a]"></a>Atomizer_inquiry_GOTO</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, public.o(i.Atomizer_inquiry_GOTO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Atomizer_inquiry_GOTO &rArr; Auto_match_Watt_program
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_match_Watt_program
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[6d]"></a>Atomizer_inquiry_interface</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Atomizer_inquiry_interface &rArr; Atomizer_inquiry_windows &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_touch
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> public.o(i.Atomizer_inquiry_GOTO)
<LI> screensaver_interface.o(i.Screensaver_interface)
</UL>
<P><STRONG><a name="[175]"></a>Atomizer_inquiry_touch</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, atomizer_inquiry_interface.o(i.Atomizer_inquiry_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Atomizer_inquiry_touch &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
</UL>

<P><STRONG><a name="[174]"></a>Atomizer_inquiry_windows</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, atomizer_inquiry_interface.o(i.Atomizer_inquiry_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Atomizer_inquiry_windows &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
</UL>

<P><STRONG><a name="[17b]"></a>Auto_Locked</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main interface.o(i.Auto_Locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Auto_Locked &rArr; Lock_parts &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_parts
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
</UL>

<P><STRONG><a name="[173]"></a>Auto_match_Watt_program</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, atomizer_inquiry_interface.o(i.Auto_match_Watt_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Auto_match_Watt_program
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>

<P><STRONG><a name="[17f]"></a>BATT_Charging_Count_down_Init</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, app_chargingbat.o(i.BATT_Charging_Count_down_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BATT_Charging_Count_down_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down_JS
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
</UL>

<P><STRONG><a name="[17e]"></a>BATT_Charging_Count_down_JS</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_chargingbat.o(i.BATT_Charging_Count_down_JS))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down
</UL>

<P><STRONG><a name="[18b]"></a>BAT_COMP_ONorOFF</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_compare.o(i.BAT_COMP_ONorOFF))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[187]"></a>BAT_Management</STRONG> (Thumb, 568 bytes, Stack size 40 bytes, app_chargingbat.o(i.BAT_Management))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = BAT_Management &rArr; BAT_Management_Charge &rArr; USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_PWM_EN
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GPIO_Set
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_VCC_Data
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual_Inti
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decide_BAT_Congman
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatterGrade_Calculate
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Proportion
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_COMP_ONorOFF
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_USBV_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[188]"></a>BAT_Management_Charge</STRONG> (Thumb, 1202 bytes, Stack size 40 bytes, app_chargingbat.o(i.BAT_Management_Charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = BAT_Management_Charge &rArr; USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_PWM_EN
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GPIO_Set
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_VCC_Data
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_PWM_Wdata
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decide_BAT_Congman
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatterGrade_Calculate
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Proportion
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_COMP_ONorOFF
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_USBV_Data
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ChargIV_Data
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[150]"></a>BAT_PWM_EN</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_pwm_int.o(i.BAT_PWM_EN))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[194]"></a>BAT_PWM_Wdata</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, app_pwm_int.o(i.BAT_PWM_Wdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BAT_PWM_Wdata
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
</UL>

<P><STRONG><a name="[196]"></a>BL_OffDisplay_excessive</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tft_init.o(i.BL_OffDisplay_excessive))
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interface_display
</UL>

<P><STRONG><a name="[199]"></a>BL_PWM_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pwm_int.o(i.BL_PWM_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOffDisplay
</UL>

<P><STRONG><a name="[41c]"></a>BL_PWM_Wdata</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pwm_int.o(i.BL_PWM_Wdata))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_BL_Brightness
</UL>

<P><STRONG><a name="[198]"></a>BL_PanelTurnOffDisplay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tft_init.o(i.BL_PanelTurnOffDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BL_PanelTurnOffDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PWM_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interface_display
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[19a]"></a>BL_PanelTurnOnDisplay</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tft_init.o(i.BL_PanelTurnOnDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BL_PanelTurnOnDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_BL_Brightness
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
</UL>

<P><STRONG><a name="[78]"></a>BOOT_LOGO_interface</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, one_power_interface.o(i.BOOT_LOGO_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = BOOT_LOGO_interface &rArr; Boot_animation &rArr; Flash_GUI_GIF_DrawSubEx &rArr; GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOnDisplay
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetInfoEx
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_animation
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_ON
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_GOTO
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 4]<UL><LI> alarm_interface.o(i.USB_Warning_interface)
<LI> one_power_interface.o(i.One_Power_interface)
<LI> system_off_interface.o(i.System_off_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[1a0]"></a>Batt_Back_shanshuo</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, main interface.o(i.Batt_Back_shanshuo))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Batt_Back_shanshuo &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT
</UL>

<P><STRONG><a name="[1a3]"></a>Batt_JZ_interface</STRONG> (Thumb, 792 bytes, Stack size 40 bytes, batt_jz_interface.o(i.Batt_JZ_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Batt_JZ_interface &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_VCC_Set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_VCC_Reset
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_scan
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOnDisplay
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOffDisplay
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ENABLE_transmission
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_LCD_RESET
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiaozhun_panduan
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18e]"></a>Batt_Proportion</STRONG> (Thumb, 562 bytes, Stack size 36 bytes, app_chargingbat.o(i.Batt_Proportion))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Batt_Proportion
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[15d]"></a>Batt_error_GOTO</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, public.o(i.Batt_error_GOTO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Batt_error_GOTO
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[70]"></a>Batt_error_interface</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, alarm_interface.o(i.Batt_error_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Batt_error_interface &rArr; TFT_ST7789S_Init &rArr; TFT_REset_program &rArr; KEY_TFT_RESET &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_VCC_Set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_VCC_Reset
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOffDisplay
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_LCD_RESET
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> public.o(i.Batt_error_GOTO)
</UL>
<P><STRONG><a name="[18d]"></a>BatterGrade_Calculate</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, app_chargingbat.o(i.BatterGrade_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BatterGrade_Calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[69]"></a>Battery_charging_interface</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, battery_charging_interface.o(i.Battery_charging_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Battery_charging_interface &rArr; Battery_charging_windows &rArr; Display_BAT_Charging &rArr; Disp_Proportion_Data &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT_Charging
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
</UL>
<BR>[Address Reference Count : 29]<UL><LI> alarm_interface.o(i.USB_Warning_interface)
<LI> public.o(i.Key_smoke)
<LI> public.o(i.Screen_GOTO_charging)
<LI> tcr_adjust_interface.o(i.TCR_Data_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
<LI> lock_resis_interface.o(i.LOCK_Resis_interface)
<LI> system_settings_interface.o(i.BrightScreen_time_Set_interface)
<LI> system_settings_interface.o(i.Brightness_Set_interface)
<LI> screensaver_interface.o(i.Screensaver_interface)
<LI> diy_menu_interface.o(i.CC_SET_menu_interface)
<LI> diy_menu_interface.o(i.DIY_menu_interface)
<LI> diy_menu_interface.o(i.VT_SET_menu_interface)
<LI> main interface.o(i.Main_interface)
<LI> alarm_interface.o(i.Warning_interface)
<LI> system_off_interface.o(i.System_off_interface)
<LI> atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
<LI> main_menu_interface.o(i.Main_menu_interface)
<LI> system_settings_interface.o(i.AUTO_MODE_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
<LI> system_settings_interface.o(i.Default_Set_interface)
<LI> system_settings_interface.o(i.KEY_LIGHT_Set_interface)
<LI> system_settings_interface.o(i.PUFF_Set_interface)
<LI> system_settings_interface.o(i.SMART_Set_interface)
<LI> system_settings_interface.o(i.System_Set_Menu_interface)
<LI> system_settings_interface.o(i.VIBRATE_Set_interface)
<LI> rtc_set_interface.o(i.RTC_Set_interface)
<LI> diy_menu_interface.o(i.VW_SET_menu_interface)
<LI> firmware_tim_interface.o(i.Firmware_Tim_interface)
</UL>
<P><STRONG><a name="[1b4]"></a>Battery_charging_windows</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, battery_charging_interface.o(i.Battery_charging_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Battery_charging_windows &rArr; Display_BAT_Charging &rArr; Disp_Proportion_Data &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT_Charging
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
</UL>

<P><STRONG><a name="[403]"></a>Bring_AUTO_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, brightness_auto.o(i.Bring_AUTO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c0]"></a>Bring_AUTO_Testing</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, brightness_auto.o(i.Bring_AUTO_Testing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Bring_AUTO_Testing &rArr; Data_Average
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_LUX_Data
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ret_Bring_VIP
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Average
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SET_BL_Brightness
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1c6]"></a>Bypass_MODE_windows</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main interface.o(i.Bypass_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Bypass_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[7e]"></a>Bypass_Output_control</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bypass_mode_control.o(i.Bypass_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Bypass_Output_control &rArr; Vout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bypass_mode_control.o(i.Bypass_mode_int)
</UL>
<P><STRONG><a name="[1cc]"></a>Bypass_mode_int</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bypass_mode_control.o(i.Bypass_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Bypass_mode_int &rArr; Voltage_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[86]"></a>CCT_Custom_Data_Set_interface</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = CCT_Custom_Data_Set_interface &rArr; CCT_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> main interface.o(i.Main_operation)
</UL>
<P><STRONG><a name="[1d4]"></a>CCT_Custom_MODE_windows</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, main interface.o(i.CCT_Custom_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CCT_Custom_MODE_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWaveInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[85]"></a>CCV_Custom_Data_Set_interface</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = CCV_Custom_Data_Set_interface &rArr; CCV_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> main interface.o(i.Main_operation)
</UL>
<P><STRONG><a name="[80]"></a>CCV_Custom_Data_update</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, custom_curve_adjustment_interface.o(i.CCV_Custom_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CCV_Custom_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> custom_curve_adjustment_interface.o(i.CCV_SET_Operation)
</UL>
<P><STRONG><a name="[1dc]"></a>CCV_Custom_MODE_windows</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main interface.o(i.CCV_Custom_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CCV_Custom_MODE_windows &rArr; OutV_parts &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWaveInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[83]"></a>CC_SET_menu_interface</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, diy_menu_interface.o(i.CC_SET_menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = CC_SET_menu_interface &rArr; CC_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_operation
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> diy_menu_interface.o(i.Main_menu_operation)
</UL>
<P><STRONG><a name="[24e]"></a>COMP_ONorOFF</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_compare.o(i.COMP_ONorOFF))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>

<P><STRONG><a name="[208]"></a>CRC_CalcBlockCRC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, crc.o(i.CRC_CalcBlockCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CRC_CalcBlockCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[3cc]"></a>Clear_numberANDlengthTim</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, statistics port number.o(i.Clear_numberANDlengthTim))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
</UL>

<P><STRONG><a name="[44a]"></a>Copy_information</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, app_usb.o(i.Copy_information))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Copy_information
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Query_parameters
</UL>

<P><STRONG><a name="[449]"></a>Copy_information_20</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, app_usb.o(i.Copy_information_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Copy_information_20
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Query_parameters
</UL>

<P><STRONG><a name="[1e0]"></a>Count_Vout</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, voltage_mode_control.o(i.Count_Vout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Count_Vout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Output_control
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[3e0]"></a>Count_WeekDay</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, app_rtc.o(i.Count_WeekDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Count_WeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RTC_DateTime
</UL>

<P><STRONG><a name="[1fb]"></a>Count_Wout</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_outputcontrol.o(i.Count_Wout))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_Output_control
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Output_control
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Output_control
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
</UL>

<P><STRONG><a name="[8b]"></a>Custom_CCT_Output_control</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, curvecct_mode_control.o(i.Custom_CCT_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Custom_CCT_Output_control &rArr; Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Average_Temp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempe_Compensation_calculation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curvecct_mode_control.o(i.Custom_CCT_mode_int)
</UL>
<P><STRONG><a name="[1fe]"></a>Custom_CCT_mode_int</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, curvecct_mode_control.o(i.Custom_CCT_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Custom_CCT_mode_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[8c]"></a>Custom_CCV_Output_control</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, curveccv_mode_control.o(i.Custom_CCV_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Custom_CCV_Output_control &rArr; Power_down_control &rArr; Fault_handling &rArr; PWM_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curveccv_mode_control.o(i.Custom_CCV_mode_int)
</UL>
<P><STRONG><a name="[200]"></a>Custom_CCV_mode_int</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, curveccv_mode_control.o(i.Custom_CCV_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Custom_CCV_mode_int &rArr; CCV_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[84]"></a>Custom_Data_Set_interface</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = Custom_Data_Set_interface &rArr; CCW_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> main interface.o(i.Main_operation)
</UL>
<P><STRONG><a name="[7f]"></a>Custom_Data_update</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, custom_curve_adjustment_interface.o(i.Custom_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Custom_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
</UL>
<BR>[Address Reference Count : 2]<UL><LI> custom_curve_adjustment_interface.o(i.CCT_SET_Operation)
<LI> custom_curve_adjustment_interface.o(i.CCW_SET_Operation)
</UL>
<P><STRONG><a name="[202]"></a>Custom_MODE_windows</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, main interface.o(i.Custom_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Custom_MODE_windows &rArr; OutW_parts &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWaveInit
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[8d]"></a>Custom_Output_control</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, curvewatt_mode_control.o(i.Custom_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Custom_Output_control &rArr; Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> curvewatt_mode_control.o(i.Custom_mode_int)
</UL>
<P><STRONG><a name="[206]"></a>Custom_WriteFLASH</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_custom.o(i.Custom_WriteFLASH))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Custom_WriteFLASH &rArr; SPI_Flash_Write_BuffData32 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_CRC_DeInit
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_CalcBlockCRC
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
</UL>

<P><STRONG><a name="[20b]"></a>Custom_mode_int</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, curvewatt_mode_control.o(i.Custom_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Custom_mode_int &rArr; Custom_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[81]"></a>DIY_menu_interface</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, diy_menu_interface.o(i.DIY_menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = DIY_menu_interface &rArr; Main_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
</UL>
<BR>[Address Reference Count : 7]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> diy_menu_interface.o(i.Main_menu_operation)
<LI> diy_menu_interface.o(i.VT_SET_coordinate_Init)
<LI> diy_menu_interface.o(i.VT_SET_menu_operation)
<LI> main_menu_interface.o(i.Main_menu_operation)
<LI> diy_menu_interface.o(i.CC_SET_coordinate_Init)
<LI> diy_menu_interface.o(i.VW_SET_coordinate_Init)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA1_Stream0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[216]"></a>Data_retention</STRONG> (Thumb, 422 bytes, Stack size 32 bytes, app_flash.o(i.Data_retention))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Data_retention &rArr; Custom_WriteFLASH &rArr; SPI_Flash_Write_BuffData32 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[190]"></a>Decide_BAT_Congman</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, app_chargingbat.o(i.Decide_BAT_Congman))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Decide_BAT_Congman
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[21b]"></a>Default_Data</STRONG> (Thumb, 286 bytes, Stack size 28 bytes, app_flash.o(i.Default_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Default_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_touch
</UL>

<P><STRONG><a name="[c5]"></a>Default_Set_interface</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, system_settings_interface.o(i.Default_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Default_Set_interface &rArr; Default_Set_touch &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_touch
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[21a]"></a>Default_Set_touch</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, system_settings_interface.o(i.Default_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Default_Set_touch &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Data
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
</UL>

<P><STRONG><a name="[1e1]"></a>Delay_Nus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_delay.o(i.Delay_Nus))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OFF
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
</UL>

<P><STRONG><a name="[21d]"></a>Disable_VoutADC_Use</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, app_atomizer.o(i.Disable_VoutADC_Use))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Disable_VoutADC_Use &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
</UL>

<P><STRONG><a name="[1bc]"></a>Disp_EXIT_Key</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, main_menu_interface.o(i.Disp_EXIT_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Button
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
</UL>

<P><STRONG><a name="[22a]"></a>Disp_MENU_Name</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, vt_mode_set_interface.o(i.Disp_MENU_Name))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Disp_MENU_Name &rArr; Disp_Button &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Operation
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
</UL>

<P><STRONG><a name="[12]"></a>Disp_Sleep_NOP</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sleeping.o(i.Disp_Sleep_NOP))
<BR>[Address Reference Count : 2]<UL><LI> app_sleeping.o(.data)
<LI> one_power_interface.o(i.BOOT_LOGO_interface)
</UL>
<P><STRONG><a name="[22e]"></a>Disp_Vape_Time</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, main interface.o(i.Disp_Vape_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Disp_Vape_Time &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[22d]"></a>Disp_Vape_number</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, main interface.o(i.Disp_Vape_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Disp_Vape_number &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[22c]"></a>Display_BAT</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, main interface.o(i.Display_BAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = Display_BAT &rArr; Batt_Back_shanshuo &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[1b5]"></a>Display_BAT_Charging</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, battery_charging_interface.o(i.Display_BAT_Charging))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Display_BAT_Charging &rArr; Disp_Proportion_Data &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
</UL>

<P><STRONG><a name="[1f7]"></a>Draw_Bitmap_EX</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_image_flash.o(i.Draw_Bitmap_EX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Draw_Bitmap_EX &rArr; SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_SP_Vape_Arc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SP_Vape_Arc
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Data_update
</UL>

<P><STRONG><a name="[4f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_PWM_Wdata
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[249]"></a>Enable_VoutADC_Use</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, app_atomizer.o(i.Enable_VoutADC_Use))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Enable_VoutADC_Use &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>

<P><STRONG><a name="[67]"></a>FIRE_TO_UNLOCK_windows</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, alarm_interface.o(i.FIRE_TO_UNLOCK_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = FIRE_TO_UNLOCK_windows &rArr; draw_Bmp_ex &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
</UL>
<BR>[Address Reference Count : 3]<UL><LI> public.o(i.ADDSUB_LOCK_GOTO)
<LI> public.o(i.Key_smoke)
<LI> alarm_interface.o(i.Warning_interface)
</UL>
<P><STRONG><a name="[24a]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Launch
</UL>

<P><STRONG><a name="[3c3]"></a>F_Average_Real</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_outputcontrol.o(i.F_Average_Real))
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_Read_load
</UL>

<P><STRONG><a name="[1fc]"></a>F_Average_Temp</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_outputcontrol.o(i.F_Average_Temp))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
</UL>

<P><STRONG><a name="[3c1]"></a>F_Average_Vout</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, app_outputcontrol.o(i.F_Average_Vout))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = F_Average_Vout
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
</UL>

<P><STRONG><a name="[18c]"></a>F_BAT_Actual</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, app_chargingbat.o(i.F_BAT_Actual))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = F_BAT_Actual
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual_Inti
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
</UL>

<P><STRONG><a name="[191]"></a>F_BAT_Actual_Inti</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_chargingbat.o(i.F_BAT_Actual_Inti))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual
</UL>

<P><STRONG><a name="[177]"></a>Fanhui_Main_interface</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, public.o(i.Fanhui_Main_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Fanhui_Main_interface &rArr; Atomizer_inquiry_GOTO &rArr; Auto_match_Watt_program
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_touch
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
</UL>

<P><STRONG><a name="[1ca]"></a>Fault_handling</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_outputcontrol.o(i.Fault_handling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Fault_handling &rArr; PWM_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OFF
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_ONorOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_Read_load
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_Output_control
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[38c]"></a>Fault_handling2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_outputcontrol.o(i.Fault_handling2))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>

<P><STRONG><a name="[24f]"></a>Firmware_Tim_Disp</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, firmware_tim_interface.o(i.Firmware_Tim_Disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Firmware_Tim_Disp &rArr; Menu_Bottom_Windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_interface
</UL>

<P><STRONG><a name="[ce]"></a>Firmware_Tim_interface</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, firmware_tim_interface.o(i.Firmware_Tim_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Firmware_Tim_interface &rArr; Firmware_Tim_Disp &rArr; Menu_Bottom_Windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[250]"></a>Flash_GUI_BMP_GetXSizeEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_BMP_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_GUI_BMP_GetXSizeEx &rArr; SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
</UL>

<P><STRONG><a name="[252]"></a>Flash_GUI_BMP_GetYSizeEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_BMP_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_GUI_BMP_GetYSizeEx &rArr; SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_GetYSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
</UL>

<P><STRONG><a name="[1b6]"></a>Flash_GUI_GIF_DrawSubEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_GIF_DrawSubEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Flash_GUI_GIF_DrawSubEx &rArr; GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_animation
</UL>

<P><STRONG><a name="[1b7]"></a>Flash_GUI_GIF_GetImageInfoEx</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_GIF_GetImageInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Flash_GUI_GIF_GetImageInfoEx &rArr; GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_animation
</UL>

<P><STRONG><a name="[19c]"></a>Flash_GUI_GIF_GetInfoEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_GIF_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Flash_GUI_GIF_GetInfoEx &rArr; GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
</UL>

<P><STRONG><a name="[225]"></a>Flash_GUI_GetStreamedBitmapInfoEx</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_image_flash.o(i.Flash_GUI_GetStreamedBitmapInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Flash_GUI_GetStreamedBitmapInfoEx &rArr; GUI_GetStreamedBitmapInfoEx &rArr; GUI__ReadHeaderFromStream
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStreamedBitmapInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
</UL>

<P><STRONG><a name="[258]"></a>Flash_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flahs_driver.o(i.Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Flash_Init &rArr; SPI_Flash_ReadID &rArr; SPI3_Read_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ed]"></a>GL_DispChar</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[25c]"></a>GL_DrawArc</STRONG> (Thumb, 304 bytes, Stack size 56 bytes, gui_arc.o(i.GL_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[25e]"></a>GL_DrawBitmap</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
</UL>

<P><STRONG><a name="[271]"></a>GL_FillPolygon</STRONG> (Thumb, 618 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GL_FillPolygon
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
</UL>

<P><STRONG><a name="[15b]"></a>GOTO_Screensaver_interface</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, public.o(i.GOTO_Screensaver_interface))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[ff]"></a>GUIMONO_DispChar</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>GUIPROP_AA2_EXT_DispChar</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, guiaa_char2ext.o(i.GUIPROP_AA2_EXT_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUIPROP_AA2_EXT_DispChar &rArr; GUI_AA__DrawCharAA2 &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
</UL>
<BR>[Address Reference Count : 16]<UL><LI> century45gothic10_808.o(.constdata)
<LI> accidental_presidency140.o(.constdata)
<LI> arial27.o(.constdata)
<LI> arial32.o(.constdata)
<LI> arial41.o(.constdata)
<LI> arial47.o(.constdata)
<LI> arial82.o(.constdata)
<LI> arial22.o(.constdata)
<LI> gill37sans_mt9_264.o(.constdata)
<LI> gill18sans_mt4_632.o(.constdata)
<LI> arial60.o(.constdata)
<LI> raavi38b_19.o(.constdata)
<LI> raavi64b_28.o(.constdata)
<LI> raavi49b_22.o(.constdata)
<LI> raavi18.o(.constdata)
<LI> raavi22.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>GUIPROP_EXT_GetCharDistX</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_EXT_GetCharDistX
</UL>
<BR>[Address Reference Count : 16]<UL><LI> century45gothic10_808.o(.constdata)
<LI> accidental_presidency140.o(.constdata)
<LI> arial27.o(.constdata)
<LI> arial32.o(.constdata)
<LI> arial41.o(.constdata)
<LI> arial47.o(.constdata)
<LI> arial82.o(.constdata)
<LI> arial22.o(.constdata)
<LI> gill37sans_mt9_264.o(.constdata)
<LI> gill18sans_mt4_632.o(.constdata)
<LI> arial60.o(.constdata)
<LI> raavi38b_19.o(.constdata)
<LI> raavi64b_28.o(.constdata)
<LI> raavi49b_22.o(.constdata)
<LI> raavi18.o(.constdata)
<LI> raavi22.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>GUIPROP_EXT_GetCharInfo</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetCharInfo))
<BR>[Address Reference Count : 16]<UL><LI> century45gothic10_808.o(.constdata)
<LI> accidental_presidency140.o(.constdata)
<LI> arial27.o(.constdata)
<LI> arial32.o(.constdata)
<LI> arial41.o(.constdata)
<LI> arial47.o(.constdata)
<LI> arial82.o(.constdata)
<LI> arial22.o(.constdata)
<LI> gill37sans_mt9_264.o(.constdata)
<LI> gill18sans_mt4_632.o(.constdata)
<LI> arial60.o(.constdata)
<LI> raavi38b_19.o(.constdata)
<LI> raavi64b_28.o(.constdata)
<LI> raavi49b_22.o(.constdata)
<LI> raavi18.o(.constdata)
<LI> raavi22.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>GUIPROP_EXT_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_GetFontInfo))
<BR>[Address Reference Count : 16]<UL><LI> century45gothic10_808.o(.constdata)
<LI> accidental_presidency140.o(.constdata)
<LI> arial27.o(.constdata)
<LI> arial32.o(.constdata)
<LI> arial41.o(.constdata)
<LI> arial47.o(.constdata)
<LI> arial82.o(.constdata)
<LI> arial22.o(.constdata)
<LI> gill37sans_mt9_264.o(.constdata)
<LI> gill18sans_mt4_632.o(.constdata)
<LI> arial60.o(.constdata)
<LI> raavi38b_19.o(.constdata)
<LI> raavi64b_28.o(.constdata)
<LI> raavi49b_22.o(.constdata)
<LI> raavi18.o(.constdata)
<LI> raavi22.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>GUIPROP_EXT_IsInFont</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT_IsInFont))
<BR>[Address Reference Count : 16]<UL><LI> century45gothic10_808.o(.constdata)
<LI> accidental_presidency140.o(.constdata)
<LI> arial27.o(.constdata)
<LI> arial32.o(.constdata)
<LI> arial41.o(.constdata)
<LI> arial47.o(.constdata)
<LI> arial82.o(.constdata)
<LI> arial22.o(.constdata)
<LI> gill37sans_mt9_264.o(.constdata)
<LI> gill18sans_mt4_632.o(.constdata)
<LI> arial60.o(.constdata)
<LI> raavi38b_19.o(.constdata)
<LI> raavi64b_28.o(.constdata)
<LI> raavi49b_22.o(.constdata)
<LI> raavi18.o(.constdata)
<LI> raavi22.o(.constdata)
</UL>
<P><STRONG><a name="[19]"></a>GUIPROP_EXT__ClearLine</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, gui_encext.o(i.GUIPROP_EXT__ClearLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUIPROP_EXT__ClearLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__FindChar
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.data)
</UL>
<P><STRONG><a name="[f3]"></a>GUIPROP_EXT__DispLine</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, gui_encext.o(i.GUIPROP_EXT__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUIPROP_EXT__DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_encext.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>GUIPROP_EXT__FindChar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_charpext.o(i.GUIPROP_EXT__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[48c]"></a>GUI_AA_DisableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_DisableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
</UL>

<P><STRONG><a name="[16d]"></a>GUI_AA_DrawArc</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, guiaa_arc.o(i.GUI_AA_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_Elongation
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Data_update
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
</UL>

<P><STRONG><a name="[48b]"></a>GUI_AA_EnableHiRes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_EnableHiRes))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
</UL>

<P><STRONG><a name="[26c]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[26e]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, guiaa_circle.o(i.GUI_AA_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_AA_FillCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Hours_2_Display
</UL>

<P><STRONG><a name="[20e]"></a>GUI_AA_FillPolygon</STRONG> (Thumb, 502 bytes, Stack size 64 bytes, guiaa_poly.o(i.GUI_AA_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_AA_FillPolygon &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Hours_2_Display
</UL>

<P><STRONG><a name="[169]"></a>GUI_AA_FillRoundedRect</STRONG> (Thumb, 524 bytes, Stack size 96 bytes, guiaa_fillroundedrect.o(i.GUI_AA_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_AA_FillRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[26f]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_HiRes2Pixel))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
</UL>

<P><STRONG><a name="[270]"></a>GUI_AA_Init</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
</UL>

<P><STRONG><a name="[26b]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[168]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_SetFactor))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_Elongation
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Hours_2_Display
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Data_update
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[264]"></a>GUI_AA__DrawCharAA2</STRONG> (Thumb, 392 bytes, Stack size 96 bytes, guiaa_char2.o(i.GUI_AA__DrawCharAA2))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_AA__DrawCharAA2 &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
</UL>

<P><STRONG><a name="[279]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[27b]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2f1]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[27e]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[28d]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[273]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[283]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[27c]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[284]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
</UL>

<P><STRONG><a name="[27d]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapExNoPalette
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[45e]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[285]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_adddecmin.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
</UL>

<P><STRONG><a name="[287]"></a>GUI_AddDecShift</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[292]"></a>GUI_AddSign</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_adddecshift.o(i.GUI_AddSign))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[251]"></a>GUI_BMP_GetXSizeEx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_bmp.o(i.GUI_BMP_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_BMP_GetXSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetXSizeEx
</UL>

<P><STRONG><a name="[253]"></a>GUI_BMP_GetYSizeEx</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_bmp.o(i.GUI_BMP_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_BMP_GetYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetYSizeEx
</UL>

<P><STRONG><a name="[479]"></a>GUI_CalcColorDist</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[179]"></a>GUI_Clear</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_Clear &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[289]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[28a]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[28c]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[28b]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[2c3]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[2ce]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[23c]"></a>GUI_DispChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_dispchar.o(i.GUI_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispChar &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_DispCharAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[1af]"></a>GUI_DispDecAt</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
</UL>

<P><STRONG><a name="[23b]"></a>GUI_DispDecMin</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
</UL>

<P><STRONG><a name="[205]"></a>GUI_DispDecShift</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[28f]"></a>GUI_DispFloatFix</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_valf.o(i.GUI_DispFloatFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_DispFloatFix &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
</UL>

<P><STRONG><a name="[291]"></a>GUI_DispSDecShift</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispSDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[28e]"></a>GUI_DispString</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_DispStringAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
</UL>

<P><STRONG><a name="[167]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstringhcenter.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
</UL>

<P><STRONG><a name="[1b9]"></a>GUI_DispStringInRect</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>

<P><STRONG><a name="[16e]"></a>GUI_DrawArc</STRONG> (Thumb, 336 bytes, Stack size 80 bytes, gui_arc.o(i.GUI_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tim_Vape_Arc_R
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tim_Vape_Arc_L
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SP_Vape_Arc
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Cutt_Vape_Arc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_SPPShorten
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_SPPElongation
</UL>

<P><STRONG><a name="[29d]"></a>GUI_DrawBitmap</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>

<P><STRONG><a name="[20f]"></a>GUI_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_drawhline.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
</UL>

<P><STRONG><a name="[1a1]"></a>GUI_DrawRect</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_parts
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
</UL>

<P><STRONG><a name="[89]"></a>GUI_DrawStreamedBitmapA565Ex</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_stream.o(i.GUI_DrawStreamedBitmapA565Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_DrawStreamedBitmapA565Ex &rArr; _DrawStreamedBitmapEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapEx
</UL>
<BR>[Address Reference Count : 14]<UL><LI> main_menu_interface.o(i.Menu_Page_Init)
<LI> main_menu_interface.o(i.Selected_Cursor)
<LI> rtc_set_interface.o(i.Disp_L_Arrow)
<LI> rtc_set_interface.o(i.Disp_R_Arrow)
<LI> main interface.o(i.Clear_SP_Vape_Arc)
<LI> main interface.o(i.Disp_SP_Vape_Arc)
<LI> main interface.o(i.LOCK_Res_update)
<LI> main interface.o(i.Vape_MP3_Beat)
<LI> tcr_adjust_interface.o(i.Disp_L_Arrow)
<LI> tcr_adjust_interface.o(i.Disp_R_Arrow)
<LI> custom_curve_adjustment_interface.o(i.Disp_L_Arrow)
<LI> custom_curve_adjustment_interface.o(i.Disp_R_Arrow)
<LI> system_settings_interface.o(i.VIBRATE_Data_update)
<LI> vt_mode_set_interface.o(i.Disp_DATA_Adjust_Name)
</UL>
<P><STRONG><a name="[1a2]"></a>GUI_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_drawvline.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_parts
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
</UL>

<P><STRONG><a name="[181]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Hours_2_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_LOGO_update
</UL>

<P><STRONG><a name="[2a0]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
</UL>

<P><STRONG><a name="[2a1]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 246 bytes, Stack size 96 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_FillRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>

<P><STRONG><a name="[254]"></a>GUI_GIF_DrawSubEx</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, gui_gif.o(i.GUI_GIF_DrawSubEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[255]"></a>GUI_GIF_GetImageInfoEx</STRONG> (Thumb, 456 bytes, Stack size 56 bytes, gui_gif.o(i.GUI_GIF_GetImageInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[256]"></a>GUI_GIF_GetInfoEx</STRONG> (Thumb, 384 bytes, Stack size 56 bytes, gui_gif.o(i.GUI_GIF_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetInfoEx
</UL>

<P><STRONG><a name="[2a5]"></a>GUI_GIF__DrawFromFilePointer</STRONG> (Thumb, 600 bytes, Stack size 168 bytes, gui_gif.o(i.GUI_GIF__DrawFromFilePointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[2aa]"></a>GUI_GIF__GetNextByte</STRONG> (Thumb, 850 bytes, Stack size 40 bytes, gui_gif.o(i.GUI_GIF__GetNextByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_GIF__GetNextByte &rArr; _GetDataBlock &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[2e2]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[267]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
</UL>

<P><STRONG><a name="[1e9]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[2fb]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[2ac]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[266]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[293]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1eb]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getfontsizey.o(i.GUI_GetFontSizeY))
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[2d6]"></a>GUI_GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI_GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[26a]"></a>GUI_GetPenSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_pen.o(i.GUI_GetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[3ba]"></a>GUI_GetPixelIndex</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lcd_getp.o(i.GUI_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>

<P><STRONG><a name="[257]"></a>GUI_GetStreamedBitmapInfoEx</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, gui_stream.o(i.GUI_GetStreamedBitmapInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_GetStreamedBitmapInfoEx &rArr; GUI__ReadHeaderFromStream
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReadHeaderFromStream
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GetStreamedBitmapInfoEx
</UL>

<P><STRONG><a name="[294]"></a>GUI_GetYAdjust</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[2e4]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[2e3]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[204]"></a>GUI_GotoXY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
</UL>

<P><STRONG><a name="[2b0]"></a>GUI_Init</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[286]"></a>GUI_Long2Len</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, gui_adddecshift.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[2bf]"></a>GUI_MEASDEV_ClearRect</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidev_measure.o(i.GUI_MEASDEV_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEASDEV_ClearRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[2c0]"></a>GUI_MEASDEV_Create</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidev_measure.o(i.GUI_MEASDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_MEASDEV_Create &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[2c1]"></a>GUI_MEASDEV_Delete</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_MEASDEV_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[2c4]"></a>GUI_MEASDEV_GetRect</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEASDEV_GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[2c5]"></a>GUI_MEASDEV_Select</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidev_measure.o(i.GUI_MEASDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_MEASDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
</UL>

<P><STRONG><a name="[2c8]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2c9]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[1bf]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_MEMDEV_Create &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Progress
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
</UL>

<P><STRONG><a name="[3fc]"></a>GUI_MEMDEV_CreateAuto</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_CreateAuto))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
</UL>

<P><STRONG><a name="[183]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>

<P><STRONG><a name="[186]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Progress
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[3f4]"></a>GUI_MEMDEV_DeleteAuto</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidev_auto.o(i.GUI_MEMDEV_DeleteAuto))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_2_Return
</UL>

<P><STRONG><a name="[1bd]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 328 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_touch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_touch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
</UL>

<P><STRONG><a name="[2db]"></a>GUI_MEMDEV_DrawAuto</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, guidev_auto.o(i.GUI_MEMDEV_DrawAuto))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = GUI_MEMDEV_DrawAuto &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_GetRect
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Create
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>

<P><STRONG><a name="[2dd]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2df]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2d7]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2d9]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_ReduceYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[184]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Progress
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>

<P><STRONG><a name="[2da]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[185]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Progress
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>

<P><STRONG><a name="[2cf]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
</UL>

<P><STRONG><a name="[2e0]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[c0]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 2070 bytes, Stack size 168 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidev_1.o(i._GetDevFunc)
<LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[2dc]"></a>GUI_MergeRect</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[46a]"></a>GUI_MoveRect</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
</UL>

<P><STRONG><a name="[2e7]"></a>GUI_Read_BUFF_Dot</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, tft_drive.o(i.GUI_Read_BUFF_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read_Window
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadColor_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[2f3]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[2ea]"></a>GUI_RotatePolygon</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_polyrotate.o(i.GUI_RotatePolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GUI_RotatePolygon &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>

<P><STRONG><a name="[2c2]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Delete
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[2cb]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[178]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[165]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_parts
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_Elongation
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Vip_disp
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Hours_2_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Data_update
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_LOGO_update
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
</UL>

<P><STRONG><a name="[2f2]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[25f]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[166]"></a>GUI_SetFont</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_DATA_Adjust_Name
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
</UL>

<P><STRONG><a name="[2bd]"></a>GUI_SetOrg</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[16c]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__max_DisWave
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tim_Vape_Arc_R
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tim_Vape_Arc_L
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SP_Vape_Arc
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Cutt_Vape_Arc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_parts
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_SPPShorten
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_SPPElongation
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_Elongation
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_Back_shanshuo
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Seconds_2_Display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Pointer_Minutes_2_Display
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__pfDraw
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Data_update
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
</UL>

<P><STRONG><a name="[299]"></a>GUI_SetTextAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>

<P><STRONG><a name="[161]"></a>GUI_SetTextMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Firmware_Tim
</UL>

<P><STRONG><a name="[2ef]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2ee]"></a>GUI_StoreKey</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[494]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i.GUI_UC_SetEncodeUTF8))
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCharacterLib
</UL>

<P><STRONG><a name="[265]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__DispLine
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[298]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[482]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[2e1]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[2b1]"></a>GUI_X_Config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1b]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[2b3]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2e5]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 396 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2eb]"></a>GUI__CosHQ</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, gui__sinhq.o(i.GUI__CosHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__CosHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
</UL>

<P><STRONG><a name="[297]"></a>GUI__DispLine</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[29c]"></a>GUI__DispStringInRect</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, gui_dispstringinrect.o(i.GUI__DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[2f6]"></a>GUI__DrawBitmap16bpp</STRONG> (Thumb, 684 bytes, Stack size 112 bytes, gui__drawbitmap16bpp.o(i.GUI__DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapSwapRB
</UL>

<P><STRONG><a name="[2f9]"></a>GUI__DrawBitmapA16bpp</STRONG> (Thumb, 752 bytes, Stack size 128 bytes, gui_drawbitmap_a16.o(i.GUI__DrawBitmapA16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI__DrawBitmapA16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapA565
</UL>

<P><STRONG><a name="[2f7]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[2ae]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__getfontsizey.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[296]"></a>GUI__GetLineDistX</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[295]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1ea]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[2f5]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(i.GUI__HandleEOLine))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[46b]"></a>GUI__IntersectRect</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[29b]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[2f4]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[2fc]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[1c]"></a>GUI__MixColors</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[2a8]"></a>GUI__Read16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReadHeaderFromStream
</UL>

<P><STRONG><a name="[288]"></a>GUI__Read32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read32))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_GetYSizeEx
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_GetXSizeEx
</UL>

<P><STRONG><a name="[2af]"></a>GUI__ReadHeaderFromStream</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_stream.o(i.GUI__ReadHeaderFromStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__ReadHeaderFromStream
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStreamedBitmapInfoEx
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapEx
</UL>

<P><STRONG><a name="[274]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[2fa]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui__setpixelalpha.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[2ec]"></a>GUI__SinHQ</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, gui__sinhq.o(i.GUI__SinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
</UL>

<P><STRONG><a name="[275]"></a>GUI__memset</STRONG> (Thumb, 208 bytes, Stack size 12 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[486]"></a>GUI__memset16</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[2a2]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__sqrt32.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
</UL>

<P><STRONG><a name="[1a7]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetCurrentMode
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevDisconnect
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevConnect
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_LCD_RESET
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[495]"></a>HAL_FLASHEx_OBGetConfig</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32f4xx_hal_flash_ex.o(i.HAL_FLASHEx_OBGetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_FLASHEx_OBProgram</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, stm32f4xx_hal_flash_ex.o(i.HAL_FLASHEx_OBProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASHEx_OBProgram &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[498]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[300]"></a>HAL_FLASH_OB_Launch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_OB_Launch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_FLASH_OB_Launch &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[499]"></a>HAL_FLASH_OB_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_OB_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[496]"></a>HAL_FLASH_OB_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_OB_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[497]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[341]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 270 bytes, Stack size 36 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspDeInit
</UL>

<P><STRONG><a name="[343]"></a>HAL_GPIO_Init</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
</UL>

<P><STRONG><a name="[24b]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[411]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[301]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[303]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[304]"></a>HAL_MspInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[342]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspDeInit
</UL>

<P><STRONG><a name="[344]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
</UL>

<P><STRONG><a name="[306]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
</UL>

<P><STRONG><a name="[302]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[32e]"></a>HAL_PCDEx_LPM_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_pcd_ex.o(i.HAL_PCDEx_LPM_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[437]"></a>HAL_PCDEx_SetRxFiFo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_pcd_ex.o(i.HAL_PCDEx_SetRxFiFo))
<BR><BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Init
</UL>

<P><STRONG><a name="[438]"></a>HAL_PCDEx_SetTxFiFo</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f4xx_hal_pcd_ex.o(i.HAL_PCDEx_SetTxFiFo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PCDEx_SetTxFiFo
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Init
</UL>

<P><STRONG><a name="[308]"></a>HAL_PCD_ConnectCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_ConnectCallback))
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DevConnected
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[30a]"></a>HAL_PCD_DataInStageCallback</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_DataInStageCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_PCD_DataInStageCallback &rArr; USBD_LL_DataInStage &rArr; USBD_CtlReceiveStatus &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataInStage
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[30c]"></a>HAL_PCD_DataOutStageCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_DataOutStageCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_PCD_DataOutStageCallback &rArr; USBD_LL_DataOutStage &rArr; USBD_CtlContinueRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataOutStage
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_EP_OutXfrComplete_int
</UL>

<P><STRONG><a name="[30e]"></a>HAL_PCD_DeInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Stop
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DeInit
</UL>

<P><STRONG><a name="[311]"></a>HAL_PCD_DisconnectCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_DisconnectCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PCD_DisconnectCallback &rArr; USBD_LL_DevDisconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DevDisconnected
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[313]"></a>HAL_PCD_EP_Close</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_PCD_EP_Close &rArr; USB_DeactivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DeactivateEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_CloseEP
</UL>

<P><STRONG><a name="[315]"></a>HAL_PCD_EP_ClrStall</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_ClrStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PCD_EP_ClrStall
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_ClearStallEP
</UL>

<P><STRONG><a name="[317]"></a>HAL_PCD_EP_Open</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_PCD_EP_Open &rArr; USB_ActivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ActivateEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_OpenEP
</UL>

<P><STRONG><a name="[319]"></a>HAL_PCD_EP_Receive</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
</UL>

<P><STRONG><a name="[31c]"></a>HAL_PCD_EP_SetStall</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_SetStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PCD_EP_SetStall &rArr; USB_EP0_OutStart
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPSetStall
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
</UL>

<P><STRONG><a name="[31f]"></a>HAL_PCD_EP_Transmit</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_EP_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Transmit
</UL>

<P><STRONG><a name="[320]"></a>HAL_PCD_IRQHandler</STRONG> (Thumb, 1070 bytes, Stack size 48 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_PCD_IRQHandler &rArr; HAL_PCD_SetupStageCallback &rArr; USBD_LL_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetTurnaroundTime
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadPacket
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadInterrupts
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadDevOutEPInterrupt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadDevInEPInterrupt
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadDevAllOutEpInterrupt
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadDevAllInEpInterrupt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetMode
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetDevSpeed
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTxFifo
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0_OutStart
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ActivateSetup
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCDEx_LPM_Callback
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_WriteEmptyTxFifo
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_EP_OutXfrComplete_int
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SuspendCallback
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SetupStageCallback
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SOFCallback
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ResumeCallback
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ResetCallback
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ISOOUTIncompleteCallback
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ISOINIncompleteCallback
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DisconnectCallback
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataInStageCallback
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ConnectCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[335]"></a>HAL_PCD_ISOINIncompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_ISOINIncompleteCallback))
<BR><BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_IsoINIncomplete
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[336]"></a>HAL_PCD_ISOOUTIncompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_ISOOUTIncompleteCallback))
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_IsoOUTIncomplete
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[339]"></a>HAL_PCD_Init</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetCurrentMode
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableGlobalInt
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevInit
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevDisconnect
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreInit
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_MspInit
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Init
</UL>

<P><STRONG><a name="[310]"></a>HAL_PCD_MspDeInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usbd_conf.o(i.HAL_PCD_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DeInit
</UL>

<P><STRONG><a name="[33a]"></a>HAL_PCD_MspInit</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, usbd_conf.o(i.HAL_PCD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[333]"></a>HAL_PCD_ResetCallback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.HAL_PCD_ResetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_PCD_ResetCallback &rArr; USBD_LL_Reset &rArr; USBD_LL_OpenEP &rArr; HAL_PCD_EP_Open &rArr; USB_ActivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetSpeed
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[32b]"></a>HAL_PCD_ResumeCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_ResumeCallback))
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[334]"></a>HAL_PCD_SOFCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_SOFCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PCD_SOFCallback &rArr; USBD_LL_SOF
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SOF
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[349]"></a>HAL_PCD_SetAddress</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PCD_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetDevAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetUSBAddress
</UL>

<P><STRONG><a name="[327]"></a>HAL_PCD_SetupStageCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_conf.o(i.HAL_PCD_SetupStageCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_PCD_SetupStageCallback &rArr; USBD_LL_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[34c]"></a>HAL_PCD_Start</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_PCD_Start &rArr; USB_DevConnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableGlobalInt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Start
</UL>

<P><STRONG><a name="[30f]"></a>HAL_PCD_Stop</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_pcd.o(i.HAL_PCD_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_PCD_Stop &rArr; USB_DevDisconnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StopDevice
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableGlobalInt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DeInit
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Stop
</UL>

<P><STRONG><a name="[32c]"></a>HAL_PCD_SuspendCallback</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbd_conf.o(i.HAL_PCD_SuspendCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_PCD_SuspendCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[40e]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_hal_pwr.o(i.HAL_PWR_EnterSTOPMode))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[331]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[352]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[305]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[351]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[73]"></a>HIGH_ATOMIZER_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.HIGH_ATOMIZER_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = HIGH_ATOMIZER_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[24]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[354]"></a>Interface_display</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, wm_disp.o(i.Interface_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Interface_display &rArr; LED_drive
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_BL_Brightness
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_drive
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOffDisplay
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_OffDisplay_excessive
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ALL_Task
</UL>

<P><STRONG><a name="[356]"></a>KEY_ALL_Task</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_key.o(i.KEY_ALL_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = KEY_ALL_Task &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interface_display
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_scan
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMODE_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[359]"></a>KEY_Filter_processing</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, app_key.o(i.KEY_Filter_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KEY_Filter_processing
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_KEY_anxia_JC
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[374]"></a>KEY_LED_PWM_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pwm_int.o(i.KEY_LED_PWM_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_drive
</UL>

<P><STRONG><a name="[373]"></a>KEY_LED_Wdata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_pwm_int.o(i.KEY_LED_Wdata))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_drive
</UL>

<P><STRONG><a name="[1e7]"></a>KEY_Main_menu_operation</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, main_menu_interface.o(i.KEY_Main_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_operation
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_operation
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_operation
</UL>

<P><STRONG><a name="[15e]"></a>KEY_R_ADD_SUB</STRONG> (Thumb, 264 bytes, Stack size 36 bytes, app_key.o(i.KEY_R_ADD_SUB))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KEY_R_ADD_SUB
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_set
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Year
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Seconds
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Month
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Minutes
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Hours
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Date
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AMPM_set
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_touch
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_touch
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_touch
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_touch
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Operation
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_touch
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
</UL>

<P><STRONG><a name="[35e]"></a>KEY_TFT_RESET</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_key.o(i.KEY_TFT_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY_TFT_RESET &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_scan
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMODE_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_REset_program
</UL>

<P><STRONG><a name="[357]"></a>KeyMODE_scan</STRONG> (Thumb, 296 bytes, Stack size 20 bytes, app_key.o(i.KeyMODE_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = KeyMODE_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ALL_Task
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TFT_RESET
</UL>

<P><STRONG><a name="[156]"></a>Key_Light_screen</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, wm_disp.o(i.Key_Light_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Key_Light_screen &rArr; BL_PanelTurnOnDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOnDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[1b0]"></a>Key_scan</STRONG> (Thumb, 394 bytes, Stack size 16 bytes, app_key.o(i.Key_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_program
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_smoke
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ALL_Task
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TFT_RESET
</UL>

<P><STRONG><a name="[361]"></a>Key_smoke</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, public.o(i.Key_smoke))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_scan
</UL>

<P><STRONG><a name="[277]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[2fe]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[260]"></a>LCD_DrawBitmap</STRONG> (Thumb, 624 bytes, Stack size 80 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[f0]"></a>LCD_DrawHLine</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>LCD_DrawPixel</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[29e]"></a>LCD_DrawVLine</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[262]"></a>LCD_FillRect</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_EXT__ClearLine
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[363]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[2ab]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[2a4]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[2f8]"></a>LCD_GetNextPixelAPI</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i.LCD_GetNextPixelAPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNextPixelAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[364]"></a>LCD_GetNumColors</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[365]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[366]"></a>LCD_GetNumLayers</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[367]"></a>LCD_GetPalette</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[2fd]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[368]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[2d4]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[272]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetVXSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[2d5]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2b8]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2d2]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2bb]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetXSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2b9]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2d3]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2ba]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetYSizeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[369]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[18]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[278]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>

<P><STRONG><a name="[276]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[b5]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_565.o(i.LCD_Index2Color_565))
<BR>[Address Reference Count : 2]<UL><LI> gui_drawbitmap_a16.o(i._DrawBitmapA565)
<LI> gui_drawbitmap_a16.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR>[Address Reference Count : 3]<UL><LI> gui_drawbitmap_565.o(i._DrawBitmapSwapRB)
<LI> gui_drawbitmap_565.o(.constdata)
<LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[36a]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[36b]"></a>LCD_InitLUT</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[2e9]"></a>LCD_ReadColor_16bit</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, tft_init.o(i.LCD_ReadColor_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_ReadColor_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Read_BUFF_Dot
</UL>

<P><STRONG><a name="[2e8]"></a>LCD_Read_Window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tft_drive.o(i.LCD_Read_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_Read_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Read_BUFF_Dot
</UL>

<P><STRONG><a name="[2ed]"></a>LCD_SelectLCD</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[2b5]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>

<P><STRONG><a name="[371]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[36e]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[2c7]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[2b6]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[2a6]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[2bc]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[261]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_AA2_EXT_DispChar
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[36c]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[b8]"></a>LCD_SetPixelAA4_Trans</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA4_Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA__DrawCharAA2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i._FlushLine)
</UL>
<P><STRONG><a name="[485]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gui_setpixelindex.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlock
</UL>

<P><STRONG><a name="[36f]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[370]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2cd]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[197]"></a>LCD_WriteComm</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tft_init.o(i.LCD_WriteComm))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOnDisplay
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_OffDisplay_excessive
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read_Window
</UL>

<P><STRONG><a name="[47e]"></a>LCD_WriteData_16bit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, tft_init.o(i.LCD_WriteData_16bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[36d]"></a>LCD_WriteData_8bit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tft_init.o(i.LCD_WriteData_8bit))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read_Window
</UL>

<P><STRONG><a name="[372]"></a>LCD_Write_Window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tft_drive.o(i.LCD_Write_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_Write_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>

<P><STRONG><a name="[2b2]"></a>LCD_X_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[488]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLUTEntry
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[2e6]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 496 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[489]"></a>LCD__GetBPP</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[2de]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[355]"></a>LED_drive</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, key_led.o(i.LED_drive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_drive
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGO_LED_Wdata
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGO_LED_PWM_OFF
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LED_Wdata
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LED_PWM_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interface_display
</UL>

<P><STRONG><a name="[408]"></a>LL_ADC_CommonDeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ll_adc.o(i.LL_ADC_CommonDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[394]"></a>LL_ADC_CommonInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_ll_adc.o(i.LL_ADC_CommonInit))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[390]"></a>LL_ADC_DeInit</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, stm32f4xx_ll_adc.o(i.LL_ADC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[391]"></a>LL_ADC_Init</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32f4xx_ll_adc.o(i.LL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[393]"></a>LL_ADC_REG_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f4xx_ll_adc.o(i.LL_ADC_REG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_ADC_REG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[207]"></a>LL_CRC_DeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_ll_crc.o(i.LL_CRC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[377]"></a>LL_DMA_DeInit</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32f4xx_ll_dma.o(i.LL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetChannelSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
</UL>

<P><STRONG><a name="[379]"></a>LL_DMA_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32f4xx_ll_dma.o(i.LL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetChannelSelection
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
</UL>

<P><STRONG><a name="[405]"></a>LL_EXTI_DeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_ll_exti.o(i.LL_EXTI_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[39f]"></a>LL_EXTI_Init</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32f4xx_ll_exti.o(i.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[21e]"></a>LL_GPIO_Init</STRONG> (Thumb, 310 bytes, Stack size 20 bytes, stm32f4xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GPIO_Set
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_VoutADC_Use
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_VoutADC_Use
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ENABLE_transmission
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DISABLE_transmission
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiaozhun_panduan
</UL>

<P><STRONG><a name="[415]"></a>LL_Init1msTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_ll_utils.o(i.LL_Init1msTick))
<BR><BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[37a]"></a>LL_RTC_DATE_Init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_DATE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_RTC_DATE_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RTC_DateTime
</UL>

<P><STRONG><a name="[37b]"></a>LL_RTC_EnterInitMode</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>

<P><STRONG><a name="[37e]"></a>LL_RTC_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LL_RTC_Init &rArr; LL_RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[37f]"></a>LL_RTC_TIME_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_TIME_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_EnterInitMode
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RTC_DateTime
</UL>

<P><STRONG><a name="[37d]"></a>LL_RTC_WaitForSynchro</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[3a6]"></a>LL_SPI_DeInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f4xx_ll_spi.o(i.LL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_SPI_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
</UL>

<P><STRONG><a name="[3a7]"></a>LL_SPI_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32f4xx_ll_spi.o(i.LL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
</UL>

<P><STRONG><a name="[416]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[39b]"></a>LL_TIM_BDTR_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32f4xx_ll_tim.o(i.LL_TIM_BDTR_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[381]"></a>LL_TIM_DeInit</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32f4xx_ll_tim.o(i.LL_TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB2_GRP1_ReleaseReset
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB2_GRP1_ForceReset
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_ReleaseReset
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_ForceReset
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[397]"></a>LL_TIM_Init</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f4xx_ll_tim.o(i.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[399]"></a>LL_TIM_OC_Init</STRONG> (Thumb, 390 bytes, Stack size 20 bytes, stm32f4xx_ll_tim.o(i.LL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_TIM_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[ab]"></a>LOCK_Resis_interface</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, lock_resis_interface.o(i.LOCK_Resis_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = LOCK_Resis_interface &rArr; LOCK_Resis_touch &rArr; DISP_Button_LOCK &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Resis_Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diy_menu_interface.o(i.VT_SET_menu_operation)
</UL>
<P><STRONG><a name="[413]"></a>LOGO_LED_Control</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, key_led.o(i.LOGO_LED_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LOGO_LED_Control
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[376]"></a>LOGO_LED_PWM_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pwm_int.o(i.LOGO_LED_PWM_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_drive
</UL>

<P><STRONG><a name="[375]"></a>LOGO_LED_Wdata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_pwm_int.o(i.LOGO_LED_Wdata))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_drive
</UL>

<P><STRONG><a name="[72]"></a>Low_ATOMIZER_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.Low_ATOMIZER_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Low_ATOMIZER_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[74]"></a>Low_Battery_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.Low_Battery_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Low_Battery_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[99]"></a>MODE_TO_SET_windows</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, alarm_interface.o(i.MODE_TO_SET_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MODE_TO_SET_windows &rArr; draw_Bmp_ex &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
</UL>
<BR>[Address Reference Count : 3]<UL><LI> public.o(i.Key_smoke)
<LI> public.o(i.Main_menu_GOTO)
<LI> alarm_interface.o(i.Warning_interface)
</UL>
<P><STRONG><a name="[456]"></a>MOTOR_PWM_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pwm_int.o(i.MOTOR_PWM_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_drive
</UL>

<P><STRONG><a name="[455]"></a>MOTOR_PWM_Wdata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_pwm_int.o(i.MOTOR_PWM_Wdata))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_ON
</UL>

<P><STRONG><a name="[38f]"></a>MX_ADC1_Init</STRONG> (Thumb, 254 bytes, Stack size 88 bytes, adc.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MX_ADC1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_Init
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_DeInit
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_CommonInit
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSamplingTime
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
</UL>

<P><STRONG><a name="[395]"></a>MX_BL_PWM_Init</STRONG> (Thumb, 224 bytes, Stack size 120 bytes, tim.o(i.MX_BL_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_BL_PWM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_BDTR_Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39c]"></a>MX_CHG_PWM_Init</STRONG> (Thumb, 174 bytes, Stack size 96 bytes, tim.o(i.MX_CHG_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MX_CHG_PWM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[402]"></a>MX_CRC_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MX_CRC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39d]"></a>MX_GPIO_Init</STRONG> (Thumb, 380 bytes, Stack size 72 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MX_GPIO_Init &rArr; USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GPIO_Set
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
</UL>

<P><STRONG><a name="[3a0]"></a>MX_LED_PWM_Init</STRONG> (Thumb, 186 bytes, Stack size 112 bytes, tim.o(i.MX_LED_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = MX_LED_PWM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_BDTR_Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a2]"></a>MX_MOTOR_PWM_Init</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, tim.o(i.MX_MOTOR_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_MOTOR_PWM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_BDTR_Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a3]"></a>MX_OUT_PWM_Init</STRONG> (Thumb, 214 bytes, Stack size 120 bytes, tim.o(i.MX_OUT_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_OUT_PWM_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_BDTR_Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a4]"></a>MX_RTC_Init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, rtc.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_RTC_Init &rArr; LL_RTC_Init &rArr; LL_RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a5]"></a>MX_SPI3_Init</STRONG> (Thumb, 270 bytes, Stack size 152 bytes, spi.o(i.MX_SPI3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MX_SPI3_Init &rArr; LL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_DeInit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_Init
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_DeInit
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a9]"></a>MX_USB_DEVICE_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb_device.o(i.MX_USB_DEVICE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MX_USB_DEVICE_Init &rArr; USBD_Init &rArr; USBD_LL_Init &rArr; HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Start
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RegisterClass
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_RegisterInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ENABLE_transmission
</UL>

<P><STRONG><a name="[6c]"></a>Main_interface</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, main interface.o(i.Main_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Main_interface &rArr; Main_operation &rArr; Disp_Data_Arc &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_GOTO
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Locked
</UL>
<BR>[Address Reference Count : 34]<UL><LI> alarm_interface.o(i.USB_Warning_interface)
<LI> public.o(i.Fanhui_Main_interface)
<LI> public.o(i.Key_smoke)
<LI> main_menu_interface.o(i.Menu_coordinate_Init)
<LI> tcr_adjust_interface.o(i.TCR_Data_Set_windows)
<LI> tcr_adjust_interface.o(i.TCR_Data_touch)
<LI> custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
<LI> lock_resis_interface.o(i.LOCK_Resis_touch)
<LI> system_settings_interface.o(i.BrightScreen_time_touch)
<LI> system_settings_interface.o(i.Brightness_Set_interface)
<LI> diy_menu_interface.o(i.CC_SET_menu_operation)
<LI> diy_menu_interface.o(i.Main_menu_operation)
<LI> diy_menu_interface.o(i.VT_SET_menu_operation)
<LI> main interface.o(i.Main_operation)
<LI> one_power_interface.o(i.BOOT_LOGO_interface)
<LI> alarm_interface.o(i.Warning_interface)
<LI> main_menu_interface.o(i.Main_menu_operation)
<LI> system_settings_interface.o(i.AUTO_MODE_Set_touch)
<LI> custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
<LI> system_settings_interface.o(i.Default_Set_touch)
<LI> system_settings_interface.o(i.Default_Set_windows)
<LI> system_settings_interface.o(i.KEY_LIGHT_Set_interface)
<LI> system_settings_interface.o(i.PUFF_Set_touch)
<LI> system_settings_interface.o(i.SMART_Set_touch)
<LI> system_settings_interface.o(i.System_Set_Operation)
<LI> system_settings_interface.o(i.VIBRATE_Set_touch)
<LI> system_settings_interface.o(.constdata)
<LI> alarm_interface.o(i.Batt_error_interface)
<LI> rtc_set_interface.o(i.RTC_Set_touch)
<LI> diy_menu_interface.o(i.VW_SET_coordinate_Init)
<LI> diy_menu_interface.o(i.VW_SET_menu_operation)
<LI> firmware_tim_interface.o(i.Firmware_Tim_interface)
</UL>
<P><STRONG><a name="[3b0]"></a>Main_menu_GOTO</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, public.o(i.Main_menu_GOTO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Main_menu_GOTO
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
</UL>

<P><STRONG><a name="[9c]"></a>Main_menu_interface</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main_menu_interface.o(i.Main_menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Main_menu_interface &rArr; Main_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 4]<UL><LI> public.o(i.Main_menu_GOTO)
<LI> diy_menu_interface.o(i.Main_menu_operation)
<LI> diy_menu_interface.o(i.Menu_coordinate_Init)
<LI> system_settings_interface.o(i.Menu_coordinate_Init)
</UL>
<P><STRONG><a name="[3ae]"></a>Main_windows</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, main interface.o(i.Main_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Main_windows &rArr; Disp_Main &rArr; Change_Arc_angle_State &rArr; Clear_Vape_Arc &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_parts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
</UL>

<P><STRONG><a name="[1f3]"></a>MapNoRulebmpToBitmap_ex</STRONG> (Thumb, 606 bytes, Stack size 160 bytes, gui_image_flash.o(i.MapNoRulebmpToBitmap_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPixelIndex
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Arc_angle
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Vape_Arc
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Arc_angle_State
</UL>

<P><STRONG><a name="[245]"></a>Map_draw_bmpToBitmap_ex</STRONG> (Thumb, 310 bytes, Stack size 80 bytes, gui_image_flash.o(i.Map_draw_bmpToBitmap_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_parts
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResData_update
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_LOGO_update
</UL>

<P><STRONG><a name="[25]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[163]"></a>Menu_Bottom_Windows</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, main_menu_interface.o(i.Menu_Bottom_Windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Menu_Bottom_Windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[1e5]"></a>Menu_Page_Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, main_menu_interface.o(i.Menu_Page_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetYSizeEx
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetXSizeEx
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
</UL>

<P><STRONG><a name="[23]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3bc]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.NVIC_SetVectorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_SetVectorTable &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = OTG_FS_IRQHandler &rArr; HAL_PCD_IRQHandler &rArr; HAL_PCD_SetupStageCallback &rArr; USBD_LL_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3bd]"></a>OUTControl</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, app_outputcontrol.o(i.OUTControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OUTControl &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OFF
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl_Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_ONorOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[362]"></a>OUTControl_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_outputcontrol.o(i.OUTControl_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_smoke
</UL>

<P><STRONG><a name="[248]"></a>OUT_PWM_Wdata</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_pwm_int.o(i.OUT_PWM_Wdata))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OFF
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
</UL>

<P><STRONG><a name="[3be]"></a>OUT_YES_Control</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, app_outputcontrol.o(i.OUT_YES_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUT_YES_Control &rArr; Out_Read_load &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Statistics_numberANDlengthTim
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_Read_load
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Average_Vout
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl
</UL>

<P><STRONG><a name="[13]"></a>One_Power_interface</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, one_power_interface.o(i.One_Power_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = One_Power_interface &rArr; TFT_ST7789S_Init &rArr; TFT_REset_program &rArr; KEY_TFT_RESET &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_VCC_Set
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_LCD_RESET
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wm_disp.o(.data)
<LI> main.o(i.main)
</UL>
<P><STRONG><a name="[71]"></a>Open_circuit_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.Open_circuit_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Open_circuit_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 4]<UL><LI> lock_resis_interface.o(i.LOCK_Resis_touch)
<LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[3c0]"></a>Out_Read_load</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_outputcontrol.o(i.Out_Read_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Out_Read_load &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Over_PCB_Temp
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Average_Real
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
</UL>

<P><STRONG><a name="[3bf]"></a>Out_int</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, app_outputcontrol.o(i.Out_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_mode_int
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_mode_int
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_mode_int
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_mode_int
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_mode_int
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_mode_int
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_mode_int
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_mode_int
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_mode_int
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl_Init
</UL>

<P><STRONG><a name="[38b]"></a>Over_PCB_Temp</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_outputcontrol.o(i.Over_PCB_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Over_PCB_Temp &rArr; ReadTemp_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_Read_load
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>

<P><STRONG><a name="[76]"></a>PCB_Overheated_windows</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, alarm_interface.o(i.PCB_Overheated_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = PCB_Overheated_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[1ff]"></a>PID_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_outputcontrol.o(i.PID_init))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_mode_int
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_mode_int
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_mode_int
</UL>

<P><STRONG><a name="[1fa]"></a>PID_realize</STRONG> (Thumb, 390 bytes, Stack size 20 bytes, app_outputcontrol.o(i.PID_realize))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PID_realize
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
</UL>

<P><STRONG><a name="[24d]"></a>PWM_OFF</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_pwm_int.o(i.PWM_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_PWM_Wdata
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
</UL>

<P><STRONG><a name="[38d]"></a>PWM_ON</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_pwm_int.o(i.PWM_ON))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
</UL>

<P><STRONG><a name="[162]"></a>PanelTurnOffDisplay</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, tft_init.o(i.PanelTurnOffDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PanelTurnOffDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[16a]"></a>PanelTurnOnDisplay</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, tft_init.o(i.PanelTurnOnDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PanelTurnOnDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_coordinate_Init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[2a]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1df]"></a>Power_down_control</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, app_outputcontrol.o(i.Power_down_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Power_down_control &rArr; Fault_handling &rArr; PWM_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_Output_control
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_Output_control
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Output_control
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Output_control
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Output_control
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[210]"></a>Print_Button_Disp</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, custom_curve_adjustment_interface.o(i.Print_Button_Disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SMART_Button
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_PUFF
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_LOCK
</UL>

<P><STRONG><a name="[3ce]"></a>Program_Upgrade_Status</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, program_upgrade_status.o(i.Program_Upgrade_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Program_Upgrade_Status &rArr; SPI_Flash_Write_BuffData8 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d9]"></a>RTC_GetDate</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, app_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[3d8]"></a>RTC_GetTime</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, app_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[c6]"></a>RTC_Set_interface</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = RTC_Set_interface &rArr; RTC_Set_windows &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RTC_DateTime
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCgotoSET
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_touch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3d5]"></a>RTC_TimeRegulate</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, app_rtc.o(i.RTC_TimeRegulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RTC_TimeRegulate &rArr; Set_RTC_DateTime &rArr; LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RTC_DateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[3d6]"></a>RTC_int</STRONG> (Thumb, 468 bytes, Stack size 56 bytes, app_rtc.o(i.RTC_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = RTC_int &rArr; Read_RTC_BIN &rArr; RTC_TimeRegulate &rArr; Set_RTC_DateTime &rArr; LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_BAK_SetRegister
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_BAK_GetRegister
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetRTCClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d4]"></a>RTCgotoSET</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_rtc.o(i.RTCgotoSET))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
</UL>

<P><STRONG><a name="[189]"></a>ReadBATz_Data</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, adc_module.o(i.ReadBATz_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadBATz_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[1de]"></a>ReadLoad_Data</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, adc_module.o(i.ReadLoad_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[195]"></a>ReadTemp_Data</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, adc_module.o(i.ReadTemp_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadTemp_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Over_PCB_Temp
</UL>

<P><STRONG><a name="[193]"></a>Read_ChargIV_Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, adc_module.o(i.Read_ChargIV_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_ChargIV_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
</UL>

<P><STRONG><a name="[3dd]"></a>Read_Custom_flash</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, app_custom.o(i.Read_Custom_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read_Custom_flash &rArr; W25QXX_Erase_Sector &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData32
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
</UL>

<P><STRONG><a name="[1c1]"></a>Read_LUX_Data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, adc_module.o(i.Read_LUX_Data))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Testing
</UL>

<P><STRONG><a name="[38a]"></a>Read_L_1C</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_atomizer.o(i.Read_L_1C))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_PWM_Wdata
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ON
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OFF
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_outI_Data_1C
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_Read_load
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_OUT_int
</UL>

<P><STRONG><a name="[3dc]"></a>Read_RTC_BIN</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, app_rtc.o(i.Read_RTC_BIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Read_RTC_BIN &rArr; RTC_TimeRegulate &rArr; Set_RTC_DateTime &rArr; LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_WaitForSynchro
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_Init
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_WeekDay
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_BAK_SetRegister
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetRTCClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>Read_USBV_Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, adc_module.o(i.Read_USBV_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_USBV_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
</UL>

<P><STRONG><a name="[18a]"></a>Read_VCC_Data</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc_module.o(i.Read_VCC_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_VCC_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
</UL>

<P><STRONG><a name="[35f]"></a>Read_load</STRONG> (Thumb, 680 bytes, Stack size 32 bytes, app_atomizer.o(i.Read_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read_load &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_VoutADC_Use
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disable_VoutADC_Use
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_outV_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TFT_RESET
</UL>

<P><STRONG><a name="[3df]"></a>Read_outI_Data_1C</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, adc_module.o(i.Read_outI_Data_1C))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Read_outI_Data_1C &rArr; ADC_TDx_Data_1C &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data_1C
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
</UL>

<P><STRONG><a name="[3e1]"></a>Read_outV_Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, adc_module.o(i.Read_outV_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_outV_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
</UL>

<P><STRONG><a name="[172]"></a>ResData_update</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, main interface.o(i.ResData_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ResData_update &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_Res_update
</UL>

<P><STRONG><a name="[3e2]"></a>Rflash</STRONG> (Thumb, 914 bytes, Stack size 40 bytes, app_flash.o(i.Rflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Rflash &rArr; Read_Custom_flash &rArr; W25QXX_Erase_Sector &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData8
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Custom_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e5]"></a>SMART_Set_touch</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, system_settings_interface.o(i.SMART_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = SMART_Set_touch &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SMART_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
</UL>

<P><STRONG><a name="[3ed]"></a>SPI3_DMA_Read_Data8_BUFF</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, spi.o(i.SPI3_DMA_Read_Data8_BUFF))
<BR><BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData32
</UL>

<P><STRONG><a name="[3ee]"></a>SPI3_DMA_Read_OK_Wait</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, spi.o(i.SPI3_DMA_Read_OK_Wait))
<BR><BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData32
</UL>

<P><STRONG><a name="[3f1]"></a>SPI3_DMA_Write_Data8_BUFF</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, spi.o(i.SPI3_DMA_Write_Data8_BUFF))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
</UL>

<P><STRONG><a name="[3f2]"></a>SPI3_DMA_Write_OK_Wait</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, spi.o(i.SPI3_DMA_Write_OK_Wait))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
</UL>

<P><STRONG><a name="[3e6]"></a>SPI3_Read_Data24</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, spi.o(i.SPI3_Read_Data24))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI3_Read_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
</UL>

<P><STRONG><a name="[3e7]"></a>SPI3_Read_Data8</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, spi.o(i.SPI3_Read_Data8))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_SmallData32
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_SmallData16
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data24
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData8
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadReg
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
</UL>

<P><STRONG><a name="[3e8]"></a>SPI3_Read_SmallData16</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, spi.o(i.SPI3_Read_SmallData16))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI3_Read_SmallData16
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
</UL>

<P><STRONG><a name="[3e9]"></a>SPI3_Read_SmallData32</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, spi.o(i.SPI3_Read_SmallData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI3_Read_SmallData32
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
</UL>

<P><STRONG><a name="[3ea]"></a>SPI3_Write_Data24</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, spi.o(i.SPI3_Write_Data24))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData8
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData32
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
</UL>

<P><STRONG><a name="[3a8]"></a>SPI3_Write_Data8</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, spi.o(i.SPI3_Write_Data8))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_SmallData32
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData8
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData32
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadReg
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WAKEUP
</UL>

<P><STRONG><a name="[3eb]"></a>SPI3_Write_SmallData32</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, spi.o(i.SPI3_Write_SmallData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI3_Write_SmallData32
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
</UL>

<P><STRONG><a name="[25a]"></a>SPI_Flash_ReadID</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flahs_driver.o(i.SPI_Flash_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_Flash_ReadID &rArr; SPI3_Read_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data24
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
</UL>

<P><STRONG><a name="[3ec]"></a>SPI_Flash_ReadReg</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>

<P><STRONG><a name="[3de]"></a>SPI_Flash_Read_BuffData32</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, flahs_driver.o(i.SPI_Flash_Read_BuffData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_Flash_Read_BuffData32 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Read_OK_Wait
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Read_Data8_BUFF
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Custom_flash
</UL>

<P><STRONG><a name="[353]"></a>SPI_Flash_Read_BuffData8</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, flahs_driver.o(i.SPI_Flash_Read_BuffData8))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Read_OK_Wait
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Read_Data8_BUFF
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageGetPNGData
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageGetDoubleData
</UL>

<P><STRONG><a name="[246]"></a>SPI_Flash_Read_BuffData_OK</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_Read_BuffData_OK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Read_OK_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Custom_flash
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetYSizeEx
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetXSizeEx
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetInfoEx
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetImageInfoEx
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_DrawSubEx
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GetStreamedBitmapInfoEx
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageGetPNGData
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageGetDoubleData
</UL>

<P><STRONG><a name="[1b2]"></a>SPI_Flash_Read_PageData16</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, flahs_driver.o(i.SPI_Flash_Read_PageData16))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_Read_PageData16 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_SmallData16
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
</UL>

<P><STRONG><a name="[3b9]"></a>SPI_Flash_Read_PageData32</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, flahs_driver.o(i.SPI_Flash_Read_PageData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_Flash_Read_PageData32 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_SmallData32
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Custom_flash
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jiaozhun_panduan
</UL>

<P><STRONG><a name="[3e3]"></a>SPI_Flash_Read_PageData8</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, flahs_driver.o(i.SPI_Flash_Read_PageData8))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_Flash_Read_PageData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
</UL>

<P><STRONG><a name="[259]"></a>SPI_Flash_WAKEUP</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_WAKEUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_WAKEUP
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Read_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
</UL>

<P><STRONG><a name="[3ef]"></a>SPI_Flash_WaitForWriteEnd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
</UL>

<P><STRONG><a name="[1ae]"></a>SPI_Flash_WritePageData32</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, flahs_driver.o(i.SPI_Flash_WritePageData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_WritePageData32 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_SmallData32
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[217]"></a>SPI_Flash_WritePageData8</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, flahs_driver.o(i.SPI_Flash_WritePageData8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_WritePageData8 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
</UL>

<P><STRONG><a name="[209]"></a>SPI_Flash_Write_BuffData32</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, flahs_driver.o(i.SPI_Flash_Write_BuffData32))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Flash_Write_BuffData32 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Write_OK_Wait
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Write_Data8_BUFF
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[218]"></a>SPI_Flash_Write_BuffData8</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, flahs_driver.o(i.SPI_Flash_Write_BuffData8))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Flash_Write_BuffData8 &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Write_OK_Wait
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Write_Data8_BUFF
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
</UL>

<P><STRONG><a name="[20a]"></a>SPI_Flash_Write_BuffData_OK</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_Write_BuffData_OK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_Write_BuffData_OK &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_DMA_Write_OK_Wait
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[25b]"></a>SPI_Flash_Write_Disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_Write_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_Write_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData_OK
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
</UL>

<P><STRONG><a name="[3f0]"></a>SPI_Flash_Write_Enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, flahs_driver.o(i.SPI_Flash_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_Write_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData8
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData8
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_BuffData32
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WritePageData32
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData16
</UL>

<P><STRONG><a name="[3b8]"></a>SPP_MODE_windows</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, main interface.o(i.SPP_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = SPP_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[a1]"></a>SPP_Output_control</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, spp_mode_control.o(i.SPP_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPP_Output_control &rArr; Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spp_mode_control.o(i.SPP_mode_int)
</UL>
<P><STRONG><a name="[3c7]"></a>SPP_mode_int</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, spp_mode_control.o(i.SPP_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPP_mode_int &rArr; SPP_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[28]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[15c]"></a>Screen_GOTO_charging</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, public.o(i.Screen_GOTO_charging))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen_GOTO_charging
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[6e]"></a>Screensaver_interface</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, screensaver_interface.o(i.Screensaver_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Screensaver_interface &rArr; Fanhui_Main_interface &rArr; Atomizer_inquiry_GOTO &rArr; Auto_match_Watt_program
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 5]<UL><LI> public.o(i.Key_smoke)
<LI> public.o(i.Screen_GOTO_charging)
<LI> system_settings_interface.o(i.BrightScreen_time_Set_interface)
<LI> atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
<LI> screensaver_interface.o(i.Screensaver_2_Return)
</UL>
<P><STRONG><a name="[35d]"></a>Selected_Cursor</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, main_menu_interface.o(i.Selected_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetYSizeEx
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_BMP_GetXSizeEx
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>

<P><STRONG><a name="[3d3]"></a>Set_RTC_DateTime</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, app_rtc.o(i.Set_RTC_DateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Set_RTC_DateTime &rArr; LL_RTC_TIME_Init &rArr; LL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_WeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
</UL>

<P><STRONG><a name="[41e]"></a>Set_Ret_Bring_VIP</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, brightness_auto.o(i.Set_Ret_Bring_VIP))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SET_BL_Brightness
</UL>

<P><STRONG><a name="[3fe]"></a>Set_SPPWattData_update</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, main interface.o(i.Set_SPPWattData_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_SPPWattData_update &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWatt_update
</UL>

<P><STRONG><a name="[238]"></a>Set_SPPWatt_update</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main interface.o(i.Set_SPPWatt_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Set_SPPWatt_update &rArr; Set_SPPWattData_update &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWattData_update
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[237]"></a>Set_Tempe_update</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main interface.o(i.Set_Tempe_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_Tempe_update &rArr; Disp_Set_Tempe &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Set_Tempe
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[232]"></a>Set_Volt_update</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main interface.o(i.Set_Volt_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Set_Volt_update &rArr; Disp_Custom_Vout &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Custom_Vout
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[3ff]"></a>Set_WattData_update</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, main interface.o(i.Set_WattData_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Set_WattData_update &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Watt_update
</UL>

<P><STRONG><a name="[230]"></a>Set_Watt_update</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main interface.o(i.Set_Watt_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Set_Watt_update &rArr; Set_WattData_update &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_WattData_update
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[15]"></a>Short_circuit_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.Short_circuit_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Short_circuit_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> alarm_interface.o(.data)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[400]"></a>Sleeping_Module</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, app_sleeping.o(i.Sleeping_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Sleeping_Module &rArr; USB_ENABLE_transmission &rArr; MX_USB_DEVICE_Init &rArr; USBD_Init &rArr; USBD_LL_Init &rArr; HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Init
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_ON
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_VoutADC_Use
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ENABLE_transmission
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_LCD_RESET
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[401]"></a>Sleeping_Peripheral</STRONG> (Thumb, 528 bytes, Stack size 64 bytes, app_sleeping.o(i.Sleeping_Peripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Sleeping_Peripheral &rArr; USB_DISABLE_transmission &rArr; USBD_DeInit &rArr; USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_DeInit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DeInit
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_DeInit
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_CommonDeInit
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DeInit
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_DeInit
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterSTOPMode
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_OFF
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DISABLE_transmission
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SYSCFG_SetEXTISource
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB2_GRP1_DisableClock
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_DisableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
</UL>

<P><STRONG><a name="[35b]"></a>Smoking_KEY_anxia_JC</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, public.o(i.Smoking_KEY_anxia_JC))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Filter_processing
</UL>

<P><STRONG><a name="[75]"></a>Smoking_timeout_windows</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, alarm_interface.o(i.Smoking_timeout_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Smoking_timeout_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[3c2]"></a>Statistics_numberANDlengthTim</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, statistics port number.o(i.Statistics_numberANDlengthTim))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
</UL>

<P><STRONG><a name="[2b]"></a>SysTick_Handler</STRONG> (Thumb, 542 bytes, Stack size 24 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SysTick_Handler &rArr; BAT_Management_Charge &rArr; USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_YES_Control
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGO_LED_Control
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Filter_processing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_Reset
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_drive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[40f]"></a>SystemClock_Config</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemClock_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>System_Set_Menu_interface</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, system_settings_interface.o(i.System_Set_Menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = System_Set_Menu_interface &rArr; System_Set_Operation &rArr; Disp_MENU_Name &rArr; Disp_Button &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Operation
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_coordinate_Init
</UL>
<BR>[Address Reference Count : 16]<UL><LI> system_settings_interface.o(i.BrightScreen_time_Set_interface)
<LI> system_settings_interface.o(i.Brightness_Set_interface)
<LI> main_menu_interface.o(i.Main_menu_operation)
<LI> system_settings_interface.o(i.AUTO_MODE_Set_touch)
<LI> system_settings_interface.o(i.AUTO_MODE_Set_windows)
<LI> system_settings_interface.o(i.Default_Set_touch)
<LI> system_settings_interface.o(i.Default_Set_windows)
<LI> system_settings_interface.o(i.KEY_LIGHT_Set_interface)
<LI> system_settings_interface.o(i.PUFF_Set_touch)
<LI> system_settings_interface.o(i.PUFF_Set_windows)
<LI> system_settings_interface.o(i.SMART_Set_touch)
<LI> system_settings_interface.o(i.SMART_Set_windows)
<LI> system_settings_interface.o(i.VIBRATE_Set_interface)
<LI> rtc_set_interface.o(i.RTC_Set_interface)
<LI> rtc_set_interface.o(i.RTC_Set_windows)
<LI> firmware_tim_interface.o(i.Firmware_Tim_interface)
</UL>
<P><STRONG><a name="[19e]"></a>System_off_GOTO</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, public.o(i.System_off_GOTO))
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
</UL>

<P><STRONG><a name="[77]"></a>System_off_interface</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, system_off_interface.o(i.System_off_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = System_off_interface &rArr; System_off_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOffDisplay
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_ON
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> public.o(i.System_off_GOTO)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[9e]"></a>TCR_Data_Set_interface</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, tcr_adjust_interface.o(i.TCR_Data_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TCR_Data_Set_interface &rArr; TCR_Data_touch &rArr; update_Cursor &rArr; Disp_Atomizer &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.VT_SET_menu_operation)
<LI> main interface.o(i.Main_operation)
</UL>
<P><STRONG><a name="[3b7]"></a>TCR_MODE_windows</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main interface.o(i.TCR_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = TCR_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[3c5]"></a>TCR_mode_int</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, tempe_mode_control.o(i.TCR_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TCR_mode_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[19b]"></a>TFT_BL_Brightness</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tft_init.o(i.TFT_BL_Brightness))
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PWM_Wdata
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Interface_display
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PanelTurnOnDisplay
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SET_BL_Brightness
</UL>

<P><STRONG><a name="[1a9]"></a>TFT_LCD_RESET</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tft_init.o(i.TFT_LCD_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TFT_LCD_RESET &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_Power_interface
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[41d]"></a>TFT_REset_program</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, tft_init.o(i.TFT_REset_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TFT_REset_program &rArr; KEY_TFT_RESET &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_TFT_RESET
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_ST7789S_Init
</UL>

<P><STRONG><a name="[1c4]"></a>TFT_SET_BL_Brightness</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tft_init.o(i.TFT_SET_BL_Brightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TFT_SET_BL_Brightness
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_BL_Brightness
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Ret_Bring_VIP
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Testing
</UL>

<P><STRONG><a name="[1aa]"></a>TFT_ST7789S_Init</STRONG> (Thumb, 456 bytes, Stack size 8 bytes, tft_init.o(i.TFT_ST7789S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TFT_ST7789S_Init &rArr; TFT_REset_program &rArr; KEY_TFT_RESET &rArr; Key_scan &rArr; Key_smoke &rArr; OUTControl_Init &rArr; Out_int &rArr; MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_REset_program
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_Power_interface
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[1a6]"></a>TFT_VCC_Reset</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(i.TFT_VCC_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[1a8]"></a>TFT_VCC_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gpio.o(i.TFT_VCC_Set))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_Power_interface
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
</UL>

<P><STRONG><a name="[3b6]"></a>Temp_MODE_windows</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main interface.o(i.Temp_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Temp_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[a9]"></a>Temp_Output_control</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, tempe_mode_control.o(i.Temp_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Temp_Output_control &rArr; Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_Average_Temp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempe_Compensation_calculation
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tempe_mode_control.o(i.TCR_mode_int)
<LI> tempe_mode_control.o(i.Temp_mode_int)
</UL>
<P><STRONG><a name="[3c4]"></a>Temp_mode_int</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, tempe_mode_control.o(i.Temp_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Temp_mode_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[1f9]"></a>Tempe_Compensation_calculation</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, tempe_mode_control.o(i.Tempe_Compensation_calculation))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Tempe_Compensation_calculation
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
</UL>

<P><STRONG><a name="[3ac]"></a>USBD_CUSTOM_HID_RegisterInterface</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_RegisterInterface))
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DEVICE_Init
</UL>

<P><STRONG><a name="[425]"></a>USBD_CUSTOM_HID_SendReport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_SendReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CUSTOM_HID_SendReport &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
</UL>

<P><STRONG><a name="[440]"></a>USBD_ClrClassConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_ClrClassConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_ClrClassConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[42a]"></a>USBD_CtlContinueRx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlContinueRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlContinueRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataOutStage
</UL>

<P><STRONG><a name="[42b]"></a>USBD_CtlContinueSendData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlContinueSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlContinueSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataInStage
</UL>

<P><STRONG><a name="[428]"></a>USBD_CtlError</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_ctlreq.o(i.USBD_CtlError))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_CtlError &rArr; USBD_LL_StallEP &rArr; HAL_PCD_EP_SetStall &rArr; USB_EP0_OutStart
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Setup
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
</UL>

<P><STRONG><a name="[427]"></a>USBD_CtlPrepareRx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlPrepareRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlPrepareRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Setup
</UL>

<P><STRONG><a name="[42d]"></a>USBD_CtlReceiveStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlReceiveStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlReceiveStatus &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataInStage
</UL>

<P><STRONG><a name="[429]"></a>USBD_CtlSendData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Setup
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
</UL>

<P><STRONG><a name="[42e]"></a>USBD_CtlSendStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlSendStatus &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataOutStage
</UL>

<P><STRONG><a name="[42f]"></a>USBD_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USBD_DeInit &rArr; USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Stop
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DISABLE_transmission
</UL>

<P><STRONG><a name="[5]"></a>USBD_FS_ConfigStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_FS_ConfigStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_FS_ConfigStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>USBD_FS_DeviceDescriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_FS_DeviceDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>USBD_FS_InterfaceStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_FS_InterfaceStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_FS_InterfaceStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>USBD_FS_LangIDStrDescriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_FS_LangIDStrDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>USBD_FS_ManufacturerStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_FS_ManufacturerStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_FS_ManufacturerStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>USBD_FS_ProductStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_FS_ProductStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_FS_ProductStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>USBD_FS_SerialStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_FS_SerialStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_FS_SerialStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[432]"></a>USBD_GetString</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, usbd_ctlreq.o(i.USBD_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_GetString
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_SerialStrDescriptor
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ProductStrDescriptor
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ManufacturerStrDescriptor
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_InterfaceStrDescriptor
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_FS_ConfigStrDescriptor
</UL>

<P><STRONG><a name="[3aa]"></a>USBD_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = USBD_Init &rArr; USBD_LL_Init &rArr; HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DEVICE_Init
</UL>

<P><STRONG><a name="[435]"></a>USBD_LL_ClearStallEP</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_ClearStallEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_LL_ClearStallEP &rArr; HAL_PCD_EP_ClrStall
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_ClrStall
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[421]"></a>USBD_LL_CloseEP</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_CloseEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_LL_CloseEP &rArr; HAL_PCD_EP_Close &rArr; USB_DeactivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_DeInit
</UL>

<P><STRONG><a name="[30b]"></a>USBD_LL_DataInStage</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, usbd_core.o(i.USBD_LL_DataInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBD_LL_DataInStage &rArr; USBD_CtlReceiveStatus &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataInStageCallback
</UL>

<P><STRONG><a name="[30d]"></a>USBD_LL_DataOutStage</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_LL_DataOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_LL_DataOutStage &rArr; USBD_CtlContinueRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataOutStageCallback
</UL>

<P><STRONG><a name="[431]"></a>USBD_LL_DeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DeInit
</UL>

<P><STRONG><a name="[309]"></a>USBD_LL_DevConnected</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_DevConnected))
<BR><BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ConnectCallback
</UL>

<P><STRONG><a name="[312]"></a>USBD_LL_DevDisconnected</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_LL_DevDisconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_LL_DevDisconnected
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DisconnectCallback
</UL>

<P><STRONG><a name="[434]"></a>USBD_LL_Init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USBD_LL_Init &rArr; HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCDEx_SetTxFiFo
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCDEx_SetRxFiFo
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[442]"></a>USBD_LL_IsStallEP</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbd_conf.o(i.USBD_LL_IsStallEP))
<BR><BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[337]"></a>USBD_LL_IsoINIncomplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_IsoINIncomplete))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ISOINIncompleteCallback
</UL>

<P><STRONG><a name="[338]"></a>USBD_LL_IsoOUTIncomplete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_IsoOUTIncomplete))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ISOOUTIncompleteCallback
</UL>

<P><STRONG><a name="[423]"></a>USBD_LL_OpenEP</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbd_conf.o(i.USBD_LL_OpenEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_LL_OpenEP &rArr; HAL_PCD_EP_Open &rArr; USB_ActivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Init
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Reset
</UL>

<P><STRONG><a name="[41f]"></a>USBD_LL_PrepareReceive</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_PrepareReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_DataOut
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlPrepareRx
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_DataInStage
</UL>

<P><STRONG><a name="[346]"></a>USBD_LL_Reset</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_LL_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_LL_Reset &rArr; USBD_LL_OpenEP &rArr; HAL_PCD_EP_Open &rArr; USB_ActivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_OpenEP
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ResetCallback
</UL>

<P><STRONG><a name="[347]"></a>USBD_LL_Resume</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_Resume))
<BR><BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ResumeCallback
</UL>

<P><STRONG><a name="[348]"></a>USBD_LL_SOF</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_LL_SOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_LL_SOF
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SOFCallback
</UL>

<P><STRONG><a name="[345]"></a>USBD_LL_SetSpeed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_ResetCallback
</UL>

<P><STRONG><a name="[439]"></a>USBD_LL_SetUSBAddress</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_SetUSBAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_LL_SetUSBAddress &rArr; HAL_PCD_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[34b]"></a>USBD_LL_SetupStage</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_LL_SetupStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_LL_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ParseSetupRequest
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SetupStageCallback
</UL>

<P><STRONG><a name="[42c]"></a>USBD_LL_StallEP</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_StallEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBD_LL_StallEP &rArr; HAL_PCD_EP_SetStall &rArr; USB_EP0_OutStart
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_SetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>

<P><STRONG><a name="[43e]"></a>USBD_LL_Start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_LL_Start &rArr; HAL_PCD_Start &rArr; USB_DevConnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Start
</UL>

<P><STRONG><a name="[430]"></a>USBD_LL_Stop</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_LL_Stop &rArr; HAL_PCD_Stop &rArr; USB_DevDisconnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DeInit
</UL>

<P><STRONG><a name="[350]"></a>USBD_LL_Suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_LL_Suspend))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SuspendCallback
</UL>

<P><STRONG><a name="[426]"></a>USBD_LL_Transmit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_conf.o(i.USBD_LL_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_SendReport
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
</UL>

<P><STRONG><a name="[43a]"></a>USBD_ParseSetupRequest</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbd_ctlreq.o(i.USBD_ParseSetupRequest))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>

<P><STRONG><a name="[3ab]"></a>USBD_RegisterClass</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_RegisterClass))
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DEVICE_Init
</UL>

<P><STRONG><a name="[441]"></a>USBD_SetClassConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_SetClassConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_SetClassConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[3ad]"></a>USBD_Start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_Start &rArr; USBD_LL_Start &rArr; HAL_PCD_Start &rArr; USB_DevConnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DEVICE_Init
</UL>

<P><STRONG><a name="[43b]"></a>USBD_StdDevReq</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, usbd_ctlreq.o(i.USBD_StdDevReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetUSBAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>

<P><STRONG><a name="[43d]"></a>USBD_StdEPReq</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, usbd_ctlreq.o(i.USBD_StdEPReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_StdEPReq &rArr; USBD_CtlSendStatus &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_StallEP
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_IsStallEP
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_ClearStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>

<P><STRONG><a name="[43c]"></a>USBD_StdItfReq</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbd_ctlreq.o(i.USBD_StdItfReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_StdItfReq &rArr; USBD_CtlSendStatus &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_SetupStage
</UL>

<P><STRONG><a name="[318]"></a>USB_ActivateEndpoint</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32f4xx_ll_usb.o(i.USB_ActivateEndpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_ActivateEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Open
</UL>

<P><STRONG><a name="[32f]"></a>USB_ActivateSetup</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_ActivateSetup))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[33d]"></a>USB_CoreInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_ll_usb.o(i.USB_CoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_CoreInit
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[406]"></a>USB_DISABLE_transmission</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_usb.o(i.USB_DISABLE_transmission))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USB_DISABLE_transmission &rArr; USBD_DeInit &rArr; USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DeInit
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[314]"></a>USB_DeactivateEndpoint</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f4xx_ll_usb.o(i.USB_DeactivateEndpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_DeactivateEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Close
</UL>

<P><STRONG><a name="[34d]"></a>USB_DevConnect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_DevConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_DevConnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Start
</UL>

<P><STRONG><a name="[340]"></a>USB_DevDisconnect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_DevDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_DevDisconnect &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Stop
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[33f]"></a>USB_DevInit</STRONG> (Thumb, 362 bytes, Stack size 36 bytes, stm32f4xx_ll_usb.o(i.USB_DevInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_DevInit
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTxFifo
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[33b]"></a>USB_DisableGlobalInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_DisableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Stop
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[1a5]"></a>USB_ENABLE_transmission</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, app_usb.o(i.USB_ENABLE_transmission))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = USB_ENABLE_transmission &rArr; MX_USB_DEVICE_Init &rArr; USBD_Init &rArr; USBD_LL_Init &rArr; HAL_PCD_Init &rArr; HAL_PCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USB_DEVICE_Init
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
</UL>

<P><STRONG><a name="[31b]"></a>USB_EP0StartXfer</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, stm32f4xx_ll_usb.o(i.USB_EP0StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Transmit
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Receive
</UL>

<P><STRONG><a name="[31e]"></a>USB_EP0_OutStart</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_EP0_OutStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_SetStall
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_EP_OutXfrComplete_int
</UL>

<P><STRONG><a name="[316]"></a>USB_EPClearStall</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_EPClearStall))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_ClrStall
</UL>

<P><STRONG><a name="[31d]"></a>USB_EPSetStall</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_EPSetStall))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_SetStall
</UL>

<P><STRONG><a name="[31a]"></a>USB_EPStartXfer</STRONG> (Thumb, 482 bytes, Stack size 24 bytes, stm32f4xx_ll_usb.o(i.USB_EPStartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Transmit
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_EP_Receive
</UL>

<P><STRONG><a name="[34e]"></a>USB_EnableGlobalInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_EnableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Start
</UL>

<P><STRONG><a name="[445]"></a>USB_FlushRxFifo</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_FlushRxFifo))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StopDevice
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevInit
</UL>

<P><STRONG><a name="[32d]"></a>USB_FlushTxFifo</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_FlushTxFifo))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StopDevice
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DevInit
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[18f]"></a>USB_GPIO_Set</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, app_chargingbat.o(i.USB_GPIO_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
</UL>

<P><STRONG><a name="[330]"></a>USB_GetDevSpeed</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_GetDevSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[321]"></a>USB_GetMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_GetMode))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[446]"></a>USB_Query_parameters</STRONG> (Thumb, 288 bytes, Stack size 20 bytes, app_usb.o(i.USB_Query_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_Query_parameters &rArr; Copy_information_20
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_data
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_usbdata
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Copy_information_20
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Copy_information
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
</UL>

<P><STRONG><a name="[44b]"></a>USB_R_W_parameters</STRONG> (Thumb, 1432 bytes, Stack size 48 bytes, app_usb.o(i.USB_R_W_parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_R_W_parameters &rArr; encryption_data &rArr; checksum_usbdata
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_data
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decrypt_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
</UL>

<P><STRONG><a name="[328]"></a>USB_ReadDevAllInEpInterrupt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_ReadDevAllInEpInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[324]"></a>USB_ReadDevAllOutEpInterrupt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_ReadDevAllOutEpInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[329]"></a>USB_ReadDevInEPInterrupt</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_ReadDevInEPInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReadDevInEPInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[325]"></a>USB_ReadDevOutEPInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_ReadDevOutEPInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[322]"></a>USB_ReadInterrupts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_ReadInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[323]"></a>USB_ReadPacket</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[33e]"></a>USB_SetCurrentMode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_SetCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_SetCurrentMode &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Init
</UL>

<P><STRONG><a name="[34a]"></a>USB_SetDevAddress</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_SetDevAddress))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_SetAddress
</UL>

<P><STRONG><a name="[332]"></a>USB_SetTurnaroundTime</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_SetTurnaroundTime))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[34f]"></a>USB_StopDevice</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_StopDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_StopDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTxFifo
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_Stop
</UL>

<P><STRONG><a name="[358]"></a>USB_T_data</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, app_key.o(i.USB_T_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USB_T_data &rArr; USB_GPIO_Set &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GPIO_Set
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;F_BAT_Actual_Inti
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_USBV_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ALL_Task
</UL>

<P><STRONG><a name="[6a]"></a>USB_Warning_interface</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, alarm_interface.o(i.USB_Warning_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = USB_Warning_interface &rArr; USB_anomaly_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
</UL>
<BR>[Address Reference Count : 28]<UL><LI> public.o(i.Screen_GOTO_charging)
<LI> tcr_adjust_interface.o(i.TCR_Data_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_interface)
<LI> lock_resis_interface.o(i.LOCK_Resis_interface)
<LI> system_settings_interface.o(i.BrightScreen_time_Set_interface)
<LI> system_settings_interface.o(i.Brightness_Set_interface)
<LI> screensaver_interface.o(i.Screensaver_interface)
<LI> diy_menu_interface.o(i.CC_SET_menu_interface)
<LI> diy_menu_interface.o(i.DIY_menu_interface)
<LI> diy_menu_interface.o(i.VT_SET_menu_interface)
<LI> main interface.o(i.Main_interface)
<LI> alarm_interface.o(i.Warning_interface)
<LI> system_off_interface.o(i.System_off_interface)
<LI> atomizer_inquiry_interface.o(i.Atomizer_inquiry_interface)
<LI> main_menu_interface.o(i.Main_menu_interface)
<LI> system_settings_interface.o(i.AUTO_MODE_Set_interface)
<LI> custom_curve_adjustment_interface.o(i.Custom_Data_Set_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
<LI> system_settings_interface.o(i.Default_Set_interface)
<LI> system_settings_interface.o(i.KEY_LIGHT_Set_interface)
<LI> system_settings_interface.o(i.PUFF_Set_interface)
<LI> system_settings_interface.o(i.SMART_Set_interface)
<LI> system_settings_interface.o(i.System_Set_Menu_interface)
<LI> system_settings_interface.o(i.VIBRATE_Set_interface)
<LI> rtc_set_interface.o(i.RTC_Set_interface)
<LI> diy_menu_interface.o(i.VW_SET_menu_interface)
<LI> firmware_tim_interface.o(i.Firmware_Tim_interface)
</UL>
<P><STRONG><a name="[3c9]"></a>USB_WritePacket</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_ll_usb.o(i.USB_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EPStartXfer
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCD_WriteEmptyTxFifo
</UL>

<P><STRONG><a name="[82]"></a>USB_anomaly_windows</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, alarm_interface.o(i.USB_anomaly_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = USB_anomaly_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
</UL>
<BR>[Address Reference Count : 5]<UL><LI> diy_menu_interface.o(i.CC_SET_menu_interface)
<LI> diy_menu_interface.o(i.DIY_menu_interface)
<LI> diy_menu_interface.o(i.VT_SET_menu_interface)
<LI> main_menu_interface.o(i.Main_menu_interface)
<LI> diy_menu_interface.o(i.VW_SET_menu_interface)
</UL>
<P><STRONG><a name="[1b1]"></a>USB_state_program</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_usb.o(i.USB_state_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USB_state_program &rArr; USB_DISABLE_transmission &rArr; USBD_DeInit &rArr; USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_SendReport
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Erase_Sector
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DISABLE_transmission
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pro_first_program
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_data
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_R_W_parameters
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Query_parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[44e]"></a>VCC33_judge</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, main.o(i.VCC33_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = VCC33_judge &rArr; Sleeping_Peripheral &rArr; USB_DISABLE_transmission &rArr; USBD_DeInit &rArr; USBD_LL_DeInit &rArr; HAL_PCD_DeInit &rArr; HAL_PCD_MspDeInit &rArr; HAL_GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_VCC_Data
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>VT_SET_menu_interface</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, diy_menu_interface.o(i.VT_SET_menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = VT_SET_menu_interface &rArr; VT_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_operation
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_coordinate_Init
</UL>
<BR>[Address Reference Count : 4]<UL><LI> tcr_adjust_interface.o(i.TCR_Data_Set_windows)
<LI> lock_resis_interface.o(i.LOCK_Resis_Windows)
<LI> diy_menu_interface.o(i.Main_menu_operation)
<LI> diy_menu_interface.o(i.VT_SET_menu_operation)
</UL>
<P><STRONG><a name="[9d]"></a>VW_SET_menu_interface</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, diy_menu_interface.o(i.VW_SET_menu_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = VW_SET_menu_interface &rArr; VW_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_operation
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_coordinate_Init
</UL>
<BR>[Address Reference Count : 2]<UL><LI> diy_menu_interface.o(i.Main_menu_operation)
<LI> main interface.o(i.Main_operation)
</UL>
<P><STRONG><a name="[157]"></a>Vibrate_EN</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, vibrate.o(i.Vibrate_EN))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_Power_interface
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[19d]"></a>Vibrate_ON</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, vibrate.o(i.Vibrate_ON))
<BR><BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_PWM_Wdata
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_program
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_touch
</UL>

<P><STRONG><a name="[412]"></a>Vibrate_drive</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, vibrate.o(i.Vibrate_drive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Vibrate_drive
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOTOR_PWM_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[360]"></a>Vibrate_program</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, vibrate.o(i.Vibrate_program))
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_ON
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_scan
</UL>

<P><STRONG><a name="[3b5]"></a>Voltage_MODE_windows</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main interface.o(i.Voltage_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Voltage_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutW_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[ae]"></a>Voltage_Output_control</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, voltage_mode_control.o(i.Voltage_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Voltage_Output_control &rArr; Power_down_control &rArr; Fault_handling &rArr; PWM_OFF
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Vout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> voltage_mode_control.o(i.Voltage_mode_int)
</UL>
<P><STRONG><a name="[3c6]"></a>Voltage_mode_int</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, voltage_mode_control.o(i.Voltage_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Voltage_mode_int &rArr; Voltage_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[458]"></a>Vout_Data_disp</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, main interface.o(i.Vout_Data_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Vout_Data_disp &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_update
</UL>

<P><STRONG><a name="[1cb]"></a>Vout_adjust</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, app_outputcontrol.o(i.Vout_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Vout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_PWM_Wdata
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_Output_control
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_yule
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_Output_control
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_Output_control
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_yule
</UL>

<P><STRONG><a name="[231]"></a>Vout_update</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, main interface.o(i.Vout_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Vout_update &rArr; Vout_Data_disp &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_Data_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[1ad]"></a>W25QXX_Erase_Sector</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, flahs_driver.o(i.W25QXX_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25QXX_Erase_Sector &rArr; SPI_Flash_WaitForWriteEnd &rArr; SPI_Flash_ReadReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data8
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI3_Write_Data24
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Enable
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Disable
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_WaitForWriteEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Custom_flash
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_WriteFLASH
</UL>

<P><STRONG><a name="[2cc]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[459]"></a>WM_BringToBottom</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[45d]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 324 bytes, Stack size 80 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[2c6]"></a>WM_Deactivate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEASDEV_Select
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[463]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>

<P><STRONG><a name="[2ad]"></a>WM_GetClientRect</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetClientRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>

<P><STRONG><a name="[2b4]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[467]"></a>WM_GetFirstChild</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[45b]"></a>WM_GetParent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[2be]"></a>WM_Init</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[461]"></a>WM_InvalidateRect</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[46f]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[460]"></a>WM_SelectWindow</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SelectWindow &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[465]"></a>WM_SendToParent</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[29a]"></a>WM_SetUserClipRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setusercliprect.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[470]"></a>WM__ActivateClipRect</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[468]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[46c]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[464]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[466]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[471]"></a>WM__GetFirstSibling</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[1ee]"></a>WM__GetNextIVR</STRONG> (Thumb, 818 bytes, Stack size 72 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapEx
</UL>

<P><STRONG><a name="[268]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[269]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[45a]"></a>WM__GetPrevSibling</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[1ec]"></a>WM__InitIVRSearch</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawStreamedBitmapEx
</UL>

<P><STRONG><a name="[45f]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[469]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[46e]"></a>WM__InvalidateRect</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[45c]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[462]"></a>WM__SendMessage</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[2d8]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[68]"></a>Warning_interface</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, alarm_interface.o(i.Warning_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Warning_interface &rArr; Fanhui_Main_interface &rArr; Atomizer_inquiry_GOTO &rArr; Auto_match_Watt_program
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_GOTO
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_GOTO
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDSUB_LOCK_GOTO
</UL>
<BR>[Address Reference Count : 8]<UL><LI> public.o(i.ADDSUB_LOCK_GOTO)
<LI> public.o(i.Key_smoke)
<LI> public.o(i.Main_menu_GOTO)
<LI> main_menu_interface.o(i.Menu_coordinate_Init)
<LI> lock_resis_interface.o(i.LOCK_Resis_touch)
<LI> screensaver_interface.o(i.Screensaver_interface)
<LI> main interface.o(i.Main_interface)
<LI> battery_charging_interface.o(i.Battery_charging_interface)
</UL>
<P><STRONG><a name="[407]"></a>Watchdog_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.Watchdog_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[404]"></a>Watchdog_ON</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.Watchdog_ON))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[414]"></a>Watchdog_Reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.Watchdog_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Watchdog_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3b4]"></a>Watt_MODE_windows</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, main interface.o(i.Watt_MODE_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Watt_MODE_windows &rArr; Arc_angle_Init &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutV_parts
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Res_update
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[b4]"></a>Watt_Output_control</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, watt_mode_control.o(i.Watt_Output_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Watt_Output_control &rArr; Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watt_mode_control.o(i.Watt_mode_int)
</UL>
<P><STRONG><a name="[3c8]"></a>Watt_mode_int</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, watt_mode_control.o(i.Watt_mode_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Watt_mode_int &rArr; Watt_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[155]"></a>Windows_Interrupt_Push</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_disp.o(i.Windows_Interrupt_Push))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_interface
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_GOTO
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDSUB_LOCK_GOTO
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[160]"></a>Windows_Switch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_disp.o(i.Windows_Switch))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;One_Power_interface
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_interface
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_interface
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_interface
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fanhui_Main_interface
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_interface
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Warning_interface
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Warning_interface
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_GOTO
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_GOTO
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_operation
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_operation
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_operation
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_operation
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_touch
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_touch
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_touch
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_touch
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_touch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Operation
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_touch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
</UL>

<P><STRONG><a name="[476]"></a>Wout_Data_disp</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, main interface.o(i.Wout_Data_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Wout_Data_disp &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_update
</UL>

<P><STRONG><a name="[1fd]"></a>Wout_adjust</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, app_outputcontrol.o(i.Wout_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Wout_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUT_PWM_Wdata
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_Output_control
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_yule
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCT_Output_control
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Output_control
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_yule
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_Output_control
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Output_control
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_yule
</UL>

<P><STRONG><a name="[236]"></a>Wout_update</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, main interface.o(i.Wout_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Wout_update &rArr; Wout_Data_disp &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_Data_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[436]"></a>_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i._Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_Init
</UL>

<P><STRONG><a name="[48d]"></a>__0sprintf$6</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4af]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[1b8]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Proportion_Data
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Batter_Time_Data
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_Tim_Data_update
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Data_update
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>

<P><STRONG><a name="[47b]"></a>__hardfp_ceil</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ceil.o(i.__hardfp_ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[47c]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispFloatFix
</UL>

<P><STRONG><a name="[4b0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4b1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4b2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f1]"></a>arm_cos_f32</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, arm_cos_f32.o(i.arm_cos_f32))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
</UL>

<P><STRONG><a name="[1f0]"></a>arm_sin_f32</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, arm_sin_f32.o(i.arm_sin_f32))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
</UL>

<P><STRONG><a name="[447]"></a>checksum_usbdata</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_usb.o(i.checksum_usbdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum_usbdata
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pro_first_program
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_data
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Query_parameters
</UL>

<P><STRONG><a name="[44c]"></a>decrypt_data</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_usb.o(i.decrypt_data))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_R_W_parameters
</UL>

<P><STRONG><a name="[227]"></a>draw_BmpToBitmap_ex</STRONG> (Thumb, 228 bytes, Stack size 72 bytes, gui_image_flash.o(i.draw_BmpToBitmap_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Selected_Cursor
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
</UL>

<P><STRONG><a name="[164]"></a>draw_Bmp_ex</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, gui_image_flash.o(i.draw_Bmp_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = draw_Bmp_ex &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_parts
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SP_Vape_Arc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_parts
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_windows
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_anomaly_windows
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODE_TO_SET_windows
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_TO_UNLOCK_windows
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smoking_timeout_windows
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_circuit_windows
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCB_Overheated_windows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_circuit_windows
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_Battery_windows
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Low_ATOMIZER_windows
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIGH_ATOMIZER_windows
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_charging_windows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Firmware_Tim_Disp
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[2b7]"></a>emWin_LCD_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[448]"></a>encryption_data</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_usb.o(i.encryption_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = encryption_data &rArr; checksum_usbdata
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_usbdata
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pro_first_program
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_R_W_parameters
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Query_parameters
</UL>

<P><STRONG><a name="[422]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_DeInit
</UL>

<P><STRONG><a name="[493]"></a>initCharacterLib</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_xbf_font.o(i.initCharacterLib))
<BR><BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>main</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = main &rArr; GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateRect &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBProgram
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_OBGetConfig
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Unlock
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Lock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_OB_Launch
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCharacterLib
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Module
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rflash
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_load
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Program_Upgrade_Status
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTControl
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_ALL_Task
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_retention
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Testing
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_ON
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[424]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CUSTOM_HID_Init
</UL>

<P><STRONG><a name="[44d]"></a>pro_first_program</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, app_usb.o(i.pro_first_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pro_first_program &rArr; encryption_data &rArr; checksum_usbdata
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_data
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_usbdata
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_state_program
</UL>

<P><STRONG><a name="[1f8]"></a>sqrt_16</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sqrt_16.o(i.sqrt_16))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_mode_int
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_mode_int
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_update
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_Output_control
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Vout
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[326]"></a>PCD_EP_OutXfrComplete_int</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, stm32f4xx_hal_pcd.o(i.PCD_EP_OutXfrComplete_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PCD_EP_OutXfrComplete_int &rArr; HAL_PCD_DataOutStageCallback &rArr; USBD_LL_DataOutStage &rArr; USBD_CtlContinueRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EP0_OutStart
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_DataOutStageCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[32a]"></a>PCD_WriteEmptyTxFifo</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, stm32f4xx_hal_pcd.o(i.PCD_WriteEmptyTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PCD_WriteEmptyTxFifo &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PCD_IRQHandler
</UL>

<P><STRONG><a name="[307]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[383]"></a>LL_APB1_GRP1_ForceReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_ll_tim.o(i.LL_APB1_GRP1_ForceReset))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DeInit
</UL>

<P><STRONG><a name="[384]"></a>LL_APB1_GRP1_ReleaseReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_ll_tim.o(i.LL_APB1_GRP1_ReleaseReset))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DeInit
</UL>

<P><STRONG><a name="[382]"></a>LL_APB2_GRP1_ForceReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_ll_tim.o(i.LL_APB2_GRP1_ForceReset))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DeInit
</UL>

<P><STRONG><a name="[385]"></a>LL_APB2_GRP1_ReleaseReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_ll_tim.o(i.LL_APB2_GRP1_ReleaseReset))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DeInit
</UL>

<P><STRONG><a name="[443]"></a>USB_CoreReset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_ll_usb.o(i.USB_CoreReset))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreInit
</UL>

<P><STRONG><a name="[24c]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32f4xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[378]"></a>LL_DMA_SetChannelSelection</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_ll_dma.o(i.LL_DMA_SetChannelSelection))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_Init
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_DeInit
</UL>

<P><STRONG><a name="[37c]"></a>LL_RTC_DATE_Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_DATE_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RTC_DATE_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_DATE_Init
</UL>

<P><STRONG><a name="[380]"></a>LL_RTC_TIME_Config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_ll_rtc.o(i.LL_RTC_TIME_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_RTC_TIME_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RTC_TIME_Init
</UL>

<P><STRONG><a name="[396]"></a>LL_APB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tim.o(i.LL_APB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[3a1]"></a>LL_APB2_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tim.o(i.LL_APB2_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB2_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
</UL>

<P><STRONG><a name="[39a]"></a>LL_TIM_OC_DisableFast</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tim.o(i.LL_TIM_OC_DisableFast))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[398]"></a>LL_TIM_OC_EnablePreload</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tim.o(i.LL_TIM_OC_EnablePreload))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OUT_PWM_Init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_MOTOR_PWM_Init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LED_PWM_Init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CHG_PWM_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_BL_PWM_Init
</UL>

<P><STRONG><a name="[44f]"></a>__NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watchdog_Reset
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCC33_judge
</UL>

<P><STRONG><a name="[39e]"></a>LL_AHB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.LL_AHB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[152]"></a>LL_ADC_REG_SetSequencerRanks</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, adc.o(i.LL_ADC_REG_SetSequencerRanks))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data_1C
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_TDx_Data
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[392]"></a>LL_ADC_SetChannelSamplingTime</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, adc.o(i.LL_ADC_SetChannelSamplingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[8]"></a>CUSTOM_HID_DeInit_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_custom_hid_if.o(i.CUSTOM_HID_DeInit_FS))
<BR>[Address Reference Count : 1]<UL><LI> usbd_custom_hid_if.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>CUSTOM_HID_Init_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_custom_hid_if.o(i.CUSTOM_HID_Init_FS))
<BR>[Address Reference Count : 1]<UL><LI> usbd_custom_hid_if.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>CUSTOM_HID_OutEvent_FS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_custom_hid_if.o(i.CUSTOM_HID_OutEvent_FS))
<BR>[Address Reference Count : 1]<UL><LI> usbd_custom_hid_if.o(.data)
</UL>
<P><STRONG><a name="[247]"></a>LL_EXTI_IsActiveFlag_0_31</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.LL_EXTI_IsActiveFlag_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[1c5]"></a>__NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[433]"></a>USBD_GetDescriptor</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, usbd_ctlreq.o(i.USBD_GetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[43f]"></a>USBD_SetConfig</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, usbd_ctlreq.o(i.USBD_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; USBD_LL_Transmit &rArr; HAL_PCD_EP_Transmit &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetClassConfig
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrClassConfig
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[e]"></a>USBD_CUSTOM_HID_DataIn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_DataIn))
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USBD_CUSTOM_HID_DataOut</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_DataOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_CUSTOM_HID_DataOut &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBD_CUSTOM_HID_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBD_CUSTOM_HID_DeInit &rArr; USBD_LL_CloseEP &rArr; HAL_PCD_EP_Close &rArr; USB_DeactivateEndpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_CloseEP
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBD_CUSTOM_HID_EP0_RxReady</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_EP0_RxReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_CUSTOM_HID_EP0_RxReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USBD_CUSTOM_HID_GetCfgDesc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_GetCfgDesc))
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBD_CUSTOM_HID_GetDeviceQualifierDesc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_GetDeviceQualifierDesc))
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBD_CUSTOM_HID_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_CUSTOM_HID_Init &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_PrepareReceive
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LL_OpenEP
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBD_CUSTOM_HID_Setup</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, usbd_customhid.o(i.USBD_CUSTOM_HID_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_CUSTOM_HID_Setup &rArr; USBD_CtlPrepareRx &rArr; USBD_LL_PrepareReceive &rArr; HAL_PCD_EP_Receive &rArr; USB_EPStartXfer &rArr; USB_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlPrepareRx
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_customhid.o(.data)
</UL>
<P><STRONG><a name="[17d]"></a>BATT_Charging_Count_down</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, app_chargingbat.o(i.BATT_Charging_Count_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BATT_Charging_Count_down
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BATT_Charging_Count_down_JS
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BAT_Management_Charge
</UL>

<P><STRONG><a name="[35a]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_key.o(i.LL_GPIO_IsInputPinSet))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Filter_processing
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_T_data
</UL>

<P><STRONG><a name="[389]"></a>MODE_OUT_int</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, app_outputcontrol.o(i.MODE_OUT_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MODE_OUT_int &rArr; Read_L_1C &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ON
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Over_PCB_Temp
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling2
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_L_1C
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_VoutADC_Use
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_ONorOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out_int
</UL>

<P><STRONG><a name="[40a]"></a>LL_AHB1_GRP1_DisableClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sleeping.o(i.LL_AHB1_GRP1_DisableClock))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[409]"></a>LL_APB2_GRP1_DisableClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sleeping.o(i.LL_APB2_GRP1_DisableClock))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[40b]"></a>LL_SYSCFG_SetEXTISource</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_sleeping.o(i.LL_SYSCFG_SetEXTISource))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[410]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_sleeping.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[40d]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_sleeping.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[40c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_sleeping.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleeping_Peripheral
</UL>

<P><STRONG><a name="[3db]"></a>LL_RCC_SetRTCClockSource</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_rtc.o(i.LL_RCC_SetRTCClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[3d7]"></a>LL_RTC_BAK_GetRegister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_rtc.o(i.LL_RTC_BAK_GetRegister))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[3da]"></a>LL_RTC_BAK_SetRegister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_rtc.o(i.LL_RTC_BAK_SetRegister))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_RTC_BIN
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_int
</UL>

<P><STRONG><a name="[16b]"></a>AUTO_MODE_parts</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main interface.o(i.AUTO_MODE_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AUTO_MODE_parts &rArr; draw_Bmp_ex &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>

<P><STRONG><a name="[8e]"></a>Arc_Elongation</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, main interface.o(i.Arc_Elongation))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Arc_Elongation &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Disp_Arc_angle)
</UL>
<P><STRONG><a name="[90]"></a>Arc_SPPElongation</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i.Arc_SPPElongation))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Arc_SPPElongation &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Disp_Arc_angle)
</UL>
<P><STRONG><a name="[8f]"></a>Arc_SPPShorten</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i.Arc_SPPShorten))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Arc_SPPShorten &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Disp_Arc_angle)
</UL>
<P><STRONG><a name="[180]"></a>BATT_Vip_disp</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, main interface.o(i.BATT_Vip_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = BATT_Vip_disp &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT
</UL>

<P><STRONG><a name="[1b3]"></a>Batt_parts</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main interface.o(i.Batt_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Batt_parts &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
</UL>

<P><STRONG><a name="[1f2]"></a>Change_Arc_angle_State</STRONG> (Thumb, 528 bytes, Stack size 48 bytes, main interface.o(i.Change_Arc_angle_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = Change_Arc_angle_State &rArr; Clear_Vape_Arc &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Vape_Arc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[1f5]"></a>Clear_SP_Vape_Arc</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main interface.o(i.Clear_SP_Vape_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = Clear_SP_Vape_Arc &rArr; SP_Cutt_Vape_Arc_4 &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Arc_angle_State
</UL>

<P><STRONG><a name="[1f4]"></a>Clear_Vape_Arc</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, main interface.o(i.Clear_Vape_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = Clear_Vape_Arc &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Arc_angle_State
</UL>

<P><STRONG><a name="[21c]"></a>DisWave</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, main interface.o(i.DisWave))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Custom_Data_update
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCV_Custom_Data_update
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCT_Custom_Data_update
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP3_DisWave
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWaveInit
</UL>

<P><STRONG><a name="[1d6]"></a>DisWaveInit</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, main interface.o(i.DisWaveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DisWaveInit &rArr; DisWave
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
</UL>

<P><STRONG><a name="[170]"></a>Disp_Arc_angle</STRONG> (Thumb, 444 bytes, Stack size 48 bytes, main interface.o(i.Disp_Arc_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_Progress
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Data_Arc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc_angle_Init
</UL>

<P><STRONG><a name="[223]"></a>Disp_Custom_Vout</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, main interface.o(i.Disp_Custom_Vout))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Disp_Custom_Vout &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Volt_update
</UL>

<P><STRONG><a name="[226]"></a>Disp_Data_Arc</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main interface.o(i.Disp_Data_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = Disp_Data_Arc &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Arc_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
</UL>

<P><STRONG><a name="[22b]"></a>Disp_Main</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, main interface.o(i.Disp_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = Disp_Main &rArr; Change_Arc_angle_State &rArr; Clear_Vape_Arc &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Custom_Data_update
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCV_Custom_Data_update
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCT_Custom_Data_update
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Arc_angle_State
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_RTC
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Arc_angle_State
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_update
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_update
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Watt_update
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Volt_update
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Tempe_update
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPPWatt_update
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_number
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Vape_Time
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_Res_update
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
</UL>

<P><STRONG><a name="[22f]"></a>Disp_RTC</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, main interface.o(i.Disp_RTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Disp_RTC &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[242]"></a>Disp_SP_Vape_Arc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, main interface.o(i.Disp_SP_Vape_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = Disp_SP_Vape_Arc &rArr; SP_Cutt_Vape_Arc_4 &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Cutt_Vape_Arc_4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Arc_angle_State
</UL>

<P><STRONG><a name="[243]"></a>Disp_Set_Tempe</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, main interface.o(i.Disp_Set_Tempe))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Disp_Set_Tempe &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Tempe_update
</UL>

<P><STRONG><a name="[7c]"></a>Get_Bypass_MODE_Deno</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main interface.o(i.Get_Bypass_MODE_Deno))
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Bypass_MODE_windows)
</UL>
<P><STRONG><a name="[7d]"></a>Get_Bypass_MODE_Mole</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main interface.o(i.Get_Bypass_MODE_Mole))
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Bypass_MODE_windows)
</UL>
<P><STRONG><a name="[a7]"></a>Get_Temp_MODE_Deno</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main interface.o(i.Get_Temp_MODE_Deno))
<BR>[Address Reference Count : 2]<UL><LI> main interface.o(i.TCR_MODE_windows)
<LI> main interface.o(i.Temp_MODE_windows)
</UL>
<P><STRONG><a name="[a8]"></a>Get_Temp_MODE_Mole</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main interface.o(i.Get_Temp_MODE_Mole))
<BR>[Address Reference Count : 2]<UL><LI> main interface.o(i.TCR_MODE_windows)
<LI> main interface.o(i.Temp_MODE_windows)
</UL>
<P><STRONG><a name="[ac]"></a>Get_Volt_MODE_Deno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main interface.o(i.Get_Volt_MODE_Deno))
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Voltage_MODE_windows)
</UL>
<P><STRONG><a name="[ad]"></a>Get_Volt_MODE_Mole</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main interface.o(i.Get_Volt_MODE_Mole))
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Voltage_MODE_windows)
</UL>
<P><STRONG><a name="[9f]"></a>Get_Watt_MODE_Deno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main interface.o(i.Get_Watt_MODE_Deno))
<BR>[Address Reference Count : 2]<UL><LI> main interface.o(i.SPP_MODE_windows)
<LI> main interface.o(i.Watt_MODE_windows)
</UL>
<P><STRONG><a name="[a0]"></a>Get_Watt_MODE_Mole</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main interface.o(i.Get_Watt_MODE_Mole))
<BR>[Address Reference Count : 2]<UL><LI> main interface.o(i.SPP_MODE_windows)
<LI> main interface.o(i.Watt_MODE_windows)
</UL>
<P><STRONG><a name="[1c7]"></a>LOCK_Res_update</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main interface.o(i.LOCK_Res_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LOCK_Res_update &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>

<P><STRONG><a name="[17c]"></a>Lock_parts</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main interface.o(i.Lock_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Lock_parts &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_windows
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_Locked
</UL>

<P><STRONG><a name="[38e]"></a>MP3_DisWave</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, main interface.o(i.MP3_DisWave))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MP3_DisWave &rArr; DisWave
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Custom_Data_update
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCV_Custom_Data_update
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCT_Custom_Data_update
</UL>

<P><STRONG><a name="[3af]"></a>Main_operation</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, main interface.o(i.Main_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Main_operation &rArr; Disp_Data_Arc &rArr; Disp_Arc_angle &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_metric_parts
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock_parts
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Data_Arc
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_GOTO
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADDSUB_LOCK_GOTO
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_interface
</UL>

<P><STRONG><a name="[1c8]"></a>OutV_parts</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main interface.o(i.OutV_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = OutV_parts &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>

<P><STRONG><a name="[1d5]"></a>OutW_parts</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main interface.o(i.OutW_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = OutW_parts &rArr; GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
</UL>

<P><STRONG><a name="[239]"></a>SP_Arc_angle_State</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main interface.o(i.SP_Arc_angle_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = SP_Arc_angle_State &rArr; Disp_SP_Vape_Arc &rArr; SP_Cutt_Vape_Arc_4 &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_SP_Vape_Arc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SP_Vape_Arc
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[1f6]"></a>SP_Cutt_Vape_Arc_4</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, main interface.o(i.SP_Cutt_Vape_Arc_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = SP_Cutt_Vape_Arc_4 &rArr; MapNoRulebmpToBitmap_ex &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_BmpToBitmap_ex
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapNoRulebmpToBitmap_ex
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_SP_Vape_Arc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_SP_Vape_Arc
</UL>

<P><STRONG><a name="[235]"></a>Set_CCT_Custom_Data_update</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main interface.o(i.Set_CCT_Custom_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Set_CCT_Custom_Data_update &rArr; MP3_DisWave &rArr; DisWave
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP3_DisWave
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[234]"></a>Set_CCV_Custom_Data_update</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main interface.o(i.Set_CCV_Custom_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Set_CCV_Custom_Data_update &rArr; MP3_DisWave &rArr; DisWave
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP3_DisWave
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[233]"></a>Set_Custom_Data_update</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main interface.o(i.Set_Custom_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Set_Custom_Data_update &rArr; MP3_DisWave &rArr; DisWave
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vape_MP3_Beat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MP3_DisWave
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisWave
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Main
</UL>

<P><STRONG><a name="[3b3]"></a>Temp_metric_parts</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, main interface.o(i.Temp_metric_parts))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Temp_metric_parts &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_operation
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
</UL>

<P><STRONG><a name="[1c9]"></a>Vape_MP3_Beat</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, main interface.o(i.Vape_MP3_Beat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Vape_MP3_Beat &rArr; Draw_Bitmap_EX &rArr; SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Custom_Data_update
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCV_Custom_Data_update
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CCT_Custom_Data_update
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SP_Arc_angle_State
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Arc_angle_State
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_MODE_windows
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_MODE_windows
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Temp_MODE_windows
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_MODE_windows
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_MODE_windows
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_MODE_windows
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_MODE_windows
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_MODE_windows
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_MODE_windows
</UL>

<P><STRONG><a name="[21f]"></a>Watt_Progress</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main interface.o(i.Watt_Progress))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Watt_Progress &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Arc_angle
</UL>

<P><STRONG><a name="[8a]"></a>_Cutt_Vape_Arc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i._Cutt_Vape_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Cutt_Vape_Arc &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Clear_Vape_Arc)
</UL>
<P><STRONG><a name="[a2]"></a>_SP_Vape_Arc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i._SP_Vape_Arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _SP_Vape_Arc &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.SP_Cutt_Vape_Arc_4)
</UL>
<P><STRONG><a name="[87]"></a>_Tim_Vape_Arc_L</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i._Tim_Vape_Arc_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Tim_Vape_Arc_L &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Change_Arc_angle_State)
</UL>
<P><STRONG><a name="[88]"></a>_Tim_Vape_Arc_R</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main interface.o(i._Tim_Vape_Arc_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Tim_Vape_Arc_R &rArr; GUI_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main interface.o(i.Change_Arc_angle_State)
</UL>
<P><STRONG><a name="[14]"></a>__max_DisWave</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, main interface.o(i.__max_DisWave))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = __max_DisWave &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 4]<UL><LI> main interface.o(i.CCT_Custom_MODE_windows)
<LI> main interface.o(i.CCV_Custom_MODE_windows)
<LI> main interface.o(i.Custom_MODE_windows)
<LI> main interface.o(.data)
</UL>
<P><STRONG><a name="[418]"></a>System_off_windows</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, system_off_interface.o(i.System_off_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = System_off_windows &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_off_interface
</UL>

<P><STRONG><a name="[19f]"></a>Boot_animation</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, one_power_interface.o(i.Boot_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Boot_animation &rArr; Flash_GUI_GIF_DrawSubEx &rArr; GUI_GIF_DrawSubEx &rArr; GUI_GIF__DrawFromFilePointer &rArr; _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_GetImageInfoEx
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GIF_DrawSubEx
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOOT_LOGO_interface
</UL>

<P><STRONG><a name="[6f]"></a>Out_Boot</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, one_power_interface.o(i.Out_Boot))
<BR>[Address Reference Count : 1]<UL><LI> one_power_interface.o(i.BOOT_LOGO_interface)
</UL>
<P><STRONG><a name="[176]"></a>DISP_Button</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, atomizer_inquiry_interface.o(i.DISP_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_touch
</UL>

<P><STRONG><a name="[17a]"></a>Resis_Data_update</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, atomizer_inquiry_interface.o(i.Resis_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Resis_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_windows
</UL>

<P><STRONG><a name="[3b2]"></a>Main_menu_operation</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, main_menu_interface.o(i.Main_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = Main_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
</UL>

<P><STRONG><a name="[3b1]"></a>Menu_coordinate_Init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, main_menu_interface.o(i.Menu_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Menu_coordinate_Init &rArr; Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_menu_interface
</UL>

<P><STRONG><a name="[220]"></a>Disp_Atomizer</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, tcr_adjust_interface.o(i.Disp_Atomizer))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Disp_Atomizer &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_Cursor
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
</UL>

<P><STRONG><a name="[228]"></a>Disp_L_Arrow</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, tcr_adjust_interface.o(i.Disp_L_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_L_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
</UL>

<P><STRONG><a name="[23a]"></a>Disp_PWR_Data</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, tcr_adjust_interface.o(i.Disp_PWR_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Disp_PWR_Data &rArr; GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_Cursor
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
</UL>

<P><STRONG><a name="[23e]"></a>Disp_R_Arrow</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, tcr_adjust_interface.o(i.Disp_R_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_R_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
</UL>

<P><STRONG><a name="[244]"></a>Disp_TCR_Data</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, tcr_adjust_interface.o(i.Disp_TCR_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Disp_TCR_Data &rArr; GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_Cursor
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_windows
</UL>

<P><STRONG><a name="[419]"></a>TCR_Data_Set_windows</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, tcr_adjust_interface.o(i.TCR_Data_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = TCR_Data_Set_windows &rArr; Disp_Atomizer &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
</UL>

<P><STRONG><a name="[41a]"></a>TCR_Data_touch</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, tcr_adjust_interface.o(i.TCR_Data_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = TCR_Data_touch &rArr; update_Cursor &rArr; Disp_Atomizer &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_Cursor
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_Set_interface
</UL>

<P><STRONG><a name="[41b]"></a>update_Cursor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tcr_adjust_interface.o(i.update_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = update_Cursor &rArr; Disp_Atomizer &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_TCR_Data
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_PWR_Data
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Atomizer
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCR_Data_touch
</UL>

<P><STRONG><a name="[1ce]"></a>CCT_Custom_Data_Set_windows</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, custom_curve_adjustment_interface.o(i.CCT_Custom_Data_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = CCT_Custom_Data_Set_windows &rArr; Custom_windows &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomCCT_Data_Y
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[1cf]"></a>CCT_SET_Operation</STRONG> (Thumb, 438 bytes, Stack size 56 bytes, custom_curve_adjustment_interface.o(i.CCT_SET_Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = CCT_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomCCT_Data_Y
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[1d9]"></a>CCV_Custom_Data_Set_windows</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, custom_curve_adjustment_interface.o(i.CCV_Custom_Data_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = CCV_Custom_Data_Set_windows &rArr; Custom_windows &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomCCV_Data_Y
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[1da]"></a>CCV_SET_Operation</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, custom_curve_adjustment_interface.o(i.CCV_SET_Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = CCV_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_update
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomCCV_Data_Y
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[1e2]"></a>CCW_SET_Operation</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, custom_curve_adjustment_interface.o(i.CCW_SET_Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = CCW_SET_Operation &rArr; Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomWatt_Data_Y
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[201]"></a>Custom_Data_Set_windows</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, custom_curve_adjustment_interface.o(i.Custom_Data_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Custom_Data_Set_windows &rArr; Custom_windows &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_update
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CustomWatt_Data_Y
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_interface
</UL>

<P><STRONG><a name="[1d7]"></a>Custom_Set_Tim_Operation</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, custom_curve_adjustment_interface.o(i.Custom_Set_Tim_Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Custom_Set_Tim_Operation &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Tim_update
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
</UL>

<P><STRONG><a name="[1d3]"></a>Custom_Tim_update</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, custom_curve_adjustment_interface.o(i.Custom_Tim_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Custom_Tim_update &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
</UL>

<P><STRONG><a name="[1d8]"></a>Custom_curve_i_j_update</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, custom_curve_adjustment_interface.o(i.Custom_curve_i_j_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
</UL>

<P><STRONG><a name="[1d1]"></a>Custom_windows</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, custom_curve_adjustment_interface.o(i.Custom_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Custom_windows &rArr; Custom_curve_i_j_update &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_curve_i_j_update
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
</UL>

<P><STRONG><a name="[20d]"></a>Disp_L_Arrow</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, custom_curve_adjustment_interface.o(i.Disp_L_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_L_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
</UL>

<P><STRONG><a name="[203]"></a>Disp_R_Arrow</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, custom_curve_adjustment_interface.o(i.Disp_R_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_R_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_windows
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Set_Tim_Operation
</UL>

<P><STRONG><a name="[1d0]"></a>GET_CustomCCT_Data_Y</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, custom_curve_adjustment_interface.o(i.GET_CustomCCT_Data_Y))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_SET_Operation
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCT_Custom_Data_Set_windows
</UL>

<P><STRONG><a name="[1db]"></a>GET_CustomCCV_Data_Y</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, custom_curve_adjustment_interface.o(i.GET_CustomCCV_Data_Y))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_SET_Operation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCV_Custom_Data_Set_windows
</UL>

<P><STRONG><a name="[1e3]"></a>GET_CustomWatt_Data_Y</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, custom_curve_adjustment_interface.o(i.GET_CustomWatt_Data_Y))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_Data_Set_windows
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCW_SET_Operation
</UL>

<P><STRONG><a name="[212]"></a>DISP_Button_LOCK</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lock_resis_interface.o(i.DISP_Button_LOCK))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DISP_Button_LOCK &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[240]"></a>Disp_Resis_Data</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lock_resis_interface.o(i.Disp_Resis_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Disp_Resis_Data &rArr; Resis_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
</UL>

<P><STRONG><a name="[386]"></a>LOCK_Resis_LOGO_update</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lock_resis_interface.o(i.LOCK_Resis_LOGO_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LOCK_Resis_LOGO_update &rArr; Map_draw_bmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map_draw_bmpToBitmap_ex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_touch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
</UL>

<P><STRONG><a name="[387]"></a>LOCK_Resis_Windows</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lock_resis_interface.o(i.LOCK_Resis_Windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LOCK_Resis_Windows &rArr; DISP_Button_LOCK &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resis_Data_update
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_LOGO_update
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_LOCK
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
</UL>

<P><STRONG><a name="[388]"></a>LOCK_Resis_touch</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, lock_resis_interface.o(i.LOCK_Resis_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = LOCK_Resis_touch &rArr; DISP_Button_LOCK &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_LOGO_update
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_LOCK
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_interface
</UL>

<P><STRONG><a name="[241]"></a>Resis_Data_update</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, lock_resis_interface.o(i.Resis_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Resis_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCK_Resis_Windows
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Resis_Data
</UL>

<P><STRONG><a name="[158]"></a>AUTO_MODE_Set_windows</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, system_settings_interface.o(i.AUTO_MODE_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = AUTO_MODE_Set_windows &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SMART_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_interface
</UL>

<P><STRONG><a name="[79]"></a>BrightScreen_time_Data_update</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, system_settings_interface.o(i.BrightScreen_time_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = BrightScreen_time_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> system_settings_interface.o(i.BrightScreen_time_Set_windows)
<LI> system_settings_interface.o(i.BrightScreen_time_touch)
</UL>
<P><STRONG><a name="[cb]"></a>BrightScreen_time_Set_interface</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, system_settings_interface.o(i.BrightScreen_time_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = BrightScreen_time_Set_interface &rArr; BrightScreen_time_touch &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_touch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[1ba]"></a>BrightScreen_time_Set_windows</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, system_settings_interface.o(i.BrightScreen_time_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = BrightScreen_time_Set_windows &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
</UL>

<P><STRONG><a name="[1bb]"></a>BrightScreen_time_touch</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, system_settings_interface.o(i.BrightScreen_time_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = BrightScreen_time_touch &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightScreen_time_Set_interface
</UL>

<P><STRONG><a name="[1be]"></a>Brightness_Data_update</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, system_settings_interface.o(i.Brightness_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Brightness_Data_update &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Set_interface
</UL>

<P><STRONG><a name="[c7]"></a>Brightness_Set_interface</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, system_settings_interface.o(i.Brightness_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Brightness_Set_interface &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brightness_Data_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[211]"></a>DISP_Button</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_settings_interface.o(i.DISP_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_touch
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_windows
</UL>

<P><STRONG><a name="[213]"></a>DISP_Button_PUFF</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_settings_interface.o(i.DISP_Button_PUFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DISP_Button_PUFF &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
</UL>

<P><STRONG><a name="[15f]"></a>DISP_SMART_Button</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_settings_interface.o(i.DISP_SMART_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_Button_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_touch
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_touch
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUTO_MODE_Set_windows
</UL>

<P><STRONG><a name="[219]"></a>Default_Set_windows</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, system_settings_interface.o(i.Default_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Default_Set_windows &rArr; DISP_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Set_interface
</UL>

<P><STRONG><a name="[35c]"></a>KEY_LIGHT_Data_update</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, system_settings_interface.o(i.KEY_LIGHT_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = KEY_LIGHT_Data_update &rArr; GUI_MEMDEV_Create &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Set_interface
</UL>

<P><STRONG><a name="[cc]"></a>KEY_LIGHT_Set_interface</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, system_settings_interface.o(i.KEY_LIGHT_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = KEY_LIGHT_Set_interface &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_LIGHT_Data_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3bb]"></a>Menu_coordinate_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, system_settings_interface.o(i.Menu_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Menu_coordinate_Init &rArr; Disp_MENU_Name &rArr; Disp_Button &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
</UL>

<P><STRONG><a name="[c8]"></a>PUFF_Set_interface</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, system_settings_interface.o(i.PUFF_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = PUFF_Set_interface &rArr; PUFF_Set_touch &rArr; DISP_Button_PUFF &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3cb]"></a>PUFF_Set_touch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, system_settings_interface.o(i.PUFF_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = PUFF_Set_touch &rArr; DISP_Button_PUFF &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_numberANDlengthTim
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_PUFF
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
</UL>

<P><STRONG><a name="[3ca]"></a>PUFF_Set_windows</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, system_settings_interface.o(i.PUFF_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = PUFF_Set_windows &rArr; DISP_Button_PUFF &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print_PUFF_Data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Button_PUFF
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_interface
</UL>

<P><STRONG><a name="[3cd]"></a>Print_PUFF_Data</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, system_settings_interface.o(i.Print_PUFF_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Print_PUFF_Data &rArr; GUI_DispFloatFix &rArr; _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatFix
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_windows
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUFF_Set_touch
</UL>

<P><STRONG><a name="[c9]"></a>SMART_Set_interface</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, system_settings_interface.o(i.SMART_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = SMART_Set_interface &rArr; SMART_Set_touch &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_touch
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3e4]"></a>SMART_Set_windows</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, system_settings_interface.o(i.SMART_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SMART_Set_windows &rArr; DISP_SMART_Button &rArr; Print_Button_Disp &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SMART_Button
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMART_Set_interface
</UL>

<P><STRONG><a name="[7b]"></a>Screen_Tim_Data_update</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, system_settings_interface.o(i.Screen_Tim_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Screen_Tim_Data_update &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> system_settings_interface.o(i.BrightScreen_time_Set_windows)
<LI> system_settings_interface.o(i.BrightScreen_time_touch)
</UL>
<P><STRONG><a name="[417]"></a>System_Set_Operation</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, system_settings_interface.o(i.System_Set_Operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = System_Set_Operation &rArr; Disp_MENU_Name &rArr; Disp_Button &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Set_Menu_interface
</UL>

<P><STRONG><a name="[aa]"></a>VIBRATE_Data_update</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, system_settings_interface.o(i.VIBRATE_Data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = VIBRATE_Data_update &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Address Reference Count : 2]<UL><LI> system_settings_interface.o(i.VIBRATE_Set_interface)
<LI> system_settings_interface.o(i.VIBRATE_Set_touch)
</UL>
<P><STRONG><a name="[cd]"></a>VIBRATE_Set_interface</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, system_settings_interface.o(i.VIBRATE_Set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = VIBRATE_Set_interface &rArr; VIBRATE_Set_touch &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Interrupt_Push
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Light_screen
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_Bmp_ex
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_EN
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen_GOTO_charging
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GOTO_Screensaver_interface
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_error_GOTO
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Atomizer_inquiry_GOTO
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_touch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_settings_interface.o(.constdata)
</UL>
<P><STRONG><a name="[450]"></a>VIBRATE_Set_touch</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, system_settings_interface.o(i.VIBRATE_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = VIBRATE_Set_touch &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vibrate_ON
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VIBRATE_Set_interface
</UL>

<P><STRONG><a name="[7a]"></a>__pfDraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, system_settings_interface.o(i.__pfDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = __pfDraw &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>
<BR>[Address Reference Count : 4]<UL><LI> system_settings_interface.o(i.BrightScreen_time_Set_windows)
<LI> system_settings_interface.o(i.BrightScreen_time_touch)
<LI> system_settings_interface.o(i.VIBRATE_Set_interface)
<LI> system_settings_interface.o(i.VIBRATE_Set_touch)
</UL>
<P><STRONG><a name="[1ef]"></a>Calculation_position</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, screensaver_interface.o(i.Calculation_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Calculation_position &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>

<P><STRONG><a name="[a6]"></a>Screensaver_2_Return</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, screensaver_interface.o(i.Screensaver_2_Return))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screensaver_2_Return
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DeleteAuto
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Screensaver_Windows_2)
</UL>
<P><STRONG><a name="[16]"></a>Screensaver_Windows_1</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, screensaver_interface.o(i.Screensaver_Windows_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Screensaver_Windows_1 &rArr; print_Year &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(.data)
</UL>
<P><STRONG><a name="[a4]"></a>Screensaver_Windows_1return</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screensaver_interface.o(i.Screensaver_Windows_1return))
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Screensaver_Windows_1)
</UL>
<P><STRONG><a name="[17]"></a>Screensaver_Windows_2</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, screensaver_interface.o(i.Screensaver_Windows_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = Screensaver_Windows_2 &rArr; Watch_Dispaly_2_Display &rArr; GUI_MEMDEV_DrawAuto &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateAuto
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(.data)
</UL>
<P><STRONG><a name="[a3]"></a>Watch_Dispaly_1_Display</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, screensaver_interface.o(i.Watch_Dispaly_1_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Watch_Dispaly_1_Display &rArr; print_Year &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Screensaver_Windows_1)
</UL>
<P><STRONG><a name="[a5]"></a>Watch_Dispaly_2_Display</STRONG> (Thumb, 520 bytes, Stack size 64 bytes, screensaver_interface.o(i.Watch_Dispaly_2_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Watch_Dispaly_2_Display &rArr; GUI_MEMDEV_DrawAuto &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RotatePolygon
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_DrawAuto
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Week
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM2
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_2_Return
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculation_position
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Screensaver_Windows_2)
</UL>
<P><STRONG><a name="[b3]"></a>_Pointer_Hours_2_Display</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, screensaver_interface.o(i._Pointer_Hours_2_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Pointer_Hours_2_Display &rArr; GUI_AA_FillCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Watch_Dispaly_2_Display)
</UL>
<P><STRONG><a name="[b2]"></a>_Pointer_Minutes_2_Display</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, screensaver_interface.o(i._Pointer_Minutes_2_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _Pointer_Minutes_2_Display &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Watch_Dispaly_2_Display)
</UL>
<P><STRONG><a name="[b1]"></a>_Pointer_Seconds_2_Display</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, screensaver_interface.o(i._Pointer_Seconds_2_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _Pointer_Seconds_2_Display &rArr; GUI_AA_DrawArc &rArr; GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillPolygon
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_EnableHiRes
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DisableHiRes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensaver_interface.o(i.Watch_Dispaly_2_Display)
</UL>
<P><STRONG><a name="[3f9]"></a>print_AMPM</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, screensaver_interface.o(i.print_AMPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_AMPM &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3fd]"></a>print_AMPM2</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, screensaver_interface.o(i.print_AMPM2))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_AMPM2 &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
</UL>

<P><STRONG><a name="[3f7]"></a>print_Day</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, screensaver_interface.o(i.print_Day))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = print_Day &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3fa]"></a>print_Hours</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, screensaver_interface.o(i.print_Hours))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Hours &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3fb]"></a>print_Minutes</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, screensaver_interface.o(i.print_Minutes))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Minutes &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3f6]"></a>print_Month</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, screensaver_interface.o(i.print_Month))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = print_Month &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3f8]"></a>print_Week</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, screensaver_interface.o(i.print_Week))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Week &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[3f5]"></a>print_Year</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, screensaver_interface.o(i.print_Year))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = print_Year &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_2_Display
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watch_Dispaly_1_Display
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_2
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screensaver_Windows_1
</UL>

<P><STRONG><a name="[229]"></a>Disp_L_Arrow</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, rtc_set_interface.o(i.Disp_L_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_L_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_touch
</UL>

<P><STRONG><a name="[23f]"></a>Disp_R_Arrow</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, rtc_set_interface.o(i.Disp_R_Arrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Disp_R_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_windows
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_touch
</UL>

<P><STRONG><a name="[db]"></a>RTC_AMPM_set</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_AMPM_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = RTC_AMPM_set &rArr; print_Hours &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3d0]"></a>RTC_Date_limit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtc_set_interface.o(i.RTC_Date_limit))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = RTC_Date_limit &rArr; print_Day &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Year
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Month
</UL>

<P><STRONG><a name="[d9]"></a>RTC_Set_Date</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_Date))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = RTC_Set_Date &rArr; print_Day &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Day
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>RTC_Set_Hours</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, rtc_set_interface.o(i.RTC_Set_Hours))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = RTC_Set_Hours &rArr; print_Hours &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Hours
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_AMPM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>RTC_Set_Minutes</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_Minutes))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = RTC_Set_Minutes &rArr; print_Minutes &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Minutes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>RTC_Set_Month</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_Month))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = RTC_Set_Month &rArr; print_Month &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Month
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Date_limit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>RTC_Set_Seconds</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_Seconds))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = RTC_Set_Seconds &rArr; print_Seconds &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Seconds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>RTC_Set_Year</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, rtc_set_interface.o(i.RTC_Set_Year))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = RTC_Set_Year &rArr; print_Year &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Year
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Date_limit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[3d2]"></a>RTC_Set_touch</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, rtc_set_interface.o(i.RTC_Set_touch))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = RTC_Set_touch &rArr; Disp_R_Arrow &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
</UL>

<P><STRONG><a name="[3d1]"></a>RTC_Set_windows</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, rtc_set_interface.o(i.RTC_Set_windows))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = RTC_Set_windows &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCgotoSET
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_R_Arrow
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_L_Arrow
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_interface
</UL>

<P><STRONG><a name="[d3]"></a>print_AMPM</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_AMPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_AMPM &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Hours
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AMPM_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>print_Day</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_Day))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Day &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Date
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Date_limit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>print_Hours</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, rtc_set_interface.o(i.print_Hours))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = print_Hours &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Hours
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AMPM_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>print_Minutes</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_Minutes))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Minutes &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Minutes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>print_Month</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_Month))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Month &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Month
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>print_Seconds</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_Seconds))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Seconds &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Seconds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>print_Watch</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, rtc_set_interface.o(i.print_Watch))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = print_Watch &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>print_Year</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, rtc_set_interface.o(i.print_Year))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = print_Year &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_Year
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>watch_set</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, rtc_set_interface.o(i.watch_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = watch_set &rArr; print_Watch &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_R_ADD_SUB
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_Watch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc_set_interface.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>BATT_Vip_disp</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, battery_charging_interface.o(i.BATT_Vip_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = BATT_Vip_disp &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT_Charging
</UL>

<P><STRONG><a name="[221]"></a>Disp_Batter_Time_Data</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, battery_charging_interface.o(i.Disp_Batter_Time_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Disp_Batter_Time_Data &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT_Charging
</UL>

<P><STRONG><a name="[23d]"></a>Disp_Proportion_Data</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, battery_charging_interface.o(i.Disp_Proportion_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Disp_Proportion_Data &rArr; GUI_DispStringInRect &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_BAT_Charging
</UL>

<P><STRONG><a name="[222]"></a>Disp_Button</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, vt_mode_set_interface.o(i.Disp_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Disp_Button &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_EXIT_Key
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
</UL>

<P><STRONG><a name="[224]"></a>Disp_DATA_Adjust_Name</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, vt_mode_set_interface.o(i.Disp_DATA_Adjust_Name))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Disp_DATA_Adjust_Name &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bitmap_EX
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_GUI_GetStreamedBitmapInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_MENU_Name
</UL>

<P><STRONG><a name="[1e4]"></a>CC_SET_coordinate_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, diy_menu_interface.o(i.CC_SET_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CC_SET_coordinate_Init &rArr; Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[1e6]"></a>CC_SET_menu_operation</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, diy_menu_interface.o(i.CC_SET_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CC_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_SET_menu_interface
</UL>

<P><STRONG><a name="[215]"></a>Main_menu_operation</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, diy_menu_interface.o(i.Main_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Main_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
</UL>

<P><STRONG><a name="[214]"></a>Menu_coordinate_Init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, diy_menu_interface.o(i.Menu_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Menu_coordinate_Init &rArr; Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIY_menu_interface
</UL>

<P><STRONG><a name="[451]"></a>VT_SET_coordinate_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, diy_menu_interface.o(i.VT_SET_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = VT_SET_coordinate_Init &rArr; Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
</UL>

<P><STRONG><a name="[452]"></a>VT_SET_menu_operation</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, diy_menu_interface.o(i.VT_SET_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = VT_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VT_SET_menu_interface
</UL>

<P><STRONG><a name="[453]"></a>VW_SET_coordinate_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, diy_menu_interface.o(i.VW_SET_coordinate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = VW_SET_coordinate_Init &rArr; Menu_Page_Init &rArr; Disp_EXIT_Key &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Page_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Bottom_Windows
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOnDisplay
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelTurnOffDisplay
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
</UL>

<P><STRONG><a name="[454]"></a>VW_SET_menu_operation</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, diy_menu_interface.o(i.VW_SET_menu_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = VW_SET_menu_operation &rArr; KEY_Main_menu_operation &rArr; Selected_Cursor &rArr; draw_BmpToBitmap_ex &rArr; GUI_DrawBitmap &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Windows_Switch
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Main_menu_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VW_SET_menu_interface
</UL>

<P><STRONG><a name="[1cd]"></a>Voltage_yule</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, bypass_mode_control.o(i.Voltage_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Voltage_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bypass_mode_int
</UL>

<P><STRONG><a name="[20c]"></a>Custom_yule</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, curvewatt_mode_control.o(i.Custom_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Custom_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_mode_int
</UL>

<P><STRONG><a name="[457]"></a>Voltage_yule</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, voltage_mode_control.o(i.Voltage_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Voltage_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Vout
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Voltage_mode_int
</UL>

<P><STRONG><a name="[475]"></a>Watt_yule</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, watt_mode_control.o(i.Watt_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Watt_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Watt_mode_int
</UL>

<P><STRONG><a name="[1dd]"></a>CCV_yule</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, curveccv_mode_control.o(i.CCV_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CCV_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Vout
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Custom_CCV_mode_int
</UL>

<P><STRONG><a name="[3f3]"></a>SPP_yule</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, spp_mode_control.o(i.SPP_yule))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPP_yule &rArr; ReadLoad_Data &rArr; ADC_TDx_Data &rArr; LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Nus
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wout_adjust
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_down_control
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_handling
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_Wout
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLoad_Data
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBATz_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPP_mode_int
</UL>

<P><STRONG><a name="[444]"></a>LL_AHB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_usb.o(i.LL_AHB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ENABLE_transmission
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DISABLE_transmission
</UL>

<P><STRONG><a name="[1ac]"></a>Disp_Firmware_Tim</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, batt_jz_interface.o(i.Disp_Firmware_Tim))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Disp_Firmware_Tim &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
</UL>

<P><STRONG><a name="[1a4]"></a>jiaozhun_panduan</STRONG> (Thumb, 436 bytes, Stack size 72 bytes, batt_jz_interface.o(i.jiaozhun_panduan))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = jiaozhun_panduan &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_PageData32
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Batt_JZ_interface
</UL>

<P><STRONG><a name="[1c2]"></a>Data_Average</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, brightness_auto.o(i.Data_Average))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Data_Average
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Testing
</UL>

<P><STRONG><a name="[1c3]"></a>Ret_Bring_VIP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, brightness_auto.o(i.Ret_Bring_VIP))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bring_AUTO_Testing
</UL>

<P><STRONG><a name="[47d]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, guidrv_template.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _DrawBitLine1BPP &rArr; GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Read_BUFF_Dot
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47f]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 338 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP &rArr; LCD_Write_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[480]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP &rArr; LCD_Write_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[481]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, guidrv_template.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine8BPP &rArr; LCD_Write_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[df]"></a>_DrawBitmap</STRONG> (Thumb, 290 bytes, Stack size 64 bytes, guidrv_template.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_template.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_template.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>_FillRect</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, guidrv_template.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _FillRect &rArr; GUI_Read_BUFF_Dot &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Window
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Read_BUFF_Dot
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>_GetDevFunc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>_GetPixelIndex</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guidrv_template.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetPixelIndex &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadColor_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_template.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_template.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[487]"></a>_InitOnce</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, guidrv_template.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[be]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_template.o(i._Off))
<BR><BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[bd]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_template.o(i._On))
<BR><BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[bf]"></a>_SetLUTEntry</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_template.o(i._SetLUTEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetLUTEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[e6]"></a>_SetOrg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_template.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>_SetPixelIndex</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidrv_template.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SetPixelIndex &rArr; LCD_WriteData_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_8bit
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteData_16bit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteComm
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>_SetSize</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_template.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[b9]"></a>_SetVRAMAddr</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_template.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[ba]"></a>_SetVSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidrv_template.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[e5]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_template.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _XorPixel &rArr; _GetPixelIndex &rArr; LCD_ReadColor_16bit
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>ImageGetDoubleData</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gui_image_flash.o(i.ImageGetDoubleData))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ImageGetDoubleData &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Address Reference Count : 5]<UL><LI> gui_image_flash.o(i.Flash_GUI_BMP_GetXSizeEx)
<LI> gui_image_flash.o(i.Flash_GUI_BMP_GetYSizeEx)
<LI> gui_image_flash.o(i.Flash_GUI_GIF_DrawSubEx)
<LI> gui_image_flash.o(i.Flash_GUI_GIF_GetImageInfoEx)
<LI> gui_image_flash.o(i.Flash_GUI_GIF_GetInfoEx)
</UL>
<P><STRONG><a name="[91]"></a>ImageGetPNGData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_image_flash.o(i.ImageGetPNGData))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ImageGetPNGData &rArr; SPI_Flash_Read_BuffData8 &rArr; SPI3_Write_Data24
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData8
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read_BuffData_OK
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_image_flash.o(i.Draw_Bitmap_EX)
<LI> gui_image_flash.o(i.Flash_GUI_GetStreamedBitmapInfoEx)
</UL>
<P><STRONG><a name="[94]"></a>_DrawHLine</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[26d]"></a>_FlushLine</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA4_Trans &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA4_Trans
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[93]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[27f]"></a>_AddFreeMemory</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[27a]"></a>_Alloc</STRONG> (Thumb, 480 bytes, Stack size 48 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[477]"></a>_EnlargeBlocks</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[280]"></a>_InitOnce</STRONG> (Thumb, 694 bytes, Stack size 40 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[c3]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[282]"></a>_RemoveFreeBlock</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[281]"></a>_RemoveHoles</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[25d]"></a>_DrawArc</STRONG> (Thumb, 842 bytes, Stack size 88 bytes, gui_arc.o(i._DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawArc
</UL>

<P><STRONG><a name="[97]"></a>_OnExit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI_Init)
</UL>
<P><STRONG><a name="[1e8]"></a>CL_DispChar</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
</UL>

<P><STRONG><a name="[f2]"></a>_DrawBitmapSwapRB</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_565.o(i._DrawBitmapSwapRB))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _DrawBitmapSwapRB &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_565.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>_ClearUnusedPixels</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gui_gif.o(i._ClearUnusedPixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClearUnusedPixels &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[96]"></a>_DrawFromDataBlock</STRONG> (Thumb, 572 bytes, Stack size 128 bytes, gui_gif.o(i._DrawFromDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawFromDataBlock &rArr; GUI_GIF__GetNextByte &rArr; _GetDataBlock &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif.o(i.GUI_GIF_DrawSubEx)
</UL>
<P><STRONG><a name="[2a9]"></a>_GetDataBlock</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_gif.o(i._GetDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDataBlock &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[2a3]"></a>_GetImageDimension</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gui_gif.o(i._GetImageDimension))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubEx
</UL>

<P><STRONG><a name="[2a7]"></a>_GetSizeAndColorTable</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gui_gif.o(i._GetSizeAndColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetSizeAndColorTable &rArr; _GetImageDimension
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[29f]"></a>_DrawStreamedBitmapEx</STRONG> (Thumb, 144 bytes, Stack size 104 bytes, gui_stream.o(i._DrawStreamedBitmapEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawStreamedBitmapEx &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReadHeaderFromStream
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmapA565Ex
</UL>

<P><STRONG><a name="[b7]"></a>_DrawStreamedBitmapExNoPalette</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, gui_stream.o(i._DrawStreamedBitmapExNoPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawStreamedBitmapExNoPalette &rArr; GUI_ALLOC_RequestSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_stream.o(i._DrawStreamedBitmapEx)
</UL>
<P><STRONG><a name="[f6]"></a>_CalcSizeOfChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>_Encode</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>_GetCharCode</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>_GetCharSize</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[290]"></a>_DispFloatFix</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_valf.o(i._DispFloatFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DispFloatFix &rArr; GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispFloatFix
</UL>

<P><STRONG><a name="[f8]"></a>LCD_Color2Index_1</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, guicc_1.o(i.LCD_Color2Index_1))
<BR>[Address Reference Count : 1]<UL><LI> guicc_1.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>_GetIndexMask_1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_1.o(i._GetIndexMask_1))
<BR>[Address Reference Count : 1]<UL><LI> guicc_1.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>_Index2Color_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guicc_1.o(i._Index2Color_1))
<BR>[Address Reference Count : 1]<UL><LI> guicc_1.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>_Color2IndexBulk</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guicc_m565.o(i._Color2Index_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>_Index2ColorBulk</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>_DrawBitmap</STRONG> (Thumb, 1438 bytes, Stack size 136 bytes, guidev_1.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_1.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>_DrawVLine</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, guidev_1.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawVLine &rArr; _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>_FillRect</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, guidev_1.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_1.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_1.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_1.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>_GetPixelIndex</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guidev_1.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_1.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_1.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>_SetPixelIndex</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, guidev_1.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[483]"></a>_XY2PTR_BITOFFSET</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_1.o(i._XY2PTR_BITOFFSET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[109]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, guidev_1.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR_BITOFFSET
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR_BITOFFSET
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_1.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>_DrawBitmap</STRONG> (Thumb, 2058 bytes, Stack size 136 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>_DrawVLine</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawVLine
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>_FillRect</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>_GetDevData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>_GetDevFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>_GetDevProp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>_GetPixelIndex</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>_SetPixelIndex</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>_XorPixel</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[473]"></a>_Findx0</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[474]"></a>_Findx1</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[472]"></a>_Findy1</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[46d]"></a>_Invalidate1Abs</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[b0]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wm.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[af]"></a>_cbBackWin</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _cbBackWin &rArr; GUI_Clear &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[1a]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[11b]"></a>_DrawBitmapA565</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, gui_drawbitmap_a16.o(i._DrawBitmapA565))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _DrawBitmapA565 &rArr; GUI__DrawBitmapA16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_a16.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>_Color2IndexBulk</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>_Index2ColorBulk</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>_SetBkColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>_SetColor</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>_SetDrawMode</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[128]"></a>_DrawBitmap</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guidev_measure.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawBitmap &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_measure.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawHLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_measure.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DrawVLine &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>_FillPolygon</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, guidev_measure.o(i._FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _FillPolygon &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[c2]"></a>_FillPolygonAA</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, guidev_measure.o(i._FillPolygonAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _FillPolygonAA &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12b]"></a>_FillRect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_measure.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _FillRect &rArr; _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MarkRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>_GetDevProp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>_GetPixelIndex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_measure.o(i._GetPixelIndex))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>_GetRect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_measure.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[484]"></a>_MarkRect</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, guidev_measure.o(i._MarkRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _MarkRect
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygonAA
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillPolygon
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[12f]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_measure.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>_SetPixelIndex</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, guidev_measure.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>_XorPixel</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, guidev_measure.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XorPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_measure.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[139]"></a>_Color2Index_0</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[21]"></a>_NextPixel_End</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _NextPixel_End &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[48a]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, lcd_nextpixelapi.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NextPixel_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[20]"></a>_NextPixel_NextLine</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>_NextPixel_Start</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lcd_nextpixelapi.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[48e]"></a>_printf_core</STRONG> (Thumb, 748 bytes, Stack size 96 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>

<P><STRONG><a name="[492]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[490]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c4]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
